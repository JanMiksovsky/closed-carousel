{"version":3,"file":"TestCarousel.js","sources":["../node_modules/elix/src/core/internal.js","../node_modules/elix/src/base/internal.js","../node_modules/elix/src/core/dom.js","../node_modules/elix/src/core/AttributeMarshallingMixin.js","../node_modules/elix/src/core/ReactiveMixin.js","../node_modules/elix/src/core/ShadowTemplateMixin.js","../node_modules/elix/src/core/ReactiveElement.js","../node_modules/elix/src/base/DarkModeMixin.js","../node_modules/elix/src/core/htmlLiterals.js","../node_modules/elix/src/base/AriaRoleMixin.js","../node_modules/elix/src/base/ComposedFocusMixin.js","../node_modules/elix/src/base/DelegateInputLabelMixin.js","../node_modules/elix/src/base/FocusVisibleMixin.js","../node_modules/elix/src/base/KeyboardMixin.js","../node_modules/elix/src/base/DelegateFocusMixin.js","../node_modules/elix/src/base/WrappedStandardElement.js","../node_modules/elix/src/base/Button.js","../node_modules/elix/src/plain/PlainButtonMixin.js","../node_modules/elix/src/plain/PlainButton.js","../node_modules/elix/src/plain/PlainArrowDirectionButton.js","../node_modules/elix/src/base/accessibility.js","../node_modules/elix/src/base/AriaListMixin.js","../node_modules/elix/src/core/template.js","../node_modules/elix/src/base/ArrowDirectionMixin.js","../node_modules/elix/src/base/DirectionCursorMixin.js","../node_modules/elix/src/base/CursorAPIMixin.js","../node_modules/elix/src/base/CursorSelectMixin.js","../node_modules/elix/src/base/ItemsAPIMixin.js","../node_modules/elix/src/base/ItemsCursorMixin.js","../node_modules/elix/src/base/LanguageDirectionMixin.js","../node_modules/elix/src/base/scrolling.js","../node_modules/elix/src/base/CursorInViewMixin.js","../node_modules/elix/src/base/FormElementMixin.js","../node_modules/elix/src/base/content.js","../node_modules/elix/src/base/ItemsTextMixin.js","../node_modules/elix/src/base/KeyboardDirectionMixin.js","../node_modules/elix/src/base/KeyboardPagedCursorMixin.js","../node_modules/elix/src/base/constants.js","../node_modules/elix/src/base/KeyboardPrefixCursorMixin.js","../node_modules/elix/src/base/SelectedTextAPIMixin.js","../node_modules/elix/src/base/SelectedValueAPIMixin.js","../node_modules/elix/src/base/SingleSelectAPIMixin.js","../node_modules/elix/src/base/ContentItemsMixin.js","../node_modules/elix/src/base/SlotContentMixin.js","../node_modules/elix/src/base/SlotItemsMixin.js","../node_modules/elix/src/base/TapCursorMixin.js","../node_modules/elix/src/base/ListBox.js","../node_modules/elix/src/base/Modes.js","../node_modules/elix/src/base/Explorer.js","../node_modules/elix/src/base/EffectMixin.js","../node_modules/elix/src/base/fractionalSelection.js","../node_modules/elix/src/base/SlidingStage.js","../node_modules/elix/src/base/SwipeDirectionMixin.js","../node_modules/elix/src/base/TouchSwipeMixin.js","../node_modules/elix/src/base/TrackpadSwipeMixin.js","../node_modules/elix/src/base/Carousel.js","../node_modules/elix/src/plain/PlainArrowDirectionMixin.js","../node_modules/elix/src/base/ResizeMixin.js","../node_modules/elix/src/base/CenteredStrip.js","../node_modules/elix/src/plain/PlainCenteredStripOpacity.js","../node_modules/elix/src/plain/PlainCarouselMixin.js","../node_modules/elix/src/base/SelectableMixin.js","../node_modules/elix/src/base/SelectableButton.js","../node_modules/elix/src/plain/PlainPageDot.js","../node_modules/elix/src/plain/PlainCarousel.js","../node_modules/elix/src/plain/PlainSlidingStage.js","../src/TestCarousel.js"],"sourcesContent":["/**\n * Collection of shared Symbol objects for internal component communication.\n *\n * The shared `Symbol` objects in this module let mixins and a component\n * internally communicate without exposing these internal properties and methods\n * in the component's public API. They also help avoid unintentional name\n * collisions, as a component developer must specifically import the `internal`\n * module and reference one of its symbols.\n *\n * To use these `Symbol` objects in your own component, include this module and\n * then create a property or method whose key is the desired Symbol. E.g.,\n * [ShadowTemplateMixin](ShadowTemplateMixin) expects a component to define\n * a property called [template](#template):\n *\n *     import { template } from 'elix/src/core/internal.js';\n *     import { templateFrom } from 'elix/src/core/htmlLiterals.js'\n *     import ShadowTemplateMixin from 'elix/src/core/ShadowTemplateMixin.js';\n *\n *     class MyElement extends ShadowTemplateMixin(HTMLElement) {\n *       [template]() {\n *         return templateFrom.html`Hello, <em>world</em>.`;\n *       }\n *     }\n *\n * The above use of the internal `template` member lets the mixin find the\n * component's template in a way that will not pollute the component's public\n * API or interfere with other component logic. For example, if for some reason\n * the component wants to define a separate property with the plain string name,\n * \"template\", it can do so without affecting the above property setter.\n *\n * @module internal\n */\n\n/**\n * Symbol for the default state for this element.\n */\nexport const defaultState = Symbol(\"defaultState\");\n\n/**\n * Symbol for the `delegatesFocus` property.\n *\n * [DelegatesFocusMixin](DelegatesFocusMixin) defines this property, returning\n * true to indicate that the focus is being delegated, even in browsers that\n * don't support that natively. Mixins like [KeyboardMixin](KeyboardMixin) use\n * this to accommodate focus delegation.\n */\nexport const delegatesFocus = Symbol(\"delegatesFocus\");\n\n/**\n * Symbol for the `firstRender` property.\n *\n * [ReactiveMixin](ReactiveMixin) sets the property to `true` during the\n * element's first `render` and `rendered` callback, then `false` in subsequent\n * callbacks.\n *\n * You can inspect this property in your own `rendered` callback handler to do\n * work like wiring up events that should only happen once.\n */\nexport const firstRender = Symbol(\"firstRender\");\n\n/**\n * Symbol for the `focusTarget` property.\n *\n * [DelegatesFocusMixin](DelegatesFocusMixin) defines this property as either:\n * 1) the element itself, in browsers that support native focus delegation or,\n * 2) the shadow root's first focusable element.\n */\nexport const focusTarget = Symbol(\"focusTarget\");\n\n/**\n * Symbol for the `hasDynamicTemplate` property.\n *\n * If your component class does not always use the same template, define a\n * static class property getter with this symbol and have it return `true`.\n * This will disable template caching for your component.\n */\nexport const hasDynamicTemplate = Symbol(\"hasDynamicTemplate\");\n\n/**\n * Symbol for the `ids` property.\n *\n * [ShadowTemplateMixin](ShadowTemplateMixin) defines a shorthand function\n * `internal.ids` that can be used to obtain a reference to a shadow element with\n * a given ID.\n *\n * Example: if component's template contains a shadow element\n * `<button id=\"foo\">`, you can use the reference `this[ids].foo` to obtain\n * the corresponding button in the component instance's shadow tree.\n * The `ids` function is simply a shorthand for `getElementById`, so\n * `this[ids].foo` is the same as `this.shadowRoot.getElementById('foo')`.\n */\nexport const ids = Symbol(\"ids\");\n\n/**\n * Symbol for access to native HTML element internals.\n */\nexport const nativeInternals = Symbol(\"nativeInternals\");\n\n/**\n * Symbol for the `raiseChangeEvents` property.\n *\n * This property is used by mixins to determine whether they should raise\n * property change events. The standard HTML pattern is to only raise such\n * events in response to direct user interactions. For a detailed discussion\n * of this point, see the Gold Standard checklist item for\n * [Propery Change Events](https://github.com/webcomponents/gold-standard/wiki/Property%20Change%20Events).\n *\n * The above article describes a pattern for using a flag to track whether\n * work is being performed in response to internal component activity, and\n * whether the component should therefore raise property change events.\n * This `raiseChangeEvents` symbol is a shared flag used for that purpose by\n * all Elix mixins and components. Sharing this flag ensures that internal\n * activity (e.g., a UI event listener) in one mixin can signal other mixins\n * handling affected properties to raise change events.\n *\n * All UI event listeners (and other forms of internal handlers, such as\n * timeouts and async network handlers) should set `raiseChangeEvents` to\n * `true` at the start of the event handler, then `false` at the end:\n *\n *     this.addEventListener('click', event => {\n *       this[raiseChangeEvents] = true;\n *       // Do work here, possibly setting properties, like:\n *       this.foo = 'Hello';\n *       this[raiseChangeEvents] = false;\n *     });\n *\n * Elsewhere, property setters that raise change events should only do so it\n * this property is `true`:\n *\n *     set foo(value) {\n *       // Save foo value here, do any other work.\n *       if (this[raiseChangeEvents]) {\n *         export const event = new CustomEvent('foochange');\n *         this.dispatchEvent(event);\n *       }\n *     }\n *\n * In this way, programmatic attempts to set the `foo` property will not trigger\n * the `foochange` event, but UI interactions that update that property will\n * cause those events to be raised.\n */\nexport const raiseChangeEvents = Symbol(\"raiseChangeEvents\");\n\n/**\n * Symbol for the `render` method.\n *\n * [ReactiveMixin](ReactiveMixin) invokes this `internal.render` method to give\n * the component a chance to render recent changes in component state.\n */\nexport const render = Symbol(\"render\");\n\n/**\n * Symbol for the `renderChanges` method.\n *\n * [ReactiveMixin](ReactiveMixin) invokes this method in response to a\n * `setState` call; you should generally not invoke this method yourself.\n */\nexport const renderChanges = Symbol(\"renderChanges\");\n\n/**\n * Symbol for the `rendered` method.\n *\n * [ReactiveMixin](ReactiveMixin) will invoke this method after your\n * element has completely finished rendering.\n *\n * If you only want to do work the first time rendering happens (for example, if\n * you want to wire up event handlers), your `internal.rendered` implementation\n * can inspect the `internal.firstRender` flag.\n */\nexport const rendered = Symbol(\"rendered\");\n\n/**\n * Symbol for the `rendering` property.\n *\n * [ReactiveMixin](ReactiveMixin) sets this property to true during rendering,\n * at other times it will be false.\n */\nexport const rendering = Symbol(\"rendering\");\n\n/**\n * Symbol for the `setState` method.\n *\n * A component using [ReactiveMixin](ReactiveMixin) can invoke this method to\n * apply changes to the element's current state.\n */\nexport const setState = Symbol(\"setState\");\n\n/**\n * Symbol for the `shadowRoot` property.\n *\n * This property holds a reference to an element's shadow root, like\n * `this.shadowRoot`. This propery exists because `this.shadowRoot` is not\n * available for components with closed shadow roots.\n * [ShadowTemplateMixin](ShadowTemplateMixin) creates open shadow roots by\n * default, but you can opt into creating closed shadow roots; see\n * [shadowRootMode](internal#internal.shadowRootMode).\n */\nexport const shadowRoot = Symbol(\"shadowRoot\");\n\n/**\n * Symbol for the `shadowRootMode` property.\n *\n * If true (the default), then [ShadowTemplateMixin](ShadowTemplateMixin) will\n * create an open shadow root when the component is instantiated. Set this to\n * false if you want to programmatically hide component internals in a closed\n * shadow root.\n */\nexport const shadowRootMode = Symbol(\"shadowRootMode\");\n\n/**\n * Symbol for the element's current state.\n *\n * This is managed by [ReactiveMixin](ReactiveMixin).\n */\nexport const state = Symbol(\"state\");\n\n/**\n * Symbol for the `stateEffects` method.\n *\n * See [stateEffects](ReactiveMixin#stateEffects).\n */\nexport const stateEffects = Symbol(\"stateEffects\");\n\n/**\n * Symbol for the `template` method.\n *\n * [ShadowTemplateMixin](ShadowTemplateMixin) uses this property to obtain a\n * component's template, which it will clone into a component's shadow root.\n */\nexport const template = Symbol(\"template\");\n","/**\n * Collection of shared Symbol objects for internal component communication.\n *\n * The shared `Symbol` objects in this module let mixins and a component\n * internally communicate without exposing these internal properties and methods\n * in the component's public API. They also help avoid unintentional name\n * collisions, as a component developer must specifically import the `internal`\n * module and reference one of its symbols.\n *\n * To use these `Symbol` objects in your own component, include this module and\n * then create a property or method whose key is the desired Symbol. E.g.,\n * [ShadowTemplateMixin](ShadowTemplateMixin) expects a component to define\n * a property called [template](#template):\n *\n *     import { template } from 'elix/src/core/internal.js';\n *     import { templateFrom } from 'elix/src/core/htmlLiterals.js'\n *     import ShadowTemplateMixin from 'elix/src/core/ShadowTemplateMixin.js';\n *\n *     class MyElement extends ShadowTemplateMixin(HTMLElement) {\n *       [template]() {\n *         return templateFrom.html`Hello, <em>world</em>.`;\n *       }\n *     }\n *\n * The above use of the internal `template` member lets the mixin find the\n * component's template in a way that will not pollute the component's public\n * API or interfere with other component logic. For example, if for some reason\n * the component wants to define a separate property with the plain string name,\n * \"template\", it can do so without affecting the above property setter.\n *\n * @module internal\n */\n\nimport * as coreInternal from \"../core/internal.js\";\n\n/**\n * Symbol for the `checkSize` method.\n *\n * If defined, this method will be invoked by [ResizeMixin](ResizeMixin)\n * when an element's size may have changed. The default implementation of\n * this method compares the element's current `clientHeight` and `clientWidth`\n * properties against the last known values of those properties (saved in\n * `state.clienHeight` and `state.clientWidth`).\n *\n * Components should override this method if they contain elements that may need\n * to know about size changes as well. For example, when an [Overlay](Overlay)\n * mixin opens, it invokes this method on any content elements that define it.\n * This gives the contents a chance to resize in response to being displayed.\n */\nexport const checkSize = Symbol(\"checkSize\");\n\n/**\n * Symbol for the `closestAvailableItemIndex` method.\n *\n * This method is defined by [ItemsCursorMixin](ItemsCursorMixin). You can call\n * this if you want to find an item at a particular location, but may need to\n * account for the fact that the item at that position is not available, and\n * would like to find the closest item that is available.\n */\nexport const closestAvailableItemIndex = Symbol(\"closestAvailableItemIndex\");\n\n/**\n * Symbol for the `contentSlot` property.\n *\n * [SlotContentMixin](SlotContentMixin) uses this to identify which slot\n * element in the component's shadow tree that holds the component's content.\n * By default, this is the first slot element with no \"name\" attribute. You\n * can override this to return a different slot.\n */\nexport const contentSlot = Symbol(\"contentSlot\");\n\n/**\n * The default state for this element.\n */\nexport const defaultState = coreInternal.defaultState;\n\n/**\n * Symbol for the `defaultTabIndex` property.\n *\n * [KeyboardMixin](KeyboardMixin) uses this if it is unable to successfully\n * parse a string tabindex attribute.\n */\nexport const defaultTabIndex = Symbol(\"defaultTabIndex\");\n\n/**\n * Symbol for the `delegatesFocus` property.\n *\n * [DelegatesFocusMixin](DelegatesFocusMixin) defines this property, returning\n * true to indicate that the focus is being delegated, even in browsers that\n * don't support that natively. Mixins like [KeyboardMixin](KeyboardMixin) use\n * this to accommodate focus delegation.\n */\nexport const delegatesFocus = coreInternal.delegatesFocus;\n\n/**\n * Symbol for the `effectEndTarget` property.\n *\n * [TransitionEffectMixin](TransitionEffectMixin) inspects this property to\n * determine which element's `transitionend` event will signal the end of a\n * transition effect.\n */\nexport const effectEndTarget = Symbol(\"effectEndTarget\");\n\n/**\n * Symbol for the `firstRender` property.\n *\n * [ReactiveMixin](ReactiveMixin) sets the property to `true` during the\n * element's first `connectedCallback`, then `false` in subsequent callbacks.\n *\n * You can inspect this property in your own `connectedCallback` handler\n * to do work like wiring up events that should only happen once.\n */\nexport const firstRender = coreInternal.firstRender;\n\n/**\n * Symbol for the `focusTarget` property.\n *\n * [DelegatesFocusMixin](DelegatesFocusMixin) defines this property as either:\n * 1) the element itself, in browsers that support native focus delegation or,\n * 2) the shadow root's first focusable element.\n */\nexport const focusTarget = coreInternal.focusTarget;\n\n/**\n * Symbol for the `getItemText` method.\n *\n * This method can be applied to an item to return its text.\n * [KeyboardPrefixCursorMixin](KeyboardPrefixCursorMixin) uses this to\n * obtain the text for each item in a list, then matches keypresses again that\n * text.\n *\n * This method takes a single parameter: the `HTMLElement` of the item from\n * which text should be extracted.\n */\nexport const getItemText = Symbol(\"getItemText\");\n\n/**\n * Symbol for the `goDown` method.\n *\n * This method is invoked when the user wants to go/navigate down.\n */\nexport const goDown = Symbol(\"goDown\");\n\n/**\n * Symbol for the `goEnd` method.\n *\n * This method is invoked when the user wants to go/navigate to the end (e.g.,\n * of a list).\n */\nexport const goEnd = Symbol(\"goEnd\");\n\n/**\n * Symbol for the `goFirst` method.\n *\n * This method is invoked when the user wants to go to the first item in a list.\n */\nexport const goFirst = Symbol(\"goFirst\");\n\n/**\n * Symbol for the `goLast` method.\n *\n * This method is invoked when the user wants to go to the last item in a list.\n */\nexport const goLast = Symbol(\"goLast\");\n\n/**\n * Symbol for the `goLeft` method.\n *\n * This method is invoked when the user wants to go/navigate left. Mixins that\n * make use of this method include\n * [KeyboardDirectionMixin](KeyboardDirectionMixin) and\n * [SwipeDirectionMixin](SwipeDirectionMixin).\n */\nexport const goLeft = Symbol(\"goLeft\");\n\n/**\n * Symbol for the `goNext` method.\n *\n * This method is invoked when the user wants to go/navigate to the next item.\n */\nexport const goNext = Symbol(\"goNext\");\n\n/**\n * Symbol for the `goPrevious` method.\n *\n * This method is invoked when the user wants to go/navigate to the previous item.\n */\nexport const goPrevious = Symbol(\"goPrevious\");\n\n/**\n * Symbol for the `goRight` method.\n *\n * This method is invoked when the user wants to go/navigate right. Mixins\n * that make use of this method include\n * [KeyboardDirectionMixin](KeyboardDirectionMixin) and\n * [SwipeDirectionMixin](SwipeDirectionMixin).\n */\nexport const goRight = Symbol(\"goRight\");\n\n/**\n * Symbol for the `goStart` method.\n *\n * This method is invoked when the user wants to go/navigate to the start\n * (e.g., of a list).\n */\nexport const goStart = Symbol(\"goStart\");\n\n/**\n * Symbol for the `goToItemWithPrefix` method.\n *\n * This method is invoked by\n * [KeyboardPrefixCursorMixin](KeyboardPrefixCursorMixin) when the user types\n * text characters.\n */\nexport const goToItemWithPrefix = Symbol(\"goToItemWithPrefix\");\n\n/**\n * Symbol for the `goUp` method.\n *\n * This method is invoked when the user wants to go/navigate up.\n */\nexport const goUp = Symbol(\"goUp\");\n\n/**\n * Symbol for the `hasDynamicTemplate` property.\n *\n * If your component class does not always use the same template, define a\n * static class property getter with this symbol and have it return `true`.\n * This will disable template caching for your component.\n */\nexport const hasDynamicTemplate = coreInternal.hasDynamicTemplate;\n\n/**\n * Symbol for the `ids` property.\n *\n * [ShadowTemplateMixin](ShadowTemplateMixin) defines a shorthand function\n * `internal.ids` that can be used to obtain a reference to a shadow element with\n * a given ID.\n *\n * Example: if component's template contains a shadow element\n * `<button id=\"foo\">`, you can use the reference `this[ids].foo` to obtain\n * the corresponding button in the component instance's shadow tree.\n * The `ids` function is simply a shorthand for `getElementById`, so\n * `this[ids].foo` is the same as `this.shadowRoot.getElementById('foo')`.\n */\nexport const ids = coreInternal.ids;\n\n/**\n * Symbol for the `inputDelegate` property.\n *\n * [DelegateInputSelectionMixin](DelegateInputSelectionMixin) uses this property\n * to indicate which shadow element is the input-type element to which text\n * selection methods and properties should be delegated.\n */\nexport const inputDelegate = Symbol(\"inputDelegate\");\n\n/**\n * Symbol for the `itemsDelegate` property.\n *\n * A component using [DelegateItemsMixin](DelegateItemsMixin) uses this property\n * to indicate which one of its shadow elements is the one whose `items`\n * property will be treated as the component's own `items`.\n */\nexport const itemsDelegate = Symbol(\"itemsDelegate\");\n\n/**\n * Symbol for the `keydown` method.\n *\n * This method is invoked when an element receives a `keydown` event.\n *\n * An implementation of `internal.keydown` should return `true` if it handled\n * the event, and `false` otherwise. If `true` is returned (the event was\n * handled), `KeyboardMixin` invokes the event's `preventDefault` and\n * `stopPropagation` methods to let the browser know the event was handled.\n *\n * The convention for handling `internal.keydown` is that the last mixin\n * applied wins. That is, if an implementation of `internal.keydown` *did*\n * handle the event, it can return immediately. If it did not, it should\n * invoke `super` to let implementations further up the prototype chain have\n * their chance.\n *\n * This method takes a `KeyboardEvent` parameter that contains the event being\n * processed.\n */\nexport const keydown = Symbol(\"keydown\");\n\n/**\n * Symbol for the `mouseenter` method.\n *\n * [HoverMixin](HoverMixin) invokes this method when the user moves the\n * mouse over a component. That mixin provides a base implementation of this\n * method, but you can extend it to do additional work on `mouseenter`.\n *\n * This method takes a `MouseEvent` parameter that contains the event being\n * processed.\n */\nexport const mouseenter = Symbol(\"mouseenter\");\n\n/**\n * Symbol for the `mouseleave` method.\n *\n * [HoverMixin](HoverMixin) invokes this method when the user moves off a\n * component. That mixin provides a base implementation of this method, but\n * you can extend it to do additional work on `mouseleave`.\n *\n * This method takes a `MouseEvent` parameter that contains the event being\n * processed.\n */\nexport const mouseleave = Symbol(\"mouseleave\");\n\n/**\n * Symbol for access to native HTML element internals.\n */\nexport const nativeInternals = coreInternal.nativeInternals;\n\n/**\n * Symbol for the `raiseChangeEvents` property.\n *\n * This property is used by mixins to determine whether they should raise\n * property change events. The standard HTML pattern is to only raise such\n * events in response to direct user interactions. For a detailed discussion\n * of this point, see the Gold Standard checklist item for\n * [Propery Change Events](https://github.com/webcomponents/gold-standard/wiki/Property%20Change%20Events).\n *\n * The above article describes a pattern for using a flag to track whether\n * work is being performed in response to internal component activity, and\n * whether the component should therefore raise property change events.\n * This `raiseChangeEvents` symbol is a shared flag used for that purpose by\n * all Elix mixins and components. Sharing this flag ensures that internal\n * activity (e.g., a UI event listener) in one mixin can signal other mixins\n * handling affected properties to raise change events.\n *\n * All UI event listeners (and other forms of internal handlers, such as\n * timeouts and async network handlers) should set `raiseChangeEvents` to\n * `true` at the start of the event handler, then `false` at the end:\n *\n *     this.addEventListener('click', event => {\n *       this[raiseChangeEvents] = true;\n *       // Do work here, possibly setting properties, like:\n *       this.foo = 'Hello';\n *       this[raiseChangeEvents] = false;\n *     });\n *\n * Elsewhere, property setters that raise change events should only do so it\n * this property is `true`:\n *\n *     set foo(value) {\n *       // Save foo value here, do any other work.\n *       if (this[raiseChangeEvents]) {\n *         export const event = new CustomEvent('foochange');\n *         this.dispatchEvent(event);\n *       }\n *     }\n *\n * In this way, programmatic attempts to set the `foo` property will not trigger\n * the `foochange` event, but UI interactions that update that property will\n * cause those events to be raised.\n */\nexport const raiseChangeEvents = coreInternal.raiseChangeEvents;\n\n/**\n * Symbol for the `render` method.\n *\n * [ReactiveMixin](ReactiveMixin) invokes this `internal.render` method to give\n * the component a chance to render recent changes in component state.\n */\nexport const render = coreInternal.render;\n\n/**\n * Symbol for the `renderChanges` method.\n *\n * [ReactiveMixin](ReactiveMixin) invokes this method in response to a\n * `setState` call; you should generally not invoke this method yourself.\n */\nexport const renderChanges = coreInternal.renderChanges;\n\n/**\n * Symbol for the `renderDataToElement` method.\n *\n * [DataItemsMixin](DataItemsMixin) invokes this method to render data to an\n * element being used as an item in a list.\n */\nexport const renderDataToElement = Symbol(\"renderDataToElement\");\n\n/**\n * Symbol for the `rendered` method.\n *\n * [ReactiveMixin](ReactiveMixin) will invoke this method after your\n * element has completely finished rendering.\n */\nexport const rendered = coreInternal.rendered;\n\n/**\n * Symbol for the `rendering` property.\n *\n * [ReactiveMixin](ReactiveMixin) sets this property to true during rendering,\n * at other times it will be false.\n */\nexport const rendering = coreInternal.rendering;\n\n/**\n * Symbol for the `scrollTarget` property.\n *\n * This property indicates which element in a component's shadow subtree\n * should be scrolled. [CursorInViewMixin](CursorInViewMixin) can use\n * this property to determine which element should be scrolled to keep the\n * selected item in view.\n */\nexport const scrollTarget = Symbol(\"scrollTarget\");\n\n/**\n * Symbol for the `setState` method.\n *\n * A component using [ReactiveMixin](ReactiveMixin) can invoke this method to\n * apply changes to the element's current state.\n */\nexport const setState = coreInternal.setState;\n\n/**\n * Symbol for the `shadowRoot` property.\n *\n * This property holds a reference to an element's shadow root, like\n * `this.shadowRoot`. This propery exists because `this.shadowRoot` is not\n * available for components with closed shadow roots.\n * [ShadowTemplateMixin](ShadowTemplateMixin) creates open shadow roots by\n * default, but you can opt into creating closed shadow roots; see\n * [shadowRootMode](internal#internal.shadowRootMode).\n */\nexport const shadowRoot = coreInternal.shadowRoot;\n\n/**\n * Symbol for the `shadowRootMode` property.\n *\n * If true (the default), then [ShadowTemplateMixin](ShadowTemplateMixin) will\n * create an open shadow root when the component is instantiated. Set this to\n * false if you want to programmatically hide component internals in a closed\n * shadow root.\n */\nexport const shadowRootMode = coreInternal.shadowRootMode;\n\n/**\n * Symbol for the `startEffect` method.\n *\n * A component using [TransitionEffectMixin](TransitionEffectMixin) can invoke\n * this method to trigger the application of a named, asynchronous CSS\n * transition effect.\n *\n * This method takes a single `string` parameter giving the name of the effect\n * to start.\n */\nexport const startEffect = Symbol(\"startEffect\");\n\n/**\n * The element's current state.\n *\n * This is managed by [ReactiveMixin](ReactiveMixin).\n */\nexport const state = coreInternal.state;\n\nexport const stateEffects = coreInternal.stateEffects;\n\n/**\n * Symbol for the `swipeDown` method.\n *\n * The swipe mixin [TouchSwipeMixin](TouchSwipeMixin) invokes this method when\n * the user finishes a gesture to swipe down.\n */\nexport const swipeDown = Symbol(\"swipeDown\");\n\n/**\n * Symbol for the `swipeDownComplete` method.\n *\n * [SwipeCommandsMixin](SwipeCommandsMixin) invokes this method after any\n * animated transition associated with a swipe down has completed.\n */\nexport const swipeDownComplete = Symbol(\"swipeDownComplete\");\n\n/**\n * Symbol for the `swipeLeft` method.\n *\n * The swipe mixins [TouchSwipeMixin](TouchSwipeMixin) and\n * [TrackpadSwipeMixin](TrackpadSwipeMixin) invoke this method when the user\n * finishes a gesture to swipe left.\n */\nexport const swipeLeft = Symbol(\"swipeLeft\");\n\n/**\n * Symbol for the `swipeLeftTransitionEnd` method.\n *\n * [SwipeCommandsMixin](SwipeCommandsMixin) invokes this method after any\n * animated transition associated with a swipe left has completed.\n */\nexport const swipeLeftTransitionEnd = Symbol(\"swipeLeftTransitionEnd\");\n\n/**\n * Symbol for the `swipeRight` method.\n *\n * The swipe mixins [TouchSwipeMixin](TouchSwipeMixin) and\n * [TrackpadSwipeMixin](TrackpadSwipeMixin) invoke this method when the user\n * finishes a gesture to swipe right.\n */\nexport const swipeRight = Symbol(\"swipeRight\");\n\n/**\n * Symbol for the `swipeRightTransitionEnd` method.\n *\n * [SwipeCommandsMixin](SwipeCommandsMixin) invokes this method after any\n * animated transition associated with a swipe right has completed.\n */\nexport const swipeRightTransitionEnd = Symbol(\"swipeRightTransitionEnd\");\n\n/**\n * Symbol for the `swipeUp` method.\n *\n * The swipe mixin [TouchSwipeMixin](TouchSwipeMixin) invokes this method when\n * the user finishes a gesture to swipe up.\n */\nexport const swipeUp = Symbol(\"swipeUp\");\n\n/**\n * Symbol for the `swipeUpComplete` method.\n *\n * [SwipeCommandsMixin](SwipeCommandsMixin) invokes this method after any\n * animated transition associated with a swipe up has completed.\n */\nexport const swipeUpComplete = Symbol(\"swipeUpComplete\");\n\n/**\n * Symbol for the `swipeStart` method.\n *\n * [TouchSwipeMixin](TouchSwipeMixin) and\n * [TrackpadSwipeMixin](TrackpadSwipeMixin) invoke this method when a swipe\n * is starting, passing in the starting (x, y) client coordinate.\n */\nexport const swipeStart = Symbol(\"swipeStart\");\n\n/**\n * Symbol for the `swipeTarget` property.\n *\n * By default, the swipe mixins [TouchSwipeMixin](TouchSwipeMixin) and\n * [TrackpadSwipeMixin](TrackpadSwipeMixin) assume that the element the user\n * is swiping the top-level element. In some cases (e.g., [Drawer](Drawer)),\n * the component wants to let the user swipe a shadow element. In such cases,\n * this property should return the element that should be swiped.\n *\n * The swipe target's `offsetWidth` is used by the mixin to calculate the\n * `state.swipeFraction` member when the user drags their finger. The\n * `swipeFraction` is the distance the user has dragged in the current drag\n * operation over that `offsetWidth`.\n */\nexport const swipeTarget = Symbol(\"swipeTarget\");\n\n/**\n * Symbol for the `tap` method.\n *\n * This method is invoked when an element receives an operation that should\n * be interpreted as a tap. [TapCursorMixin](TapCursorMixin)\n * invokes this when the element receives a `mousedown` event, for example.\n */\nexport const tap = Symbol(\"tap\");\n\n/**\n * Symbol for the `template` method.\n *\n * [ShadowTemplateMixin](ShadowTemplateMixin) uses this property to obtain a\n * component's template, which it will clone into a component's shadow root.\n */\nexport const template = coreInternal.template;\n\n/**\n * Symbol for the `toggleSelectedFlag` method.\n *\n * [ItemsMultiSelectMixin](ItemsMultiSelectMixin) exposes this method to let\n * other mixins like [MultiSelectAPIMixin](MultiSelectAPIMixin) toggle the\n * selected state of an individual item.\n */\nexport const toggleSelectedFlag = Symbol(\"toggleSelectedFlag\");\n\n// Expose internals as a global when debugging.\nconst elixdebug = new URLSearchParams(location.search).get(\"elixdebug\");\nif (elixdebug === \"true\") {\n  /** @type {any} */ (window).elix = {\n    internal: {\n      checkSize,\n      closestAvailableItemIndex,\n      contentSlot,\n      defaultState,\n      defaultTabIndex,\n      delegatesFocus,\n      effectEndTarget,\n      firstRender,\n      focusTarget,\n      getItemText,\n      goDown,\n      goEnd,\n      goFirst,\n      goLast,\n      goLeft,\n      goNext,\n      goPrevious,\n      goRight,\n      goStart,\n      goToItemWithPrefix,\n      goUp,\n      hasDynamicTemplate,\n      ids,\n      inputDelegate,\n      itemsDelegate,\n      keydown,\n      mouseenter,\n      mouseleave,\n      nativeInternals,\n      event,\n      raiseChangeEvents,\n      render,\n      renderChanges,\n      renderDataToElement,\n      rendered,\n      rendering,\n      scrollTarget,\n      setState,\n      shadowRoot,\n      shadowRootMode,\n      startEffect,\n      state,\n      stateEffects,\n      swipeDown,\n      swipeDownComplete,\n      swipeLeft,\n      swipeLeftTransitionEnd,\n      swipeRight,\n      swipeRightTransitionEnd,\n      swipeUp,\n      swipeUpComplete,\n      swipeStart,\n      swipeTarget,\n      tap,\n      template,\n      toggleSelectedFlag,\n    },\n  };\n}\n","import { focusTarget, nativeInternals } from \"./internal.js\";\n\n/**\n * Miscellaneous DOM helpers for web components\n *\n * @module dom\n */\n\nconst mousedownListenerKey = Symbol(\"mousedownListener\");\n\n/**\n * Given a string value for a named boolean attribute, return `true` if the\n * value is either: a) the empty string, or b) a case-insensitive match for the\n * name.\n *\n * This is native HTML behavior; see the MDN documentation on [boolean\n * attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes#Boolean_Attributes)\n * for the reasoning.\n *\n * Given a null value, this return `false`.\n * Given a boolean value, this return the value as is.\n *\n * @param {string} name\n * @param {string|boolean|null} value\n */\nexport function booleanAttributeValue(name, value) {\n  return typeof value === \"boolean\"\n    ? value\n    : typeof value === \"string\"\n    ? value === \"\" || name.toLowerCase() === value.toLowerCase()\n    : false;\n}\n\n/**\n * Return the closest focusable node that's either the node itself (if it's\n * focusable), or the closest focusable ancestor in the *composed* tree.\n *\n * If no focusable node is found, this returns null.\n *\n * @param {Node} node\n * @returns {HTMLElement|null}\n */\nexport function closestFocusableNode(node) {\n  for (const current of selfAndComposedAncestors(node)) {\n    // If the current element defines a focusTarget (e.g., via\n    // DelegateFocusMixin), use that, otherwise use the element itself.\n    const target = current[focusTarget] || current;\n    // We want an element that has a tabIndex of 0 or more. We ignore disabled\n    // elements, and slot elements (which oddly have a tabIndex of 0).\n    /** @type {any} */ const cast = target;\n    const focusable =\n      target instanceof HTMLElement &&\n      target.tabIndex >= 0 &&\n      !cast.disabled &&\n      !(target instanceof HTMLSlotElement);\n    if (focusable) {\n      return target;\n    }\n  }\n  return null;\n}\n\n/**\n * Return the ancestors of the given node in the composed tree.\n *\n * In the composed tree, the ancestor of a node assigned to a slot is that slot,\n * not the node's DOM ancestor. The ancestor of a shadow root is its host.\n *\n * @param {Node} node\n * @returns {Iterable<Node>}\n */\nexport function* composedAncestors(node) {\n  /** @type {Node|null} */\n  let current = node;\n  while (true) {\n    current =\n      current instanceof HTMLElement && current.assignedSlot\n        ? current.assignedSlot\n        : current instanceof ShadowRoot\n        ? current.host\n        : current.parentNode;\n    if (current) {\n      yield current;\n    } else {\n      break;\n    }\n  }\n}\n\n/**\n * Returns true if the first node contains the second, even if the second node\n * is in a shadow tree.\n *\n * The standard Node.contains() function does not account for Shadow DOM, and\n * returns false if the supplied target node is sitting inside a shadow tree\n * within the container.\n *\n * @param {Node} container - The container to search within.\n * @param {Node} target - The node that may be inside the container.\n * @returns {boolean} - True if the container contains the target node.\n */\nexport function deepContains(container, target) {\n  /** @type {any} */\n  let current = target;\n  while (current) {\n    const parent = current.assignedSlot || current.parentNode || current.host;\n    if (parent === container) {\n      return true;\n    }\n    current = parent;\n  }\n  return false;\n}\n\n/**\n * Return the first focusable element in the composed tree below the given root.\n * The composed tree includes nodes assigned to slots.\n *\n * This heuristic considers only the document order of the elements below the\n * root and whether a given element is focusable. It currently does not respect\n * the tab sort order defined by tabindex values greater than zero.\n *\n * @param {Node} root - the root of the tree in which to search\n * @returns {HTMLElement|null} - the first focusable element, or null if none\n * was found\n */\nexport function firstFocusableElement(root) {\n  // CSS selectors for focusable elements from\n  // https://stackoverflow.com/a/30753870/76472\n  const focusableQuery =\n    'a[href],area[href],button:not([disabled]),details,iframe,input:not([disabled]),select:not([disabled]),textarea:not([disabled]),[contentEditable=\"true\"],[tabindex]';\n  // Walk the tree looking for nodes that match the above selectors.\n  const walker = walkComposedTree(\n    root,\n    (/** @type {Node} */ node) =>\n      node instanceof HTMLElement &&\n      node.matches(focusableQuery) &&\n      node.tabIndex >= 0\n  );\n  // We only actually need the first matching value.\n  const { value } = walker.next();\n  // value, if defined, will always be an HTMLElement, but we do the following\n  // check to pass static type checking.\n  return value instanceof HTMLElement ? value : null;\n}\n\n/**\n * Trap any `mousedown` events on the `origin` element and prevent the default\n * behavior from setting the focus on that element. Instead, put the focus on\n * the `target` element (or, if the `target` is not focusable, on the target's\n * closest focusable ancestor).\n *\n * If this method is called again with the same `origin` element, the old\n * forwarding is overridden, and focus will now go to the new `target` element.\n *\n * If the `target` parameter is `null`, focus handling will be removed from the\n * indicated `origin`.\n *\n * @param {HTMLElement} origin\n * @param {HTMLElement|null} target\n */\nexport function forwardFocus(origin, target) {\n  if (origin[mousedownListenerKey]) {\n    // Origin was previously forwarding focus, probably to a different target.\n    // Remove the previous event listener.\n    origin.removeEventListener(\"mousedown\", origin[mousedownListenerKey]);\n  }\n  if (target) {\n    origin[mousedownListenerKey] = (/** @type {MouseEvent} */ event) => {\n      // Only process events for the main (usually left) button.\n      if (event.button !== 0) {\n        return;\n      }\n      // What element wants the focus?\n      const desiredTarget = target[focusTarget] || target;\n      // What ancestor can actually take the focus?\n      const focusableTarget = closestFocusableNode(desiredTarget);\n      if (focusableTarget) {\n        focusableTarget.focus();\n        event.preventDefault();\n      }\n    };\n    origin.addEventListener(\"mousedown\", origin[mousedownListenerKey]);\n  }\n}\n\n/**\n * Search a list element for the item that contains the specified target.\n *\n * When dealing with UI events (e.g., mouse clicks) that may occur in\n * subelements inside a list item, you can use this routine to obtain the\n * containing list item.\n *\n * @param {NodeList|Node[]} items - A list element containing a set of items\n * @param {Node} target - A target element that may or may not be an item in the\n * list.\n * @returns {number} - The index of the list child that is or contains the\n * indicated target node. Returns -1 if not found.\n */\nexport function indexOfItemContainingTarget(items, target) {\n  return Array.prototype.findIndex.call(\n    items,\n    (/** @type Node */ item) => item === target || deepContains(item, target)\n  );\n}\n\n/**\n * Return true if the event came from within the node (or from the node itself);\n * false otherwise.\n *\n * @param {Node} node - The node to consider in relation to the event\n * @param {Event} event - The event which may have been raised within/by the\n * node\n * @returns {boolean} - True if the event was raised within or by the node\n */\nexport function ownEvent(node, event) {\n  /** @type {any} */\n  const cast = event;\n  const eventSource = cast.composedPath()[0];\n  return node === eventSource || deepContains(node, eventSource);\n}\n\n/**\n * Adds or removes the element's `childNodes` as necessary to match the nodes\n * indicated in the `childNodes` parameter.\n *\n * This operation is useful in cases where you maintain your own set of nodes\n * which should be rendered as the children of some element. When you insert or\n * remove nodes in that set, you can invoke this function to efficiently apply\n * the new set as a delta to the existing children. Only the items in the set\n * that have actually changed will be added or removed.\n *\n * @param {Element} element - the element to update\n * @param {(NodeList|Node[])} childNodes - the set of nodes to apply\n */\nexport function updateChildNodes(element, childNodes) {\n  // If the childNodes parameter is the actual childNodes of an element, then as\n  // we append those nodes to the indicated target element, they'll get removed\n  // from the original set. To keep the list stable, we make a copy.\n  const copy = [...childNodes];\n\n  const oldLength = element.childNodes.length;\n  const newLength = copy.length;\n  const length = Math.max(oldLength, newLength);\n  for (let i = 0; i < length; i++) {\n    const oldChild = element.childNodes[i];\n    const newChild = copy[i];\n    if (i >= oldLength) {\n      // Add new item not in old set.\n      element.append(newChild);\n    } else if (i >= newLength) {\n      // Remove old item past end of new set.\n      element.removeChild(element.childNodes[newLength]);\n    } else if (oldChild !== newChild) {\n      if (copy.indexOf(oldChild, i) >= i) {\n        // Old node comes later in final set. Insert the new node rather than\n        // replacing it so that we don't detach the old node only to have to\n        // reattach it later.\n        element.insertBefore(newChild, oldChild);\n      } else {\n        // Replace old item with new item.\n        element.replaceChild(newChild, oldChild);\n      }\n    }\n  }\n}\n\n/**\n * Returns the set that includes the given node and all of its ancestors in the\n * composed tree. See [composedAncestors](#composedAncestors) for details on the\n * latter.\n *\n * @param {Node} node\n * @returns {Iterable<Node>}\n */\nexport function* selfAndComposedAncestors(node) {\n  if (node) {\n    yield node;\n    yield* composedAncestors(node);\n  }\n}\n\n/**\n * Set an internal state for browsers that support the `:state` selector, as\n * well as an attribute of the same name to permit state-based styling on older\n * browsers.\n *\n * When all browsers support that, we'd like to deprecate use of attributes.\n *\n * @param {Element} element\n * @param {string} name\n * @param {boolean} value\n */\nexport function setInternalState(element, name, value) {\n  element.toggleAttribute(name, value);\n  if (element[nativeInternals] && element[nativeInternals].states) {\n    element[nativeInternals].states.toggle(name, value);\n  }\n}\n\n/** @type {IndexedObject<boolean>} */\nexport const standardBooleanAttributes = {\n  checked: true,\n  defer: true,\n  disabled: true,\n  hidden: true,\n  ismap: true,\n  multiple: true,\n  noresize: true,\n  readonly: true,\n  selected: true,\n};\n\n/**\n * Walk the composed tree at the root for elements that pass the given filter.\n *\n * Note: the jsDoc types required for the filter function are too complex for\n * the current jsDoc parser to support strong type-checking.\n *\n * @private\n * @param {Node} node\n * @param {function} filter\n * @returns {IterableIterator<Node>}\n */\nfunction* walkComposedTree(node, filter) {\n  if (filter(node)) {\n    yield node;\n  }\n  let children;\n  if (node instanceof HTMLElement && node.shadowRoot) {\n    // Walk the shadow instead of the light DOM.\n    children = node.shadowRoot.children;\n  } else {\n    const assignedNodes =\n      node instanceof HTMLSlotElement\n        ? node.assignedNodes({ flatten: true })\n        : [];\n    children =\n      assignedNodes.length > 0\n        ? // Walk light DOM nodes assigned to this slot.\n          assignedNodes\n        : // Walk light DOM children.\n          node.childNodes;\n  }\n  if (children) {\n    for (let i = 0; i < children.length; i++) {\n      yield* walkComposedTree(children[i], filter);\n    }\n  }\n}\n","import { booleanAttributeValue, standardBooleanAttributes } from \"./dom.js\";\nimport { rendering } from \"./internal.js\";\n\n// Memoized maps of attribute to property names and vice versa.\n// We initialize this with the special case of the tabindex (lowercase \"i\")\n// attribute, which is mapped to the tabIndex (capital \"I\") property.\n/** @type {IndexedObject<string>} */\nconst attributeToPropertyNames = {\n  tabindex: \"tabIndex\",\n};\n/** @type {IndexedObject<string>} */\nconst propertyNamesToAttributes = {\n  tabIndex: \"tabindex\",\n};\n\n/**\n * Sets properties when the corresponding attributes change\n *\n * If your component exposes a setter for a property, it's generally a good\n * idea to let devs using your component be able to set that property in HTML\n * via an element attribute. You can code that yourself by writing an\n * `attributeChangedCallback`, or you can use this mixin to get a degree of\n * automatic support.\n *\n * This mixin implements an `attributeChangedCallback` that will attempt to\n * convert a change in an element attribute into a call to the corresponding\n * property setter. Attributes typically follow hyphenated names (\"foo-bar\"),\n * whereas properties typically use camelCase names (\"fooBar\"). This mixin\n * respects that convention, automatically mapping the hyphenated attribute\n * name to the corresponding camelCase property name.\n *\n * Example: You define a component using this mixin:\n *\n *     class MyElement extends AttributeMarshallingMixin(HTMLElement) {\n *       get fooBar() { return this._fooBar; }\n *       set fooBar(value) { this._fooBar = value; }\n *     }\n *\n * If someone then instantiates your component in HTML:\n *\n *     <my-element foo-bar=\"Hello\"></my-element>\n *\n * Then, after the element has been upgraded, the `fooBar` setter will\n * automatically be invoked with the initial value \"Hello\".\n *\n * Attributes can only have string values. If you'd like to convert string\n * attributes to other types (numbers, booleans), you must implement parsing\n * yourself.\n *\n * @module AttributeMarshallingMixin\n * @param {Constructor<CustomElement>} Base\n */\nexport default function AttributeMarshallingMixin(Base) {\n  // The class prototype added by the mixin.\n  class AttributeMarshalling extends Base {\n    /**\n     * Handle a change to the attribute with the given name.\n     *\n     * @ignore\n     * @param {string} attributeName\n     * @param {string} oldValue\n     * @param {string} newValue\n     */\n    attributeChangedCallback(attributeName, oldValue, newValue) {\n      if (super.attributeChangedCallback) {\n        super.attributeChangedCallback(attributeName, oldValue, newValue);\n      }\n\n      // Sometimes this callback is invoked when there's not actually any\n      // change, in which we skip invoking the property setter.\n      //\n      // We also skip setting properties if we're rendering. A component may\n      // want to reflect property values to attributes during rendering, but\n      // such attribute changes shouldn't trigger property updates.\n      if (newValue !== oldValue && !this[rendering]) {\n        const propertyName = attributeToPropertyName(attributeName);\n        // If the attribute name corresponds to a property name, set the property.\n        if (propertyName in this) {\n          // Parse standard boolean attributes.\n          const parsed = standardBooleanAttributes[attributeName]\n            ? booleanAttributeValue(attributeName, newValue)\n            : newValue;\n          this[propertyName] = parsed;\n        }\n      }\n    }\n\n    // Because maintaining the mapping of attributes to properties is tedious,\n    // this provides a default implementation for `observedAttributes` that\n    // assumes that your component will want to expose all public properties in\n    // your component's API as properties.\n    //\n    // You can override this default implementation of `observedAttributes`. For\n    // example, if you have a system that can statically analyze which\n    // properties are available to your component, you could hand-author or\n    // programmatically generate a definition for `observedAttributes` that\n    // avoids the minor run-time performance cost of inspecting the component\n    // prototype to determine your component's public properties.\n    static get observedAttributes() {\n      return attributesForClass(this);\n    }\n  }\n\n  return AttributeMarshalling;\n}\n\n/**\n * Return the custom attributes for the given class.\n *\n * E.g., if the supplied class defines a `fooBar` property, then the resulting\n * array of attribute names will include the \"foo-bar\" attribute.\n *\n * @private\n * @param {Constructor<HTMLElement>} classFn\n * @returns {string[]}\n */\nfunction attributesForClass(classFn) {\n  // We treat the HTMLElement base class as if it has no attributes, since we\n  // don't want to receive attributeChangedCallback for it (or anything further\n  // up the protoype chain).\n  if (classFn === HTMLElement) {\n    return [];\n  }\n\n  // Get attributes for parent class.\n  const baseClass = Object.getPrototypeOf(classFn.prototype).constructor;\n\n  // See if parent class defines observedAttributes manually.\n  let baseAttributes = baseClass.observedAttributes;\n  if (!baseAttributes) {\n    // Calculate parent class attributes ourselves.\n    baseAttributes = attributesForClass(baseClass);\n  }\n\n  // Get the properties for this particular class.\n  const propertyNames = Object.getOwnPropertyNames(classFn.prototype);\n  const setterNames = propertyNames.filter((propertyName) => {\n    const descriptor = Object.getOwnPropertyDescriptor(\n      classFn.prototype,\n      propertyName\n    );\n    return descriptor && typeof descriptor.set === \"function\";\n  });\n\n  // Map the property names to attribute names.\n  const attributes = setterNames.map((setterName) =>\n    propertyNameToAttribute(setterName)\n  );\n\n  // Merge the attribute for this class and its base class.\n  const diff = attributes.filter(\n    (attribute) => baseAttributes.indexOf(attribute) < 0\n  );\n  const result = baseAttributes.concat(diff);\n\n  return result;\n}\n\n/**\n * Convert hyphenated foo-bar attribute name to camel case fooBar property name.\n *\n * @private\n * @param {string} attributeName\n */\nfunction attributeToPropertyName(attributeName) {\n  let propertyName = attributeToPropertyNames[attributeName];\n  if (!propertyName) {\n    // Convert and memoize.\n    const hyphenRegEx = /-([a-z])/g;\n    propertyName = attributeName.replace(hyphenRegEx, (match) =>\n      match[1].toUpperCase()\n    );\n    attributeToPropertyNames[attributeName] = propertyName;\n  }\n  return propertyName;\n}\n\n/**\n * Convert a camel case fooBar property name to a hyphenated foo-bar attribute.\n *\n * @private\n * @param {string} propertyName\n */\nfunction propertyNameToAttribute(propertyName) {\n  let attribute = propertyNamesToAttributes[propertyName];\n  if (!attribute) {\n    // Convert and memoize.\n    const uppercaseRegEx = /([A-Z])/g;\n    attribute = propertyName.replace(uppercaseRegEx, \"-$1\").toLowerCase();\n    propertyNamesToAttributes[propertyName] = attribute;\n  }\n  return attribute;\n}\n","import {\n  defaultState,\n  firstRender,\n  raiseChangeEvents,\n  render,\n  renderChanges,\n  rendered,\n  rendering,\n  setState,\n  state,\n  stateEffects,\n} from \"./internal.js\";\n\n/** @type {any} */\nconst stateKey = Symbol(\"state\");\n/** @type {any} */\nconst raiseChangeEventsInNextRenderKey = Symbol(\n  \"raiseChangeEventsInNextRender\"\n);\n// Tracks total set of changes made to elements since their last render.\n/** @type {any} */\nconst changedSinceLastRenderKey = Symbol(\"changedSinceLastRender\");\n\n/**\n * Manages component state and renders changes in state\n *\n * This is modeled after React/Preact's state management, and is adapted for\n * use with web components. Applying this mixin to a component will give it\n * FRP behavior comparable to React's.\n *\n * This model is very basic. It's key aspects are:\n * * an immutable `state` property updated via `setState` calls.\n * * a `render` method that will be invoked asynchronously when state changes.\n *\n * @module ReactiveMixin\n * @param {Constructor<CustomElement>} Base\n */\nexport default function ReactiveMixin(Base) {\n  class Reactive extends Base {\n    constructor() {\n      super();\n\n      // Components can inspect internal.firstRender during rendering to do\n      // special work the first time (like wire up event handlers). Until the\n      // first render actually happens, we set that flag to be undefined so we\n      // have a way of distinguishing between a component that has never\n      // rendered and one that is being rendered for the nth time.\n      this[firstRender] = undefined;\n\n      // We want to support the standard HTML pattern of only raising events in\n      // response to direct user interactions. For a detailed discussion of this\n      // point, see the Gold Standard checklist item for [Propery Change\n      // Events](https://github.com/webcomponents/gold-standard/wiki/Property%20Change%20Events).\n      //\n      // To support this pattern, we define a flag indicating whether change\n      // events should be raised. By default, we want the flag to be false. In\n      // UI event handlers, a component can temporarily set the flag to true. If\n      // a setState call is made while the flag is true, then that fact will be\n      // remembered and passed the subsequent render/rendered methods. That will\n      // let the methods know whether they should raise property change events.\n      this[raiseChangeEvents] = false;\n\n      // Maintain a change log of all fields which have changed since the\n      // component was last rendered.\n      this[changedSinceLastRenderKey] = null;\n\n      // Set the initial state from the default state defined by the component\n      // and its mixins/base classes.\n      this[setState](this[defaultState]);\n    }\n\n    // When the component is attached to the document (or upgraded), we will\n    // generally render the component for the first time. That operation will\n    // include rendering of the default state and any state changes that\n    // happened between constructor time and this connectedCallback.\n    connectedCallback() {\n      if (super.connectedCallback) {\n        super.connectedCallback();\n      }\n\n      // Render the component.\n      //\n      // If the component was forced to render before this point, and the state\n      // hasn't changed, this call will be a no-op.\n      this[renderChanges]();\n    }\n\n    /**\n     * The default state for the component. This can be extended by mixins and\n     * classes to provide additional default state.\n     *\n     * @type {PlainObject}\n     */\n    get [defaultState]() {\n      // Defer to base implementation if defined.\n      return super[defaultState] || {};\n    }\n\n    /**\n     * Render the indicated changes in state to the DOM.\n     *\n     * The default implementation of this method does nothing. Override this\n     * method in your component to update your component's host element and\n     * any shadow elements to reflect the component's new state. See the\n     * [rendering example](ReactiveMixin#rendering).\n     *\n     * Be sure to call `super` in your method implementation so that your\n     * component's base classes and mixins have a chance to perform their own\n     * render work.\n     *\n     * @param {ChangedFlags} changed - dictionary of flags indicating which state\n     * members have changed since the last render\n     */\n    [render](changed) {\n      if (super[render]) {\n        super[render](changed);\n      }\n    }\n\n    /**\n     * Render any pending component changes to the DOM.\n     *\n     * This method does nothing if the state has not changed since the last\n     * render call.\n     *\n     * ReactiveMixin will invoke this method following a `setState` call;\n     * you should not need to invoke this method yourself.\n     *\n     * This method invokes the internal `render` method, then invokes the\n     * `rendered` method.\n     */\n    [renderChanges]() {\n      if (this[firstRender] === undefined) {\n        // First render.\n        this[firstRender] = true;\n      }\n\n      // Get the log of which fields have changed since the last render. As a\n      // special case, the initial value of this set will be the empty set, so\n      // we'll always render the first time.\n      const changed = this[changedSinceLastRenderKey];\n\n      // We only render if this is the first render, or state has has changed\n      // since the last render.\n      if (this[firstRender] || changed) {\n        // If at least one of the[setState] calls was made in response\n        // to user interaction or some other component-internal event, set the\n        // raiseChangeEvents flag so that render/rendered methods know whether\n        // to raise property change events. See the comments in the component\n        // constructor where we initialize this flag for details.\n        const saveRaiseChangeEvents = this[raiseChangeEvents];\n        this[raiseChangeEvents] = this[raiseChangeEventsInNextRenderKey];\n\n        // We set a flag to indicate that rendering is happening. The component\n        // may use this to avoid triggering other updates during the render.\n        this[rendering] = true;\n\n        // Invoke any internal render implementations.\n        this[render](changed);\n\n        this[rendering] = false;\n\n        // Since we've now rendered all changes, clear the change log. If other\n        // async render calls are queued up behind this call, they'll see an\n        // empty change log, and so skip unnecessary render work.\n        this[changedSinceLastRenderKey] = null;\n\n        // Let the component know it was rendered.\n        this[rendered](changed);\n\n        // We've now rendered for the first time.\n        this[firstRender] = false;\n\n        // Restore state of event flags.\n        this[raiseChangeEvents] = saveRaiseChangeEvents;\n        this[raiseChangeEventsInNextRenderKey] = saveRaiseChangeEvents;\n      }\n    }\n\n    /**\n     * Perform any work that must happen after state changes have been rendered\n     * to the DOM.\n     *\n     * The default implementation of this method does nothing. Override this\n     * method in your component to perform work that requires the component to\n     * be fully rendered, such as setting focus on a shadow element or\n     * inspecting the computed style of an element. If such work should result\n     * in a change in component state, you can safely call `setState` during the\n     * `rendered` method.\n     *\n     * Be sure to call `super` in your method implementation so that your\n     * component's base classes and mixins have a chance to perform their own\n     * post-render work.\n     *\n     * @param {ChangedFlags} changed\n     */\n    [rendered](changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n    }\n\n    /**\n     * Update the component's state by merging the specified changes on\n     * top of the existing state. If the component is connected to the document,\n     * and the new state has changed, this returns a promise to asynchronously\n     * render the component. Otherwise, this returns a resolved promise.\n     *\n     * @param {PlainObject} changes - the changes to apply to the element's state\n     * @returns {Promise} - resolves when the new state has been rendered\n     */\n    async [setState](changes) {\n      // There's no good reason to have a render method update state.\n      if (this[rendering]) {\n        /* eslint-disable no-console */\n        console.warn(\n          `${this.constructor.name} called [setState] during rendering, which you should avoid.\\nSee https://elix.org/documentation/ReactiveMixin.`\n        );\n      }\n\n      // Apply the changes to a copy of the component's current state to produce\n      // a new, updated state and a dictionary of flags indicating which fields\n      // actually changed.\n      const { state, changed } = copyStateWithChanges(this, changes);\n\n      // We only need to apply the changes to the component state if: a) this is\n      // the first time setState has been called, or b) the supplied changes\n      // parameter actually contains substantive changes.\n      const firstSetState = this[stateKey] === undefined;\n      const substantiveChanges = Object.keys(changed).length > 0;\n      if (!(firstSetState || substantiveChanges)) {\n        // No need to update state.\n        return;\n      }\n\n      // Freeze the new state so it's immutable. This prevents accidental\n      // attempts to set state without going through [setState].\n      Object.freeze(state);\n\n      // Set this as the component's new state.\n      this[stateKey] = state;\n\n      // If setState was called with the raiseChangeEvents flag set, record that\n      // fact for use in rendering. See the comments in the component\n      // constructor for details.\n      if (this[raiseChangeEvents]) {\n        this[raiseChangeEventsInNextRenderKey] = true;\n      }\n\n      // Look to see whether the component is already set up to render.\n      const willRender =\n        this[firstRender] === undefined ||\n        this[changedSinceLastRenderKey] !== null;\n\n      // Add this round of changed fields to the complete log of fields that\n      // have changed since the component was last rendered.\n      this[changedSinceLastRenderKey] = Object.assign(\n        this[changedSinceLastRenderKey] || {},\n        changed\n      );\n\n      // We only need to queue a render if we're in the document, and a render\n      // operation hasn't already been queued for this component. If we're not\n      // in the document yet, when the component is eventually added to the\n      // document, the connectedCallback will ensure we render at that point.\n      const needsRender = this.isConnected && !willRender;\n      if (needsRender) {\n        // Yield with promise timing. This lets any *synchronous* setState calls\n        // that happen after this current setState call complete first. Their\n        // effects on the state will be batched up, and accumulate in the change\n        // log stored under this[changedSinceLastRenderKey].\n        await Promise.resolve();\n\n        // Now that the above promise has resolved, render the component. By the\n        // time this line is reached, the complete log of batched changes can be\n        // applied in a single render call.\n        this[renderChanges]();\n      }\n    }\n\n    /**\n     * The component's current state.\n     *\n     * The returned state object is immutable. To update it, invoke\n     * `internal.setState`.\n     *\n     * It's extremely useful to be able to inspect component state while\n     * debugging. If you append `?elixdebug=true` to a page's URL, then\n     * ReactiveMixin will conditionally expose a public `state` property that\n     * returns the component's state. You can then access the state in your\n     * browser's debug console.\n     *\n     * @type {PlainObject}\n     */\n    get [state]() {\n      return this[stateKey];\n    }\n\n    /**\n     * Ask the component whether a state with a set of recently-changed fields\n     * implies that additional second-order changes should be applied to that\n     * state to make it consistent.\n     *\n     * This method is invoked during a call to `internal.setState` to give all\n     * of a component's mixins and classes a chance to respond to changes in\n     * state. If one mixin/class updates state that it controls, another\n     * mixin/class may want to respond by updating some other state member that\n     * *it* controls.\n     *\n     * This method should return a dictionary of changes that should be applied\n     * to the state. If the dictionary object is not empty, the\n     * `internal.setState` will apply the changes to the state, and invoke this\n     * `stateEffects` method again to determine whether there are any\n     * third-order effects that should be applied. This process repeats until\n     * all mixins/classes report that they have no additional changes to make.\n     *\n     * See an example of how `ReactiveMixin` invokes the `stateEffects` to\n     * [ensure state consistency](ReactiveMixin#ensuring-state-consistency).\n     *\n     * @param {PlainObject} state - a proposal for a new state\n     * @param {ChangedFlags} changed - the set of fields changed in this\n     * latest proposal for the new state\n     * @returns {PlainObject}\n     */\n    [stateEffects](state, changed) {\n      return super[stateEffects] ? super[stateEffects](state, changed) : {};\n    }\n  }\n\n  // Expose state when debugging; see note for `[state]` getter.\n  const elixdebug = new URLSearchParams(location.search).get(\"elixdebug\");\n  if (elixdebug === \"true\") {\n    Object.defineProperty(Reactive.prototype, \"state\", {\n      get() {\n        return this[state];\n      },\n    });\n  }\n\n  return Reactive;\n}\n\n/**\n * Create a copy of the component's state with the indicated changes applied.\n * Ask the component whether the new state implies any second-order effects. If\n * so, apply those and loop again until the state has stabilized. Return the new\n * state and a dictionary of flags indicating which fields were actually\n * changed.\n *\n * @private\n * @param {Element} element\n * @param {PlainObject} changes\n */\nexport function copyStateWithChanges(element, changes) {\n  // Start with a copy of the current state.\n  /** @type {PlainObject} */\n  const state = Object.assign({}, element[stateKey]);\n  /** @type {ChangedFlags} */\n  const changed = {};\n  // Take the supplied changes as the first round of effects.\n  let effects = changes;\n  // Loop until there are no effects to apply.\n  /* eslint-disable no-constant-condition */\n  while (true) {\n    // See whether the effects actually changed anything in state.\n    const changedByEffects = fieldsChanged(state, effects);\n    if (Object.keys(changedByEffects).length === 0) {\n      // No more effects to apply; we're done.\n      break;\n    }\n    // Apply the effects.\n    Object.assign(state, effects);\n    Object.assign(changed, changedByEffects);\n    // Ask the component if there are any second- (or third-, etc.) order\n    // effects that should be applied.\n    effects = element[stateEffects](state, changedByEffects);\n  }\n  return { state, changed };\n}\n\n/**\n * Return true if the two values are equal.\n *\n * @private\n * @param {any} value1\n * @param {any} value2\n * @returns {boolean}\n */\nfunction equal(value1, value2) {\n  if (value1 instanceof Date && value2 instanceof Date) {\n    return value1.getTime() === value2.getTime();\n  }\n  return value1 === value2;\n}\n\n/**\n * Return a dictionary of flags indicating which of the indicated changes to the\n * state are actually substantive changes.\n *\n * @private\n * @param {PlainObject} state\n * @param {PlainObject} changes\n */\nfunction fieldsChanged(state, changes) {\n  /** @type {ChangedFlags} */\n  const changed = {};\n  for (const field in changes) {\n    if (!equal(changes[field], state[field])) {\n      changed[field] = true;\n    }\n  }\n  return changed;\n}\n","import {\n  delegatesFocus,\n  firstRender,\n  hasDynamicTemplate,\n  ids,\n  render,\n  shadowRoot,\n  shadowRootMode,\n  template,\n} from \"./internal.js\";\n\n// A cache of processed templates, indexed by element class.\nconst classTemplateMap = new Map();\n\n// A Proxy that maps shadow element IDs to shadow elements.\n// This will be return as the element's `this[ids]` property;\n// see comments in that property below.\n/** @type {any} */\nconst shadowIdProxyKey = Symbol(\"shadowIdProxy\");\n\n// A reference stored on the shadow element proxy target to get to the actual\n// element. We use a Symbol here instead of a string name to avoid naming\n// conflicts with the element's internal shadow element IDs.\nconst proxyElementKey = Symbol(\"proxyElement\");\n\n// A handler used for the shadow element ID proxy.\nconst shadowIdProxyHandler = {\n  get(target, id) {\n    // From this proxy, obtain a reference to the original component.\n    const element = target[proxyElementKey];\n\n    // Get a reference to the component's open or closed shadow root.\n    const root = element[shadowRoot];\n\n    // Look for a shadow element with the indicated ID.\n    return root && typeof id === \"string\" ? root.getElementById(id) : null;\n  },\n};\n\n/**\n * Stamps a template into a component's Shadow DOM when instantiated\n *\n * To use this mixin, define a `template` method that returns a string or HTML\n * `<template>` element:\n *\n *     import { createElement, replace, transmute } from 'elix/src/template.js';\n *\n *     class MyElement extends ShadowTemplateMixin(HTMLElement) {\n *       get [template]() {\n *         return templateFrom.html`Hello, <em>world</em>.`;\n *       }\n *     }\n *\n * When your component class is instantiated, a shadow root will be created on\n * the instance, and the contents of the template will be cloned into the\n * shadow root. If your component does not define a `template` method, this\n * mixin has no effect.\n *\n * This adds a member on the component called `this[ids]` that can be used to\n * reference shadow elements with IDs. E.g., if component's shadow contains an\n * element `<button id=\"foo\">`, then this mixin will create a member\n * `this[ids].foo` that points to that button.\n *\n * @module ShadowTemplateMixin\n * @param {Constructor<HTMLElement>} Base\n */\nexport default function ShadowTemplateMixin(Base) {\n  // The class prototype added by the mixin.\n  class ShadowTemplate extends Base {\n    /**\n     * A convenient shortcut for looking up an element by ID in the component's\n     * Shadow DOM subtree.\n     *\n     * Example: if component's template contains a shadow element `<button\n     * id=\"foo\">`, you can use the reference `this[ids].foo` to obtain\n     * the corresponding button in the component instance's shadow tree. The\n     * `ids` property is simply a shorthand for `getElementById`, so\n     * `this[ids].foo` is the same as\n     * `this[shadowRoot].getElementById('foo')`.\n     *\n     * @type {object} - a dictionary mapping shadow element IDs to elements\n     */\n    get [ids]() {\n      if (!this[shadowIdProxyKey]) {\n        // Construct a proxy that maps to getElementById.\n        const target = {\n          // Give the proxy a means of refering this element via the target.\n          [proxyElementKey]: this,\n        };\n        this[shadowIdProxyKey] = new Proxy(target, shadowIdProxyHandler);\n      }\n      return this[shadowIdProxyKey];\n    }\n\n    /*\n     * If the component defines a template, a shadow root will be created on the\n     * component instance, and the template stamped into it.\n     */\n    [render](/** @type {ChangedFlags} */ changed) {\n      if (super[render]) {\n        super[render](changed);\n      }\n\n      // We only need to render the shadow root the first time the component is\n      // rendered.\n      if (this[firstRender] === undefined || this[firstRender]) {\n        // If this type of element defines a template, prepare it for use.\n        const template = getTemplate(this);\n\n        if (template) {\n          // Stamp the template into a new shadow root.\n          const root = this.attachShadow({\n            delegatesFocus: this[delegatesFocus],\n            mode: this[shadowRootMode],\n          });\n          const clone = document.importNode(template.content, true);\n          root.append(clone);\n\n          // After this call, we won' be able to rely on being able to access\n          // the shadow root via `this.shadowRoot`, because the component may\n          // have asked for a closed shadow root. We save a reference to the\n          // shadow root now so that the component always has a consistent means\n          // to reference its own shadow root.\n          this[shadowRoot] = root;\n        }\n      }\n    }\n\n    /**\n     * @type {ShadowRootMode}\n     * @default \"open\"\n     */\n    get [shadowRootMode]() {\n      return \"open\";\n    }\n  }\n\n  return ShadowTemplate;\n}\n\n/**\n * Return the template for the element being instantiated.\n *\n * If this is the first time we're creating this type of element, or the\n * component has indicated that its template is dynamic (and should be retrieved\n * each time), ask the component class for the template and cache the result.\n * Otherwise, immediately return the cached template.\n *\n * @private\n * @param {HTMLElement} element\n * @returns {HTMLTemplateElement}\n */\nfunction getTemplate(element) {\n  let t = element[hasDynamicTemplate]\n    ? undefined // Always retrieve template\n    : classTemplateMap.get(element.constructor); // See if we've cached it\n  if (t === undefined) {\n    // Ask the component for its template.\n    t = element[template];\n    // A component using this mixin isn't required to supply a template --\n    // if they don't, they simply won't end up with a shadow root.\n    if (t) {\n      // But if the component does supply a template, it needs to be an\n      // HTMLTemplateElement instance.\n      if (!(t instanceof HTMLTemplateElement)) {\n        throw `Warning: the [template] property for ${element.constructor.name} must return an HTMLTemplateElement.`;\n      }\n      if (!element[hasDynamicTemplate]) {\n        // Store prepared template for next creation of same type of element.\n        classTemplateMap.set(element.constructor, t);\n      }\n    }\n  }\n  return t;\n}\n","import AttributeMarshallingMixin from \"./AttributeMarshallingMixin.js\";\nimport ReactiveMixin from \"./ReactiveMixin.js\";\nimport ShadowTemplateMixin from \"./ShadowTemplateMixin.js\";\n\n/**\n * General-purpose base for writing components in functional-reactive style\n *\n * This base class lets you create web components in a functional-reactive\n * programming (FRP) style. It simply bundles a small set of mixins:\n *\n *     const ReactiveElement =\n *       AttributeMarshallingMixin(\n *       ReactiveMixin(\n *       ShadowTemplateMixin(\n *         HTMLElement\n *       )))));\n *\n * `ReactiveElement` is provided as a convenience. You can achieve the same\n * result by applying the mixins yourself to `HTMLElement`.\n *\n * @inherits HTMLElement\n * @mixes AttributeMarshallingMixin\n * @mixes ReactiveMixin\n * @mixes ShadowTemplateMixin\n */\nconst ReactiveElement = AttributeMarshallingMixin(\n  ReactiveMixin(ShadowTemplateMixin(HTMLElement))\n);\n\nexport default ReactiveElement;\n","import { booleanAttributeValue, setInternalState } from \"../core/dom.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { defaultState, render, rendered, setState, state } from \"./internal.js\";\n\n// Elements listening for changes in prefers-color-scheme.\nconst colorSchemeElements = new Set();\n\n/**\n * Lets a component automatically or explicitly configure itself for dark backgrounds\n *\n * @module DarkModeMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function DarkModeMixin(Base) {\n  return class dark extends Base {\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (name === \"dark\") {\n        const value = booleanAttributeValue(name, newValue);\n        if (this.dark !== value) {\n          this.dark = value;\n        }\n      } else {\n        super.attributeChangedCallback(name, oldValue, newValue);\n      }\n    }\n\n    disconnectedCallback() {\n      if (super.disconnectedCallback) {\n        super.disconnectedCallback();\n      }\n      // This element no longer needs to listen to changes in color scheme.\n      colorSchemeElements.delete(this);\n    }\n\n    /**\n     * True if the component should configure itself for display on a dark background;\n     * false if the component should assume a light background.\n     *\n     * The default value of this property is inferred when the component is\n     * initially added to the page. The component will look up its hierarchy for\n     * an ancestor that has an explicit background color. If the color's\n     * lightness value in the HSL cylindrical-coordinate system is below 50%,\n     * the background is assumed to be dark and `dark` will default to true.\n     * If the color is lighter than that, or no explicit background color can be\n     * found, the default value of `dark` will be false.\n     *\n     * @type {boolean}\n     */\n    get dark() {\n      return this[state].dark;\n    }\n    set dark(dark) {\n      this[setState]({ dark });\n    }\n\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        dark: false,\n        detectDarkMode: \"auto\",\n      });\n    }\n\n    /**\n     * Determines whether the component should automatially try to detect\n     * whether it should apply dark mode.\n     *\n     * @type {'auto'|'off'}\n     * @default 'auto'\n     */\n    get detectDarkMode() {\n      return this[state].detectDarkMode;\n    }\n    set detectDarkMode(detectDarkMode) {\n      if (detectDarkMode === \"auto\" || detectDarkMode === \"off\") {\n        this[setState]({ detectDarkMode });\n      }\n    }\n\n    [render](changed) {\n      super[render](changed);\n\n      if (changed.dark) {\n        const { dark } = this[state];\n        setInternalState(this, \"dark\", dark);\n      }\n    }\n\n    [rendered](changed) {\n      super[rendered](changed);\n\n      if (changed.detectDarkMode) {\n        const { detectDarkMode } = this[state];\n        // Add/remove element to/from list of elements listening to color\n        // scheme.\n        if (detectDarkMode === \"auto\") {\n          colorSchemeElements.add(this);\n          setDarkModeFromBackgroundColor(this);\n        } else {\n          colorSchemeElements.delete(this);\n        }\n      }\n    }\n  };\n}\n\n// Infer dark mode from effective background color.\nfunction setDarkModeFromBackgroundColor(element) {\n  const backgroundColor = findBackgroundColor(element);\n  const rgb = parseRgb(backgroundColor);\n  if (rgb) {\n    const hsl = rgbToHsl(rgb);\n    // We consider any lightness below 50% to be dark.\n    const dark = hsl.l < 0.5;\n    element[setState]({ dark });\n  }\n}\n\n/**\n * Return the background color of the given element. If the color is\n * \"transparent\" (the default in Mozilla) or \"rgba(0, 0, 0, 0)\" (the default\n * transparent value in Blink and Webkit), walk up the parent chain until a\n * non-transparent color is found.\n *\n * @private\n * @param {Element} element\n * @returns {string}\n */\nfunction findBackgroundColor(element) {\n  const defaultBackgroundColor = \"rgb(255,255,255)\";\n  if (element instanceof Document) {\n    // This element has no background, assume white.\n    return defaultBackgroundColor;\n  }\n  const backgroundColor = getComputedStyle(element).backgroundColor;\n  const hasColor =\n    backgroundColor !== \"transparent\" && backgroundColor !== \"rgba(0, 0, 0, 0)\";\n  if (backgroundColor && hasColor) {\n    return backgroundColor;\n  }\n  if (element.assignedSlot) {\n    return findBackgroundColor(element.assignedSlot);\n  }\n  const parent = element.parentNode;\n  if (parent instanceof ShadowRoot) {\n    return findBackgroundColor(parent.host);\n  } else if (parent instanceof Element) {\n    return findBackgroundColor(parent);\n  } else {\n    return defaultBackgroundColor;\n  }\n}\n\n// Return the individual RGB values from a CSS RGB/RGBA color string.\nfunction parseRgb(/** @type {string} */ rgbString) {\n  const rgbRegex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*[\\d.]+\\s*)?\\)/;\n  const match = rgbRegex.exec(rgbString);\n  if (match) {\n    const r = match[1];\n    const g = match[2];\n    const b = match[3];\n    return { r, g, b };\n  } else {\n    return null;\n  }\n}\n\n// Convert an RGB color to an HSL color.\n// From https://stackoverflow.com/a/3732187/76472.\nfunction rgbToHsl(/** @type {PlainObject} */ rgb) {\n  const r = rgb.r / 255;\n  const g = rgb.g / 255;\n  const b = rgb.b / 255;\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n\n  let h = 0; // achromatic\n  let s = 0;\n  let l = (max + min) / 2;\n\n  const d = max - min;\n  if (d !== 0) {\n    s = l > 0.5 ? d / (2 - d) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return { h, s, l };\n}\n\n// Listen to changes in user preference for dark mode.\nwindow.matchMedia(\"(prefers-color-scheme: dark)\").addListener(() => {\n  colorSchemeElements.forEach((element) => {\n    setDarkModeFromBackgroundColor(element);\n  });\n});\n","/**\n * JavaScript template literals for constructing DOM nodes from HTML\n *\n * @module html\n */\n\n/**\n * A JavaScript template string literal that returns an HTML document fragment.\n *\n * Example:\n *\n *     const fragment = fragmentFrom.html`Hello, <em>world</em>.`\n *\n * returns a `DocumentFragment` whose `innerHTML` is `Hello, <em>world</em>.`\n *\n * This function is called `html` so that it can be easily used with HTML\n * syntax-highlighting extensions for various popular code editors.\n *\n * See also [templateFrom.html](template#html), which returns a similar result but\n * as an HTMLTemplateElement.\n *\n * @param {TemplateStringsArray} strings - the strings passed to the JavaScript template\n * literal\n * @param {string[]} substitutions - the variable values passed to the\n * JavaScript template literal\n * @returns {DocumentFragment}\n */\nexport const fragmentFrom = {\n  html(strings, ...substitutions) {\n    return templateFrom.html(strings, ...substitutions).content;\n  },\n};\n\n/**\n * A JavaScript template string literal that returns an HTML template.\n *\n * Example:\n *\n *     const myTemplate = templateFrom.html`Hello, <em>world</em>.`\n *\n * returns an `HTMLTemplateElement` whose `innerHTML` is `Hello, <em>world</em>.`\n *\n * This function is called `html` so that it can be easily used with HTML\n * syntax-highlighting extensions for various popular code editors.\n *\n * See also [html](html), a helper which returns a similar result but as an\n * DocumentFragment.\n *\n * @param {TemplateStringsArray} strings - the strings passed to the JavaScript template\n * literal\n * @param {string[]} substitutions - the variable values passed to the\n * JavaScript template literal\n * @returns {HTMLTemplateElement}\n */\nexport const templateFrom = {\n  html(strings, ...substitutions) {\n    const template = document.createElement(\"template\");\n    template.innerHTML = String.raw(strings, ...substitutions);\n    return template;\n  },\n};\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { render, rendering, setState, state } from \"./internal.js\";\n\n/**\n * Lets a component define its ARIA role through a `role` state member\n *\n * Among other things, this allows a class or mixin to define a default\n * role through the component's `defaultState`.\n *\n * Some mixins come with identicial support for managing an ARIA role. Those\n * mixins include [AriaListMixin](AriaListMixin),\n * [AriaMenuMixin](AriaMenuMixin), [DialogModalityMixin](DialogModalityMixin),\n * and [PopupModalityMixin](PopupModalityMixin). If you're using one of those\n * mixins, you do *not* need to use this mixin.\n *\n * @module AriaRoleMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function AriaRoleMixin(Base) {\n  // The class prototype added by the mixin.\n  class AriaRole extends Base {\n    [render](/** @type {ChangedFlags} */ changed) {\n      if (super[render]) {\n        super[render](changed);\n      }\n      if (changed.role) {\n        // Apply top-level role.\n        const { role } = this[state];\n        this.setAttribute(\"role\", role);\n      }\n    }\n\n    // Setting the standard role attribute will invoke this property setter,\n    // which will allow us to update our state.\n    get role() {\n      return super.role;\n    }\n    set role(role) {\n      super.role = role;\n      if (!this[rendering]) {\n        this[setState]({ role });\n      }\n    }\n  }\n\n  return AriaRole;\n}\n","import { closestFocusableNode } from \"../core/dom.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { defaultState, firstRender, render, state } from \"./internal.js\";\n\n// Quick detection of whether we'll need to handle focus.\n// As of February 2019, we don't need to handle this in Chrome, perhaps because\n// they already support delegatesFocus (which handles related focus issues).\nconst focusTest = document.createElement(\"div\");\nfocusTest.attachShadow({ mode: \"open\", delegatesFocus: true });\n/** @type {any} */\nconst focusTestShadowRoot = focusTest.shadowRoot;\nconst nativeDelegatesFocus = focusTestShadowRoot.delegatesFocus;\n\n/**\n * Normalizes focus treatment for custom elements with Shadow DOM\n *\n * This mixin exists because the default behavior for mousedown should set the\n * focus to the closest ancestor of the clicked element that can take the focus.\n * As of Nov 2018, Chrome and Safari don't handle this as expected when the\n * clicked element is reassigned across more than one slot to end up inside a\n * focusable element. In such cases, the focus will end up on the body. Firefox\n * exhibits the behavior we want. See\n * https://github.com/w3c/webcomponents/issues/773.\n *\n * This mixin normalizes behavior to provide what Firefox does. When the user\n * mouses down inside anywhere inside the component's light DOM or Shadow DOM,\n * we walk up the composed tree to find the first element that can take the\n * focus and put the focus on it.\n *\n * @module ComposedFocusMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function ComposedFocusMixin(Base) {\n  // The class prototype added by the mixin.\n  class ComposedFocus extends Base {\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        composeFocus: !nativeDelegatesFocus,\n      });\n    }\n\n    [render](/** @type {ChangedFlags} */ changed) {\n      if (super[render]) {\n        super[render](changed);\n      }\n      if (this[firstRender]) {\n        this.addEventListener(\"mousedown\", (event) => {\n          if (!this[state].composeFocus) {\n            return;\n          }\n          // Only process events for the main (usually left) button.\n          if (event.button !== 0) {\n            return;\n          }\n          if (event.target instanceof Element) {\n            const target = closestFocusableNode(event.target);\n            if (target) {\n              target.focus();\n              event.preventDefault();\n            }\n          }\n        });\n      }\n    }\n  }\n\n  return ComposedFocus;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  defaultState,\n  inputDelegate,\n  render,\n  setState,\n  state,\n} from \"./internal.js\";\n\n/**\n * Delegates its ARIA label property to an inner input-type element\n *\n * This helps ensure that elements built around an inner input element provide a\n * proper accessible label for assistive technologies like screen readers.\n *\n * You can identify which inner input element selection should be delegated to\n * by defining an `internal.inputDelegate` property and returning the desired\n * inner input.\n *\n * @module DelegateInputLabelMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function DelegateInputLabelMixin(Base) {\n  // The class prototype added by the mixin.\n  class DelegateInputLabel extends Base {\n    // Forward any ARIA label to the input element.\n    get ariaLabel() {\n      return this[state].ariaLabel;\n    }\n    set ariaLabel(ariaLabel) {\n      this[setState]({ ariaLabel });\n    }\n\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        ariaLabel: \"\",\n      });\n    }\n\n    [render](changed) {\n      super[render](changed);\n\n      if (changed.ariaLabel) {\n        const { ariaLabel } = this[state];\n        this[inputDelegate].setAttribute(\"aria-label\", ariaLabel);\n      }\n    }\n  }\n\n  return DelegateInputLabel;\n}\n","import { deepContains } from \"../core/dom.js\";\nimport { fragmentFrom, templateFrom } from \"../core/htmlLiterals.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { defaultState, render, setState, state, template } from \"./internal.js\";\n\n// We consider the keyboard to be active if the window has received a keydown\n// event since the last mousedown event.\nlet keyboardActive = false;\n\n/** @type {any} */\nconst focusVisibleChangedListenerKey = Symbol(\"focusVisibleChangedListener\");\n\n/**\n * Shows a focus indication if and only if the keyboard is active.\n *\n * The keyboard is considered to be active if a keyboard event has occurred\n * since the last mousedown event.\n *\n * This is loosely modeled after the proposed\n * [focus-visible](https://github.com/WICG/focus-visible) feature for CSS.\n *\n * @module FocusVisibleMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function FocusVisibleMixin(Base) {\n  // The class prototype added by the mixin.\n  return class FocusVisible extends Base {\n    constructor() {\n      // @ts-ignore\n      super();\n\n      // We listen to focusin/focusout instead of focus/blur because components\n      // like Menu want to handle focus visiblity for the items they contain,\n      // and those contained items can get the focus. Using focusin/focusout\n      // lets us know whether this element *or any element it contains* has the\n      // focus.\n      //\n      // Focus events are problematic in that they can occur during rendering:\n      // if an element with the focus is updated so that its tabindex is\n      // removed, it will lose focus. Since these focus handlers need to set\n      // state, this could lead to setting state during rendering, which is bad.\n      // To avoid this problem, we use promise timing to defer the setting of\n      // state.\n      this.addEventListener(\"focusout\", (event) => {\n        Promise.resolve().then(() => {\n          // What has the focus now?\n          /** @type {any} */ const cast = event;\n          const newFocusedElement =\n            cast.relatedTarget || document.activeElement;\n          const isFocusedElement = this === newFocusedElement;\n          const containsFocus = deepContains(this, newFocusedElement);\n          const lostFocus = !isFocusedElement && !containsFocus;\n          if (lostFocus) {\n            this[setState]({\n              focusVisible: false,\n            });\n            // No longer need to listen for changes in focus visibility.\n            document.removeEventListener(\n              \"focusvisiblechange\",\n              this[focusVisibleChangedListenerKey]\n            );\n            this[focusVisibleChangedListenerKey] = null;\n          }\n        });\n      });\n      this.addEventListener(\"focusin\", () => {\n        Promise.resolve().then(() => {\n          if (this[state].focusVisible !== keyboardActive) {\n            // Show the element as focused if the keyboard has been used.\n            this[setState]({\n              focusVisible: keyboardActive,\n            });\n          }\n          if (!this[focusVisibleChangedListenerKey]) {\n            // Listen to subsequent changes in focus visibility.\n            this[focusVisibleChangedListenerKey] = () => refreshFocus(this);\n            document.addEventListener(\n              \"focusvisiblechange\",\n              this[focusVisibleChangedListenerKey]\n            );\n          }\n        });\n      });\n    }\n\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        focusVisible: false,\n      });\n    }\n\n    [render](/** @type {ChangedFlags} */ changed) {\n      if (super[render]) {\n        super[render](changed);\n      }\n\n      // Suppress the component's normal `outline` style unless we know the\n      // focus should be visible.\n      if (changed.focusVisible) {\n        const { focusVisible } = this[state];\n        this.toggleAttribute(\"focus-visible\", focusVisible);\n      }\n    }\n\n    get [template]() {\n      const result = super[template] || templateFrom.html``;\n      result.content.append(fragmentFrom.html`\n        <style>\n          :host {\n            outline: none;\n          }\n\n          :host([focus-visible]:focus-within) {\n            outline-color: Highlight; /* Firefox */\n            outline-color: -webkit-focus-ring-color; /* All other browsers */\n            outline-style: auto;\n          }\n        </style>\n      `);\n      return result;\n    }\n  };\n}\n\nfunction refreshFocus(/** @type {ReactiveElement} */ element) {\n  element[setState]({\n    focusVisible: keyboardActive,\n  });\n}\n\nfunction updateKeyboardActive(/** @type {boolean} */ newKeyboardActive) {\n  if (keyboardActive !== newKeyboardActive) {\n    keyboardActive = newKeyboardActive;\n    const oldEvent = new CustomEvent(\"focus-visible-changed\", {\n      detail: {\n        focusVisible: keyboardActive,\n      },\n    });\n    document.dispatchEvent(oldEvent);\n    const event = new CustomEvent(\"focusvisiblechange\", {\n      detail: {\n        focusVisible: keyboardActive,\n      },\n    });\n    document.dispatchEvent(event);\n  }\n}\n\n// Listen for top-level keydown and mousedown events.\n// Use capture phase so we detect events even if they're handled.\nwindow.addEventListener(\n  \"keydown\",\n  () => {\n    updateKeyboardActive(true);\n  },\n  { capture: true }\n);\n\nwindow.addEventListener(\n  \"mousedown\",\n  () => {\n    updateKeyboardActive(false);\n  },\n  { capture: true }\n);\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  defaultState,\n  defaultTabIndex,\n  delegatesFocus,\n  keydown,\n  raiseChangeEvents,\n  render,\n  rendering,\n  setState,\n  state,\n} from \"./internal.js\";\n\n/**\n * Manages keyboard handling for a component.\n *\n * This mixin handles several keyboard-related features.\n *\n * First, it wires up a single keydown event handler that can be shared by\n * multiple mixins on a component. The event handler will invoke a `keydown`\n * method with the event object, and any mixin along the prototype chain that\n * wants to handle that method can do so.\n *\n * If a mixin wants to indicate that keyboard event has been handled, and that\n * other mixins should *not* handle it, the mixin's `keydown` handler should\n * return a value of true. The convention that seems to work well is that a\n * mixin should see if it wants to handle the event and, if not, then ask the\n * superclass to see if it wants to handle the event. This has the effect of\n * giving the mixin that was applied last the first chance at handling a\n * keyboard event.\n *\n * Example:\n *\n *     [keydown](event) {\n *       let handled;\n *       switch (event.key) {\n *         // Handle the keys you want, setting handled = true if appropriate.\n *       }\n *       // Prefer mixin result if it's defined, otherwise use base result.\n *       return handled || (super[keydown] && super[keydown](event));\n *     }\n *\n * A second feature provided by this mixin is that it implicitly makes the\n * component a tab stop if it isn't already, by setting `tabindex` to 0. This\n * has the effect of adding the component to the tab order in document order.\n *\n * @module KeyboardMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function KeyboardMixin(Base) {\n  // The class prototype added by the mixin.\n  class Keyboard extends Base {\n    constructor() {\n      // @ts-ignore\n      super();\n      this.addEventListener(\"keydown\", async (event) => {\n        this[raiseChangeEvents] = true;\n        // For use with FocusVisibleMixin.\n        if (!this[state].focusVisible) {\n          // The user may have begun interacting with this element using the\n          // mouse/touch, but has now begun using the keyboard, so show focus.\n          this[setState]({\n            focusVisible: true,\n          });\n        }\n        const handled = this[keydown](event);\n        if (handled) {\n          event.preventDefault();\n          event.stopImmediatePropagation();\n        }\n        await Promise.resolve();\n        this[raiseChangeEvents] = false;\n      });\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (name === \"tabindex\") {\n        // Parse the passed value, which could be a string or null.\n        let parsed;\n        if (newValue === null) {\n          // tabindex attribute was removed.\n          parsed = -1;\n        } else {\n          parsed = Number(newValue);\n          if (isNaN(parsed)) {\n            // Non-numeric tabindex falls back to default value (if defined).\n            parsed = this[defaultTabIndex] ? this[defaultTabIndex] : 0;\n          }\n        }\n        this.tabIndex = parsed;\n      } else {\n        super.attributeChangedCallback(name, oldValue, newValue);\n      }\n    }\n\n    get [defaultState]() {\n      // If we're using DelegateFocusMixin, we don't need or want to set a\n      // tabindex on the host; we'll rely on the inner shadow elements to take\n      // the focus and raise keyboard events. Otherwise, we do set a tabindex on\n      // the host, so that we can get keyboard events.\n      const tabIndex = this[delegatesFocus] ? null : 0;\n      const state = Object.assign(super[defaultState] || {}, {\n        tabIndex,\n      });\n\n      return state;\n    }\n\n    /**\n     * See the [symbols](internal#internal.keydown) documentation for details.\n     */\n    [keydown](/** @type {KeyboardEvent} */ event) {\n      if (super[keydown]) {\n        return super[keydown](event);\n      }\n      return false;\n    }\n\n    [render](/** @type {ChangedFlags} */ changed) {\n      if (super[render]) {\n        super[render](changed);\n      }\n      if (changed.tabIndex) {\n        this.tabIndex = this[state].tabIndex;\n      }\n    }\n\n    // Record our own notion of the state of the tabIndex property so we can\n    // rerender if necessary.\n    get tabIndex() {\n      return super.tabIndex;\n    }\n    set tabIndex(tabIndex) {\n      // If value has changed, invoke the super setter.\n      if (super.tabIndex !== tabIndex) {\n        super.tabIndex = tabIndex;\n      }\n\n      // The tabIndex setter can get called during rendering when we render our\n      // own notion of the tabIndex state, in which case we don't need or want\n      // to set state again.\n      if (!this[rendering]) {\n        // Record the new tabIndex in our state.\n        this[setState]({\n          tabIndex,\n        });\n      }\n    }\n  }\n\n  return Keyboard;\n}\n","import { firstFocusableElement } from \"../core/dom.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { delegatesFocus, focusTarget, shadowRoot } from \"./internal.js\";\n\n/**\n * Delegates a component's focus to its first focusable shadow element.\n *\n * This mixin serves as a polyfill for the standard `delegatesFocus` shadow\n * root property. As of April 2019, that property is only supported in Chrome.\n *\n * @module DelegateFocusMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function DelegateFocusMixin(Base) {\n  // The class prototype added by the mixin.\n  class DelegateFocus extends Base {\n    /**\n     * Returns true if the component is delegating its focus.\n     *\n     * A component using `DelegateFocusMixin` will always have this property be\n     * true unless a class takes measures to override it.\n     *\n     * @type {boolean}\n     * @default true\n     */\n    get [delegatesFocus]() {\n      return true;\n    }\n\n    /**\n     * If someone tries to put the focus on us, delegate the focus to the first\n     * focusable element in the composed tree below our shadow root.\n     *\n     * @ignore\n     * @param {FocusOptions=} focusOptions\n     */\n    focus(focusOptions) {\n      /** @type {any} */ const cast = this[shadowRoot];\n      if (cast.delegatesFocus) {\n        // Native support for delegatesFocus, so don't need to do anything.\n        super.focus(focusOptions);\n        return;\n      }\n      const focusElement = this[focusTarget];\n      if (focusElement) {\n        focusElement.focus(focusOptions);\n      }\n    }\n\n    get [focusTarget]() {\n      // HACK: The commented-out code lets us rely on the browser to indicate\n      // which element should be focused on in browsers that don't support\n      // native delegatesFocus. However, this code creates subtle focus problems\n      // in components like AutoCompleteListBox: if the user clicks the toggle\n      // button, the focus won't be placed on the top-level AutoCompleteComboBox\n      // as expected; that element will be returned as the focus target, but if\n      // it doesn't have a non-negative tabindex, forwardFocus won't think it's\n      // focusable. A more correct solution would be for all components that are\n      // focusable to give themselves a tabIndex of 0 by default. Until we have\n      // to fully explore that, we workaround the bug by providing the polyfill\n      // behavior even in browsers that have delegatesFocus.\n\n      // /** @type {any} */ const cast = this[shadowRoot];\n      // return cast.delegatesFocus\n      //   ? this\n      //   : firstFocusableElement(this[shadowRoot]);\n      return firstFocusableElement(this[shadowRoot]);\n    }\n  }\n\n  return DelegateFocus;\n}\n","import { setInternalState, standardBooleanAttributes } from \"../core/dom.js\";\nimport { templateFrom } from \"../core/htmlLiterals.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\";\nimport DelegateFocusMixin from \"./DelegateFocusMixin.js\";\nimport {\n  defaultState,\n  defaultTabIndex,\n  firstRender,\n  ids,\n  nativeInternals,\n  render,\n  rendered,\n  setState,\n  shadowRoot,\n  state,\n  template,\n} from \"./internal.js\";\n\nconst extendsKey = Symbol(\"extends\");\n\nconst delegatedPropertySettersKey = Symbol(\"delegatedPropertySetters\");\n\n/* True if a standard element is focusable by default. */\n/** @type {IndexedObject<boolean>} */\nconst focusableByDefault = {\n  a: true,\n  area: true,\n  button: true,\n  details: true,\n  iframe: true,\n  input: true,\n  select: true,\n  textarea: true,\n};\n\n/*\n * A set of events which, if fired by the inner standard element, should be\n * re-raised by the custom element.\n *\n * These are events which are spec'ed to NOT get retargetted across a Shadow DOM\n * boundary, organized by which element(s) raise the events. To properly\n * simulate these, we will need to listen for the real events, then re-raise a\n * simulation of the original event. For more information, see\n * https://www.w3.org/TR/shadow-dom/#h-events-that-are-not-leaked-into-ancestor-trees.\n *\n * It appears that we do *not* need to re-raise the non-bubbling \"focus\" and\n * \"blur\" events. These appear to be automatically re-raised as expected -- but\n * it's not clear why that happens.\n *\n * The list below is reasonably complete. It omits elements that cannot be\n * wrapped (see class notes above). Also, we haven't actually tried wrapping\n * every element in this list; some of the more obscure ones might not actually\n * work as expected, but it was easier to include them for completeness than\n * to actually verify whether or not the element can be wrapped.\n */\n/** @type {IndexedObject<string[]>} */\nconst reraiseEvents = {\n  address: [\"scroll\"],\n  blockquote: [\"scroll\"],\n  caption: [\"scroll\"],\n  center: [\"scroll\"],\n  dd: [\"scroll\"],\n  dir: [\"scroll\"],\n  div: [\"scroll\"],\n  dl: [\"scroll\"],\n  dt: [\"scroll\"],\n  fieldset: [\"scroll\"],\n  form: [\"reset\", \"scroll\"],\n  frame: [\"load\"],\n  h1: [\"scroll\"],\n  h2: [\"scroll\"],\n  h3: [\"scroll\"],\n  h4: [\"scroll\"],\n  h5: [\"scroll\"],\n  h6: [\"scroll\"],\n  iframe: [\"load\"],\n  img: [\"abort\", \"error\", \"load\"],\n  input: [\"abort\", \"change\", \"error\", \"select\", \"load\"],\n  li: [\"scroll\"],\n  link: [\"load\"],\n  menu: [\"scroll\"],\n  object: [\"error\", \"scroll\"],\n  ol: [\"scroll\"],\n  p: [\"scroll\"],\n  script: [\"error\", \"load\"],\n  select: [\"change\", \"scroll\"],\n  tbody: [\"scroll\"],\n  tfoot: [\"scroll\"],\n  thead: [\"scroll\"],\n  textarea: [\"change\", \"select\", \"scroll\"],\n};\n\n/*\n * Mouse events that should be disabled if the inner component is disabled.\n */\nconst mouseEventNames = [\n  \"click\",\n  \"dblclick\",\n  \"mousedown\",\n  \"mouseenter\",\n  \"mouseleave\",\n  \"mousemove\",\n  \"mouseout\",\n  \"mouseover\",\n  \"mouseup\",\n  \"wheel\",\n];\n\n// Keep track of which re-raised events should bubble.\n/** @type {IndexedObject<boolean>} */\nconst eventBubbles = {\n  abort: true,\n  change: true,\n  reset: true,\n};\n\n// Elements which are display: block by default.\n// Source: https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements\nconst blockElements = [\n  \"address\",\n  \"article\",\n  \"aside\",\n  \"blockquote\",\n  \"canvas\",\n  \"dd\",\n  \"div\",\n  \"dl\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"li\",\n  \"main\",\n  \"nav\",\n  \"noscript\",\n  \"ol\",\n  \"output\",\n  \"p\",\n  \"pre\",\n  \"section\",\n  \"table\",\n  \"tfoot\",\n  \"ul\",\n  \"video\",\n];\n\n// Standard attributes that don't have corresponding properties.\n// These need to be delegated from the wrapper to the inner element.\nconst attributesWithoutProperties = [\n  \"accept-charset\",\n  \"autoplay\",\n  \"buffered\",\n  \"challenge\",\n  \"codebase\",\n  \"colspan\",\n  \"contenteditable\",\n  \"controls\",\n  \"crossorigin\",\n  \"datetime\",\n  \"dirname\",\n  \"for\",\n  \"formaction\",\n  \"http-equiv\",\n  \"icon\",\n  \"ismap\",\n  \"itemprop\",\n  \"keytype\",\n  \"language\",\n  \"loop\",\n  \"manifest\",\n  \"maxlength\",\n  \"minlength\",\n  \"muted\",\n  \"novalidate\",\n  \"preload\",\n  \"radiogroup\",\n  \"readonly\",\n  \"referrerpolicy\",\n  \"rowspan\",\n  \"scoped\",\n  \"usemap\",\n];\n\nconst Base = DelegateFocusMixin(ReactiveElement);\n\n/**\n * Wraps a standard HTML element so it can be extended\n *\n * The typical way to use this class is via its static `wrap` method.\n *\n * @inherits ReactiveElement\n * @mixes DelegateFocusMixin\n * @part inner - the inner standard HTML element\n */\nclass WrappedStandardElement extends Base {\n  constructor() {\n    super();\n    /** @type {any} */ const cast = this;\n    if (!this[nativeInternals] && cast.attachInternals) {\n      this[nativeInternals] = cast.attachInternals();\n    }\n  }\n\n  /**\n   *\n   * Wrapped standard elements need to forward some attributes to the inner\n   * element in cases where the attribute does not have a corresponding\n   * property. These attributes include those prefixed with \"aria-\", and some\n   * unusual standard attributes like contenteditable. To handle those, this\n   * class defines its own attributeChangedCallback.\n   *\n   * @ignore\n   * @param {string} name\n   * @param {string} oldValue\n   * @param {string} newValue\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    const forwardAttribute = attributesWithoutProperties.indexOf(name) >= 0;\n    if (forwardAttribute) {\n      const innerAttributes = Object.assign({}, this[state].innerAttributes, {\n        [name]: newValue,\n      });\n      this[setState]({ innerAttributes });\n    } else {\n      // Rely on the base attributeChangedCallback provided by\n      // AttributeMarshallingMixin.\n      super.attributeChangedCallback(name, oldValue, newValue);\n    }\n  }\n\n  // Delegate method defined by HTMLElement.\n  blur() {\n    this.inner.blur();\n  }\n\n  // One HTMLElement we *don't* delegate is `click`. Generally speaking, a click\n  // on the outer wrapper should behave the same as a click on the inner\n  // element. Also, we want to ensure outside event listeners get a click event\n  // when the click method is invoked. But a click on the inner element will\n  // raise a click event that won't be re-raised by default across the shadow\n  // boundary. The precise behavior seems to be slightly different in Safari\n  // than other browsers, but it seems safer to not delegate click.\n  //\n  // click() {}\n\n  get [defaultState]() {\n    return Object.assign(super[defaultState], {\n      innerAttributes: {},\n    });\n  }\n\n  get [defaultTabIndex]() {\n    return focusableByDefault[this.extends] ? 0 : -1;\n  }\n\n  /**\n   * The tag name of the standard HTML element extended by this class.\n   *\n   * @returns {string}\n   */\n  get extends() {\n    return this.constructor[extendsKey];\n  }\n\n  /**\n   * Returns a reference to the inner standard HTML element!\n   *\n   * @type {HTMLElement}\n   */\n  get inner() {\n    /** @type {any} */\n    const result = this[ids] && this[ids].inner;\n    if (!result) {\n      /* eslint-disable no-console */\n      console.warn(\n        \"Attempted to get an inner standard element before it was instantiated.\"\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Return the value of the named property on the inner standard element.\n   *\n   * @param {string} name\n   * @returns {any}\n   */\n  getInnerProperty(name) {\n    // If we haven't rendered yet, use internal state value. Once we've\n    // rendered, we get the value from the wrapped element itself. Return our\n    // concept of the current property value from state. If the property hasn't\n    // been defined, however, get the current value of the property from the\n    // inner element.\n    //\n    // This is intended to support cases like an anchor element. If someone sets\n    // `href` on a wrapped anchor, we'll know the value of `href` from state,\n    // but we won't know the value of href-dependent calculated properties like\n    // `protocol`. Using two sources of truth (state and the inner element)\n    // seems fragile, but it's unclear how else to handle this without\n    // reimplementing all HTML property interactions ourselves.\n    //\n    // This arrangement also means that, if an inner element property can change\n    // in response to user interaction (e.g., an input element's value changes\n    // as the user types), the component must listen to suitable events on the\n    // inner element and update its state accordingly.\n    const value = this[state][name];\n    return value || (this[shadowRoot] && this.inner[name]);\n  }\n\n  static get observedAttributes() {\n    // For our custom attributeChangedCallback to work, we need to observe\n    // the attributes we want to forward.\n    // @ts-ignore\n    return [...super.observedAttributes, ...attributesWithoutProperties];\n  }\n\n  [render](/** @type {ChangedFlags} */ changed) {\n    super[render](changed);\n\n    const inner = this.inner;\n    if (this[firstRender]) {\n      // Listen for any events raised by the inner element which will not\n      // automatically be retargetted across the Shadow DOM boundary, and\n      // re-raise those events when they happen.\n      const eventNames = reraiseEvents[this.extends] || [];\n      eventNames.forEach((eventName) => {\n        inner.addEventListener(eventName, () => {\n          const event = new Event(eventName, {\n            bubbles: eventBubbles[eventName] || false,\n          });\n          this.dispatchEvent(event);\n        });\n      });\n\n      // If inner element can be disabled, then listen to mouse events on the\n      // *outer* element and absorb them if the inner element is disabled.\n      // Without this, a mouse event like a click on the inner disabled element\n      // would be treated as a click on the outer element. Someone listening to\n      // clicks on the outer element would get a click event, even though the\n      // overall element is supposed to be disabled.\n      if (\"disabled\" in inner) {\n        mouseEventNames.forEach((eventName) => {\n          this.addEventListener(eventName, (event) => {\n            if (/** @type {any} */ (inner).disabled) {\n              event.stopImmediatePropagation();\n            }\n          });\n        });\n      }\n    }\n\n    if (changed.tabIndex) {\n      inner.tabIndex = this[state].tabIndex;\n    }\n\n    if (changed.innerAttributes) {\n      // Forward attributes to the inner element.\n      // See notes at attributeChangedCallback.\n      const { innerAttributes } = this[state];\n      for (const name in innerAttributes) {\n        applyAttribute(inner, name, innerAttributes[name]);\n      }\n    }\n\n    // Forward delegated properties to the inner element.\n    this.constructor[delegatedPropertySettersKey].forEach((property) => {\n      if (changed[property]) {\n        const value = this[state][property];\n\n        // Inner selection properties needed to be handled specially.\n        // See TrackTextSelectionMixin.\n        const specialCase =\n          (property === \"selectionEnd\" || property === \"selectionStart\") &&\n          value === null;\n        if (!specialCase) {\n          inner[property] = value;\n        }\n      }\n    });\n  }\n\n  [rendered](/** @type {ChangedFlags} */ changed) {\n    super[rendered](changed);\n\n    // Apply disabled state.\n    if (changed.disabled) {\n      const { disabled } = this[state];\n      if (disabled !== undefined) {\n        setInternalState(this, \"disabled\", disabled);\n      }\n    }\n  }\n\n  /**\n   * Set the named property on the inner standard element.\n   *\n   * @param {string} name\n   * @param {any} value\n   */\n  setInnerProperty(name, value) {\n    // We normally don't check an existing state value before calling[setState],\n    // relying instead on[setState] to do that check for us. However, we have\n    // dangers in this particular component of creating infinite loops.\n    //\n    // E.g., setting the tabindex attibute will call attributeChangedCallback,\n    // which will set the tabIndex property, which will want to set state, which\n    // will cause a render, which will try to reflect the current value of the\n    // tabIndex property to the tabindex attribute, causing a loop.\n    //\n    // To avoid this, we check the existing value before updating our state.\n    if (this[state][name] !== value) {\n      this[setState]({ [name]: value });\n    }\n  }\n\n  /**\n   * The template copied into the shadow tree of new instances of this element.\n   *\n   * The default value of this property is a template that includes an instance\n   * the standard element being wrapped, with a `<slot>` element inside that\n   * to pick up the element's light DOM content. For example, if you wrap an\n   * `<a>` element, then the default template will look like:\n   *\n   *     <template>\n   *       <style>\n   *       :host {\n   *         display: inline-block;\n   *       }\n   *       </style>\n   *       <a id=\"inner\">\n   *         <slot></slot>\n   *       </a>\n   *     </template>\n   *\n   * The `display` styling applied to the host will be `block` for elements that\n   * are block elements by default, and `inline-block` (not `inline`) for other\n   * elements.\n   *\n   * If you'd like the template to include other elements, then override this\n   * property and return a template of your own. The template should include an\n   * instance of the standard HTML element you are wrapping, and the ID of that\n   * element should be \"inner\".\n   *\n   * @type {(string|HTMLTemplateElement)}\n   */\n  get [template]() {\n    const display = blockElements.includes(this.extends)\n      ? \"block\"\n      : \"inline-block\";\n    return templateFrom.html`\n      <style>\n        :host {\n          display: ${display}\n        }\n        \n        [part~=\"inner\"] {\n          box-sizing: border-box;\n          height: 100%;\n          width: 100%;\n        }\n      </style>\n      <${this.extends} id=\"inner\" part=\"inner\">\n        <slot></slot>\n      </${this.extends}>\n    `;\n  }\n\n  /**\n   * Creates a class that wraps a standard HTML element.\n   *\n   * Note that the resulting class is a subclass of WrappedStandardElement, not\n   * the standard class being wrapped. E.g., if you call\n   * `WrappedStandardElement.wrap('a')`, you will get a class whose shadow tree\n   * will include an anchor element, but the class will *not* inherit from\n   * HTMLAnchorElement.\n   *\n   * @static\n   * @param {string} extendsTag - the standard HTML element tag to extend\n   */\n  static wrap(extendsTag) {\n    // Create the new class.\n    /** @type {Constructor<WrappedStandardElement>} */\n    class Wrapped extends WrappedStandardElement {}\n\n    // Indicate which tag it wraps.\n    /** @type {any} */ (Wrapped)[extendsKey] = extendsTag;\n\n    // Create getter/setters that delegate to the wrapped element.\n    const element = document.createElement(extendsTag);\n    defineDelegates(Wrapped, Object.getPrototypeOf(element));\n\n    return Wrapped;\n  }\n}\n\n/**\n * Update the given attribute on an element.\n *\n * Passing a non-null `value` acts like a call to `setAttribute(name, value)`.\n * If the supplied `value` is nullish, this acts like a call to\n * `removeAttribute(name)`.\n *\n * @private\n * @param {HTMLElement} element\n * @param {string} name\n * @param {string} value\n */\nexport function applyAttribute(element, name, value) {\n  if (standardBooleanAttributes[name]) {\n    // Boolean attribute\n    if (typeof value === \"string\") {\n      element.setAttribute(name, \"\");\n    } else if (value === null) {\n      element.removeAttribute(name);\n    }\n  } else {\n    // Regular string-valued attribute\n    if (value != null) {\n      element.setAttribute(name, value.toString());\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n}\n\n/**\n * Create a delegate for the method or property identified by the descriptor.\n *\n * @private\n * @param {string} name\n * @param {PropertyDescriptor} descriptor\n */\nfunction createDelegate(name, descriptor) {\n  if (typeof descriptor.value === \"function\") {\n    if (name !== \"constructor\") {\n      return createMethodDelegate(name, descriptor);\n    }\n  } else if (\n    typeof descriptor.get === \"function\" ||\n    typeof descriptor.set === \"function\"\n  ) {\n    return createPropertyDelegate(name, descriptor);\n  }\n  return null;\n}\n\n/**\n * Create a delegate for the method identified by the descriptor.\n *\n * @private\n * @param {string} name\n * @param {PropertyDescriptor} descriptor\n */\nfunction createMethodDelegate(name, descriptor) {\n  const value = function (/** @type {any[]} */ ...args) {\n    // @ts-ignore\n    this.inner[name](...args);\n  };\n  const delegate = {\n    configurable: descriptor.configurable,\n    enumerable: descriptor.enumerable,\n    value,\n    writable: descriptor.writable,\n  };\n  return delegate;\n}\n\n/**\n * Create a delegate for the property identified by the descriptor.\n *\n * @private\n * @param {string} name\n * @param {PropertyDescriptor} descriptor\n */\nfunction createPropertyDelegate(name, descriptor) {\n  /** @type {PlainObject} */\n  const delegate = {\n    configurable: descriptor.configurable,\n    enumerable: descriptor.enumerable,\n  };\n  if (descriptor.get) {\n    delegate.get = function () {\n      return this.getInnerProperty(name);\n    };\n  }\n  if (descriptor.set) {\n    delegate.set = function (/** @type {any} */ value) {\n      this.setInnerProperty(name, value);\n    };\n  }\n  if (descriptor.writable) {\n    delegate.writable = descriptor.writable;\n  }\n  return delegate;\n}\n\n/**\n * Define delegates for the given class for each property/method on the\n * indicated prototype.\n *\n * @private\n * @param {Constructor<Object>} cls\n * @param {Object} prototype\n */\nfunction defineDelegates(cls, prototype) {\n  const names = Object.getOwnPropertyNames(prototype);\n  cls[delegatedPropertySettersKey] = [];\n  names.forEach((name) => {\n    const descriptor = Object.getOwnPropertyDescriptor(prototype, name);\n    if (!descriptor) {\n      return;\n    }\n    const delegate = createDelegate(name, descriptor);\n    if (delegate) {\n      Object.defineProperty(cls.prototype, name, delegate);\n      if (delegate.set) {\n        cls[delegatedPropertySettersKey].push(name);\n      }\n    }\n  });\n}\n\nexport default WrappedStandardElement;\n","import { fragmentFrom } from \"../core/htmlLiterals.js\";\nimport AriaRoleMixin from \"./AriaRoleMixin.js\";\nimport ComposedFocusMixin from \"./ComposedFocusMixin.js\";\nimport DelegateInputLabelMixin from \"./DelegateInputLabelMixin.js\";\nimport FocusVisibleMixin from \"./FocusVisibleMixin.js\";\nimport {\n  defaultState,\n  ids,\n  inputDelegate,\n  keydown,\n  state,\n  tap,\n  template,\n} from \"./internal.js\";\nimport KeyboardMixin from \"./KeyboardMixin.js\";\nimport WrappedStandardElement from \"./WrappedStandardElement.js\";\n\nconst Base = AriaRoleMixin(\n  ComposedFocusMixin(\n    DelegateInputLabelMixin(\n      FocusVisibleMixin(KeyboardMixin(WrappedStandardElement.wrap(\"button\")))\n    )\n  )\n);\n\n// Do we need to explicitly map Space/Enter keys to a button click?\n//\n// As of February 2019, Firefox automatically translates a Space/Enter key on a\n// button into a click event that bubbles to its host. Chrome/Safari do not do\n// this automatically, so we have to do it ourselves.\n//\n// It's gross to look for a specific browser (Firefox), but it seems extremely\n// hard to feature-detect this. Even if we try to create a button in a shadow at\n// runtime and send a key event to it, Chrome/Safari don't seem to do their\n// normal mapping of Space/Enter to a click for synthetic keyboard events.\n//\n// Firefox detection adapted from https://stackoverflow.com/a/9851769/76472\n// and adjusted to pass type checks.\nconst firefox = \"InstallTrigger\" in window;\nconst mapKeysToClick = !firefox;\n\n/**\n * Base class for custom buttons.\n *\n * `Button` wraps a standard HTML `button` element, allowing for custom styling\n * and behavior while ensuring standard keyboard and focus behavior.\n *\n * @inherits WrappedStandardElement\n * @mixes AriaRoleMixin\n * @mixes ComposedFocusMixin\n * @mixes DelegateInputLabelMixin\n * @mixes FocusVisibleMixin\n * @mixes KeyboardMixin\n */\nclass Button extends Base {\n  get [defaultState]() {\n    return Object.assign(super[defaultState], {\n      role: \"button\",\n      treatEnterAsClick: true,\n      treatSpaceAsClick: true,\n    });\n  }\n\n  // TODO: Since this isn't really an input, we should probably rename this.\n  get [inputDelegate]() {\n    return this[ids].inner;\n  }\n\n  // Pressing Enter or Space raises a click event, as if the user had clicked\n  // the inner button.\n  // TODO: Space should raise the click on *keyup*.\n  [keydown](/** @type {KeyboardEvent} */ event) {\n    let handled;\n    if (mapKeysToClick) {\n      switch (event.key) {\n        case \" \":\n          if (this[state].treatSpaceAsClick) {\n            this[tap]();\n            handled = true;\n          }\n          break;\n\n        case \"Enter\":\n          if (this[state].treatEnterAsClick) {\n            this[tap]();\n            handled = true;\n          }\n          break;\n      }\n    }\n\n    // Prefer mixin result if it's defined, otherwise use base result.\n    return handled || (super[keydown] && super[keydown](event));\n  }\n\n  // Respond to a simulated click.\n  [tap]() {\n    const clickEvent = new MouseEvent(\"click\", {\n      bubbles: true,\n      cancelable: true,\n    });\n    this.dispatchEvent(clickEvent);\n  }\n\n  get [template]() {\n    const result = super[template];\n    result.content.append(\n      fragmentFrom.html`\n        <style>\n          :host {\n            display: inline-flex;\n            outline: none;\n            -webkit-tap-highlight-color: transparent;\n            touch-action: manipulation;\n          }\n\n          [part~=\"inner\"] {\n            align-items: center;\n            background: none;\n            border: none;\n            color: inherit;\n            flex: 1;\n            font: inherit;\n            outline: none;\n            padding: 0;\n          }\n        </style>\n      `\n    );\n    return result;\n  }\n}\n\nexport default Button;\n","import { template } from \"../base/internal.js\";\nimport { fragmentFrom } from \"../core/htmlLiterals.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\n\n/**\n * Button styles in the Plain reference design system\n *\n * @module PlainButtonMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function PlainButtonMixin(Base) {\n  return class PlainButton extends Base {\n    get [template]() {\n      const result = super[template];\n      result.content.append(fragmentFrom.html`\n        <style>\n          :host([disabled]) ::slotted(*) {\n            opacity: 0.5;\n          }\n\n          [part~=\"inner\"] {\n            display: inline-flex;\n            justify-content: center;\n            margin: 0;\n            position: relative;\n          }\n        </style>\n      `);\n      return result;\n    }\n  };\n}\n","import Button from \"../base/Button.js\";\nimport PlainButtonMixin from \"./PlainButtonMixin.js\";\n\n/**\n * Button component in the Plain reference design system\n *\n * @inherits Button\n */\nclass PlainButton extends PlainButtonMixin(Button) {}\n\nexport default PlainButton;\n","import DarkModeMixin from \"../base/DarkModeMixin.js\";\nimport { template } from \"../base/internal.js\";\nimport { fragmentFrom } from \"../core/htmlLiterals.js\";\nimport PlainButton from \"./PlainButton.js\";\n\nconst Base = DarkModeMixin(PlainButton);\n\n/**\n * Left/right arrow button in the Plain reference design system\n *\n * This component is used by\n * [PlainArrowDirectionMixin](PlainArrowDirectionMixin) for its default\n * left/right arrow buttons.\n *\n * @inherits PlainButton\n * @mixes DarkModeMixin\n */\nclass PlainArrowDirectionButton extends Base {\n  get [template]() {\n    const result = super[template];\n    result.content.append(\n      fragmentFrom.html`\n        <style>\n          :host {\n            color: rgba(0, 0, 0, 0.7);\n          }\n\n          :host(:not([disabled]):hover) {\n            background: rgba(0, 0, 0, 0.2);\n            color: rgba(0, 0, 0, 0.8);\n            cursor: pointer;\n          }\n\n          :host([disabled]) {\n            color: rgba(0, 0, 0, 0.3);\n          }\n\n          [part~=\"inner\"] {\n            fill: currentcolor;\n          }\n\n          :host([dark]) {\n            color: rgba(255, 255, 255, 0.7);\n          }\n\n          :host([dark]:not([disabled]):hover) {\n            background: rgba(255, 255, 255, 0.2);\n            color: rgba(255, 255, 255, 0.8);\n          }\n\n          :host([dark][disabled]) {\n            color: rgba(255, 255, 255, 0.3);\n          }\n        </style>\n      `\n    );\n    return result;\n  }\n}\n\nexport default PlainArrowDirectionButton;\n","/**\n * Helpers related to universal accessibility\n *\n * Universal accessibility is a core goal of the Elix project. These helpers are\n * used by mixins like [AriaListMixin](AriaListMixin) and\n * [AriaMenuMixin](AriaMenuMixin) to support accessibility via ARIA.\n *\n * @module accessibility\n */\n\n// Used by ensureId\nconst generatedIdKey = Symbol(\"generatedId\");\nlet generatedIdCount = 0;\n\n/**\n * A dictionary mapping built-in HTML elements to their default ARIA role.\n *\n * Example: `defaultAriaRole.ol` returns \"list\", since the default ARIA role\n * for an `ol` (ordered list) element is \"list\".\n */\nexport const defaultAriaRole = {\n  a: \"link\",\n  article: \"region\",\n  button: \"button\",\n  h1: \"sectionhead\",\n  h2: \"sectionhead\",\n  h3: \"sectionhead\",\n  h4: \"sectionhead\",\n  h5: \"sectionhead\",\n  h6: \"sectionhead\",\n  hr: \"sectionhead\",\n  iframe: \"region\",\n  link: \"link\",\n  menu: \"menu\",\n  ol: \"list\",\n  option: \"option\",\n  output: \"liveregion\",\n  progress: \"progressbar\",\n  select: \"select\",\n  table: \"table\",\n  td: \"td\",\n  textarea: \"textbox\",\n  th: \"th\",\n  ul: \"list\",\n};\n\n/**\n * If the given element already has an ID, return it. If not, generate a\n * previously unused ID and return that.\n *\n * @param {Element} element\n * @returns {string}\n */\nexport function ensureId(element) {\n  let id = element.id || element[generatedIdKey];\n  if (!id) {\n    id = `_id${generatedIdCount++}`;\n    // Remember that we generated an ID for this element.\n    element[generatedIdKey] = id;\n  }\n  return id;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { defaultAriaRole, ensureId } from \"./accessibility.js\";\nimport {\n  defaultState,\n  render,\n  rendering,\n  setState,\n  state,\n} from \"./internal.js\";\n\n/**\n * Exposes a list's currently-selected item to assistive technologies.\n *\n * Handling ARIA selection state properly is actually quite complex:\n *\n * * The items in the list need to be indicated as possible items via an ARIA\n *   `role` attribute value such as \"option\".\n * * The selected item(s) need to be marked as selected by setting the item's\n *   `aria-selected` attribute to true *and* the other items need be marked as\n *   *not* selected by setting `aria-selected` to false.\n * * The outermost element with the keyboard focus needs to have attributes\n *   set on it so that the current item is knowable at the list level via the\n *   `aria-activedescendant` attribute.\n * * Use of `aria-activedescendant` in turn requires that all items in the\n *   list have ID attributes assigned to them.\n * * If the list supports mutli-selection, `aria-multiselectable` must be\n *   set to \"true\" on the host.\n *\n * This mixin tries to address all of the above requirements. To that end,\n * this mixin will assign generated IDs to any item that doesn't already have\n * an ID.\n *\n * ARIA relies on elements to provide `role` attributes. This mixin will apply\n * a default role of \"listbox\" on the outer list if it doesn't already have an\n * explicit role. Similarly, this mixin will apply a default role of \"option\"\n * to any list item that does not already have a role specified.\n *\n * This mixin expects the component to define a `currentIndex` state member to\n * indicate the current item. You can supply that yourself, or do so via\n * [ItemsCursorMixin](ItemsCursorMixin). For a multi-select list, you must also\n * define a `selectedItemFlags` state member, available via\n * [ItemsMultiSelectMixin](ItemsMultiSelectMixin).\n *\n * @module AriaListMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function AriaListMixin(Base) {\n  // The class prototype added by the mixin.\n  class AriaList extends Base {\n    get [defaultState]() {\n      const base = super[defaultState];\n      return Object.assign(base, {\n        itemRole: base.itemRole || \"option\",\n        role: base.role || \"listbox\",\n      });\n    }\n\n    get itemRole() {\n      return this[state].itemRole;\n    }\n    set itemRole(itemRole) {\n      this[setState]({ itemRole });\n    }\n\n    [render](/** @type {ChangedFlags} */ changed) {\n      if (super[render]) {\n        super[render](changed);\n      }\n\n      const { itemRole } = this[state];\n      /** @type {ListItemElement[]} */ const items = this[state].items;\n\n      // Give each item an ID.\n      if (changed.items && items) {\n        items.forEach((item) => {\n          if (!item.id) {\n            item.id = ensureId(item);\n          }\n        });\n      }\n\n      // Give each item a role.\n      if ((changed.items || changed.itemRole) && items) {\n        items.forEach((item) => {\n          if (itemRole === defaultAriaRole[item.localName]) {\n            item.removeAttribute(\"role\");\n          } else {\n            item.setAttribute(\"role\", itemRole);\n          }\n        });\n      }\n\n      // Reflect the selected state to each item.\n      if (changed.items || changed.selectedIndex || changed.selectedItemFlags) {\n        // Does the list support multi-selection?\n        const { selectedItemFlags, selectedIndex } = this[state];\n        if (items) {\n          items.forEach((item, index) => {\n            const selected = selectedItemFlags\n              ? selectedItemFlags[index] // Multi-select\n              : index === selectedIndex; // Single-select\n            item.setAttribute(\"aria-selected\", selected.toString());\n          });\n        }\n      }\n\n      // Indicate on the host that the current item is active.\n      if (changed.items || changed.selectedIndex) {\n        const { selectedIndex } = this[state];\n        const selectedItem =\n          selectedIndex >= 0 && items ? items[selectedIndex] : null;\n        if (selectedItem) {\n          if (!selectedItem.id) {\n            selectedItem.id = ensureId(selectedItem);\n          }\n          this.setAttribute(\"aria-activedescendant\", selectedItem.id);\n        } else {\n          this.removeAttribute(\"aria-activedescendant\");\n        }\n      }\n\n      if (changed.selectedItemFlags) {\n        // Let ARIA know this is a multi-select list box.\n        if (this[state].selectedItemFlags) {\n          this.setAttribute(\"aria-multiselectable\", \"true\");\n        } else {\n          this.removeAttribute(\"aria-multiselectable\");\n        }\n      }\n\n      // Let ARIA know list orientation.\n      if (changed.orientation) {\n        const { orientation } = this[state];\n        this.setAttribute(\"aria-orientation\", orientation);\n      }\n\n      // Apply top-level role.\n      if (changed.role) {\n        const { role } = this[state];\n        this.setAttribute(\"role\", role);\n      }\n    }\n\n    // Setting the standard role attribute will invoke this property setter,\n    // which will allow us to update our state.\n    get role() {\n      return super.role;\n    }\n    set role(role) {\n      super.role = role;\n      if (!this[rendering]) {\n        this[setState]({ role });\n      }\n    }\n  }\n\n  return AriaList;\n}\n","/**\n * Helpers for dynamically creating and patching component templates.\n *\n * The [ShadowTemplateMixin](ShadowTemplateMixin) lets you define a component\n * template that will be used to popuplate the shadow subtree of new component\n * instances. These helpers, especially the [html](#html) function, are intended\n * to simplify the creation of such templates.\n *\n * In particular, these helpers can be useful in [patching\n * templates](customizing#template-patching) inherited from a base class.\n *\n * Some of these functions take _descriptors_ that can either be a class, a tag\n * name, or an HTML template. These are generally used to fill specific roles in\n * an element's template; see [element roles](customizing#element-part-types).\n *\n * @module template\n */\n\nimport { templateFrom } from \"./htmlLiterals.js\";\n\n// Used by registerCustomElement.\nconst mapBaseTagToCount = new Map();\n\n/**\n * Create an element from a role descriptor (a component class constructor or\n * an HTML tag name).\n *\n * If the descriptor is an HTML template, and the resulting document fragment\n * contains a single top-level node, that node is returned directly (instead of\n * the fragment).\n *\n * @param {PartDescriptor} descriptor - the descriptor that will be used to\n * create the element\n * @returns {Element} the new element\n */\nexport function createElement(descriptor) {\n  if (typeof descriptor === \"function\") {\n    // Instantiable component class constructor\n    let element;\n    try {\n      element = new descriptor();\n    } catch (e) {\n      if (e.name === \"TypeError\") {\n        // Most likely this error results from the fact that the indicated\n        // component class hasn't been registered. Register it now with a random\n        // name and try again.\n        registerCustomElement(descriptor);\n        element = new descriptor();\n      } else {\n        // The exception was for some other reason.\n        throw e;\n      }\n    }\n    return element;\n    // @ts-ignore\n  } else {\n    // String tag name: e.g., 'div'\n    return document.createElement(descriptor);\n  }\n}\n\nexport function html(strings, ...substitutions) {\n  /* eslint-disable no-console */\n  console.warn(\n    `The template.html helper has moved to htmlLiterals.js, and is now called \\`templateFrom.html\\`. Please update your imports.`\n  );\n  return templateFrom.html(strings, ...substitutions);\n}\n\n/**\n * Register the indicated constructor as a custom element class.\n *\n * This function generates a suitable string tag for the class. If the\n * constructor is a named function (which is typical for hand-authored code),\n * the function's `name` will be used as the base for the tag. If the\n * constructor is an anonymous function (which often happens in\n * generated/minified code), the tag base will be \"custom-element\".\n *\n * In either case, this function adds a uniquifying number to the end of the\n * base to produce a complete tag.\n *\n * @private\n * @param {Constructor<HTMLElement>} classFn\n */\nfunction registerCustomElement(classFn) {\n  let baseTag;\n  // HTML places more restrictions on the first character in a tag than\n  // JavaScript places on the first character of a class name. We apply this\n  // more restrictive condition to the class names we'll convert to tags. Class\n  // names that fail this check -- often generated class names -- will result in\n  // a base tag name of \"custom-element\".\n  const classNameRegex = /^[A-Za-z][A-Za-z0-9_$]*$/;\n  const classNameMatch = classFn.name && classFn.name.match(classNameRegex);\n  if (classNameMatch) {\n    // Given the class name `FooBar`, calculate the base tag name `foo-bar`.\n    const className = classNameMatch[0];\n    const uppercaseRegEx = /([A-Z])/g;\n    const hyphenated = className.replace(\n      uppercaseRegEx,\n      (match, letter, offset) => (offset > 0 ? `-${letter}` : letter)\n    );\n    baseTag = hyphenated.toLowerCase();\n  } else {\n    baseTag = \"custom-element\";\n  }\n  // Add a uniquifying number to the end of the tag until we find a tag\n  // that hasn't been registered yet.\n  let count = mapBaseTagToCount.get(baseTag) || 0;\n  let tag;\n  for (; ; count++) {\n    tag = `${baseTag}-${count}`;\n    if (!customElements.get(tag)) {\n      // Not in use.\n      break;\n    }\n  }\n  // Register with the generated tag.\n  customElements.define(tag, /** @type {any} */ classFn);\n  // Bump number and remember it. If we see the same base tag again later, we'll\n  // start counting at that number in our search for a uniquifying number.\n  mapBaseTagToCount.set(baseTag, count + 1);\n}\n\n/**\n * Replace an original node in a tree or document fragment with the indicated\n * replacement node. The attributes, classes, styles, and child nodes of the\n * original node will be moved to the replacement.\n *\n * @param {Node} original - an existing node to be replaced\n * @param {Node} replacement - the node to replace the existing node with\n * @returns {Node} the updated replacement node\n */\nexport function replace(original, replacement) {\n  const parent = original.parentNode;\n  if (!parent) {\n    throw \"An element must have a parent before it can be substituted.\";\n  }\n  if (\n    (original instanceof HTMLElement || original instanceof SVGElement) &&\n    (replacement instanceof HTMLElement || replacement instanceof SVGElement)\n  ) {\n    // Merge attributes from original to replacement, letting replacement win\n    // conflicts. Handle classes and styles separately (below).\n    Array.prototype.forEach.call(original.attributes, (\n      /** @type {Attr} */ attribute\n    ) => {\n      if (\n        !replacement.getAttribute(attribute.name) &&\n        attribute.name !== \"class\" &&\n        attribute.name !== \"style\"\n      ) {\n        replacement.setAttribute(attribute.name, attribute.value);\n      }\n    });\n    // Copy classes/styles from original to replacement, letting replacement win\n    // conflicts.\n    Array.prototype.forEach.call(original.classList, (\n      /** @type {string} */ className\n    ) => {\n      replacement.classList.add(className);\n    });\n    Array.prototype.forEach.call(original.style, (\n      /** @type {number} */ key\n    ) => {\n      if (!replacement.style[key]) {\n        replacement.style[key] = original.style[key];\n      }\n    });\n  }\n  // Copy over children.\n  // @ts-ignore\n  replacement.append(...original.childNodes);\n\n  parent.replaceChild(replacement, original);\n  return replacement;\n}\n\n/**\n * Replace a node with a new element, transferring all attributes, classes,\n * styles, and child nodes from the original(s) to the replacement(s).\n *\n * The descriptor used for the replacements can be a 1) component class\n * constructor, 2) an HTML tag name, or 3) an HTML template. For #1 and #2, if\n * the existing elements that match the selector are already of the desired\n * class/tag name, the replacement operation is skipped.\n *\n * @param {Element} original - the node to replace\n * @param {PartDescriptor} descriptor - the descriptor used to generate the\n * replacement element\n * @returns {Element} the replacement node(s)\n */\nexport function transmute(original, descriptor) {\n  if (\n    (typeof descriptor === \"function\" && original.constructor === descriptor) ||\n    (typeof descriptor === \"string\" &&\n      original instanceof Element &&\n      original.localName === descriptor)\n  ) {\n    // Already correct type of element, no transmutation necessary.\n    return original;\n  } else {\n    // Transmute the single node.\n    const replacement = createElement(descriptor);\n    replace(original, replacement);\n    return replacement;\n  }\n}\n","import { forwardFocus } from \"../core/dom.js\";\nimport { fragmentFrom } from \"../core/htmlLiterals.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { transmute } from \"../core/template.js\";\nimport Button from \"./Button.js\";\nimport {\n  defaultState,\n  goNext,\n  goPrevious,\n  ids,\n  raiseChangeEvents,\n  render,\n  setState,\n  shadowRoot,\n  state,\n} from \"./internal.js\";\n\nconst wrap = Symbol(\"wrap\");\n\n/**\n * Adds previous/next arrow buttons to a carousel-like component.\n *\n * @module ArrowDirectionMixin\n * @param {Constructor<ReactiveElement>} Base\n * @part {Button} arrow-button - both of the arrow buttons\n * @part arrow-button-next - the arrow button that navigates to the next item\n * @part arrow-button-previous - the arrow button that navigates to the previous item\n */\nfunction ArrowDirectionMixin(Base) {\n  // The class prototype added by the mixin.\n  class ArrowDirection extends Base {\n    /**\n     * True if the arrow buttons should overlap the component contents;\n     * false if they should appear to the side of the contents.\n     *\n     * @type {boolean}\n     * @default true\n     */\n    get arrowButtonOverlap() {\n      return this[state].arrowButtonOverlap;\n    }\n    set arrowButtonOverlap(arrowButtonOverlap) {\n      this[setState]({ arrowButtonOverlap });\n    }\n\n    /**\n     * The class or tag used to create the `arrow-button` parts – the\n     * previous/next arrow buttons.\n     *\n     * @type {PartDescriptor}\n     */\n    get arrowButtonPartType() {\n      return this[state].arrowButtonPartType;\n    }\n    set arrowButtonPartType(arrowButtonPartType) {\n      this[setState]({ arrowButtonPartType });\n    }\n\n    // TODO: Symbols\n    arrowButtonPrevious() {\n      if (super.arrowButtonPrevious) {\n        return super.arrowButtonPrevious();\n      } else {\n        return this[goPrevious]();\n      }\n    }\n\n    arrowButtonNext() {\n      if (super.arrowButtonNext) {\n        return super.arrowButtonNext();\n      } else {\n        return this[goNext]();\n      }\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (name === \"arrow-button-overlap\") {\n        this.arrowButtonOverlap = String(newValue) === \"true\";\n      } else if (name === \"show-arrow-buttons\") {\n        this.showArrowButtons = String(newValue) === \"true\";\n      } else {\n        super.attributeChangedCallback(name, oldValue, newValue);\n      }\n    }\n\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        arrowButtonOverlap: true,\n        arrowButtonPartType: Button,\n        orientation: \"horizontal\",\n        showArrowButtons: true,\n      });\n    }\n\n    [render](/** @type {ChangedFlags} */ changed) {\n      if (changed.arrowButtonPartType) {\n        const arrowButtonPrevious = this[ids].arrowButtonPrevious;\n        if (arrowButtonPrevious instanceof HTMLElement) {\n          // Turn off focus handling for old previous button.\n          forwardFocus(arrowButtonPrevious, null);\n        }\n        const arrowButtonNext = this[ids].arrowButtonNext;\n        if (arrowButtonNext instanceof HTMLElement) {\n          // Turn off focus handling for old next button.\n          forwardFocus(arrowButtonNext, null);\n        }\n      }\n\n      if (super[render]) {\n        super[render](changed);\n      }\n\n      renderParts(this[shadowRoot], this[state], changed);\n\n      if (changed.arrowButtonPartType) {\n        /** @type {any} */\n        const cast = this;\n\n        const arrowButtonPrevious = this[ids].arrowButtonPrevious;\n        if (arrowButtonPrevious instanceof HTMLElement) {\n          forwardFocus(arrowButtonPrevious, cast);\n        }\n        const previousButtonHandler = createButtonHandler(this, () =>\n          this.arrowButtonPrevious()\n        );\n        arrowButtonPrevious.addEventListener(\n          \"mousedown\",\n          previousButtonHandler\n        );\n\n        const arrowButtonNext = this[ids].arrowButtonNext;\n        if (arrowButtonNext instanceof HTMLElement) {\n          forwardFocus(arrowButtonNext, cast);\n        }\n        const nextButtonHandler = createButtonHandler(this, () =>\n          this.arrowButtonNext()\n        );\n        arrowButtonNext.addEventListener(\"mousedown\", nextButtonHandler);\n      }\n\n      const {\n        arrowButtonOverlap,\n        canGoNext,\n        canGoPrevious,\n        orientation,\n        rightToLeft,\n      } = this[state];\n      const vertical = orientation === \"vertical\";\n      /** @type {any} */ const arrowButtonPrevious = this[ids]\n        .arrowButtonPrevious;\n      /** @type {any} */ const arrowButtonNext = this[ids].arrowButtonNext;\n\n      // Position the buttons.\n      if (\n        changed.arrowButtonOverlap ||\n        changed.orientation ||\n        changed.rightToLeft\n      ) {\n        this[ids].arrowDirection.style.flexDirection = vertical\n          ? \"column\"\n          : \"row\";\n\n        const buttonStyle = {\n          bottom: null,\n          left: null,\n          right: null,\n          top: null,\n        };\n        if (arrowButtonOverlap) {\n          Object.assign(buttonStyle, {\n            position: \"absolute\",\n            \"z-index\": 1,\n          });\n        } else {\n          Object.assign(buttonStyle, {\n            position: null,\n            \"z-index\": null,\n          });\n        }\n        let previousButtonStyle;\n        let nextButtonStyle;\n        if (arrowButtonOverlap) {\n          if (vertical) {\n            // Vertical\n            Object.assign(buttonStyle, {\n              left: 0,\n              right: 0,\n            });\n            previousButtonStyle = {\n              top: 0,\n            };\n            nextButtonStyle = {\n              bottom: 0,\n            };\n          } else {\n            // Horizontal\n            Object.assign(buttonStyle, {\n              bottom: 0,\n              top: 0,\n            });\n            if (rightToLeft) {\n              previousButtonStyle = {\n                right: 0,\n              };\n              nextButtonStyle = {\n                left: 0,\n              };\n            } else {\n              // Typical condition: horizontal, left-to-right\n              previousButtonStyle = {\n                left: 0,\n              };\n              nextButtonStyle = {\n                right: 0,\n              };\n            }\n          }\n        }\n        Object.assign(\n          arrowButtonPrevious.style,\n          buttonStyle,\n          previousButtonStyle\n        );\n        Object.assign(arrowButtonNext.style, buttonStyle, nextButtonStyle);\n      }\n\n      // Disable the previous/next buttons if we can't go in those directions.\n      // WORKAROUND: We check to makes sure that can go previous/next state is\n      // defined (which happens once the component has items). Without that\n      // check, as of May 2019, a Chrome bug prevents the use of this mixin:\n      // multiple carousel instances on a page will have their next button\n      // initially disabled even when it should be enabled. Safari/Firefox do\n      // not exhibit that issue. Since identifying the root cause proved too\n      // difficult, this check was added.\n      if (changed.canGoNext && canGoNext !== null) {\n        arrowButtonNext.disabled = !canGoNext;\n      }\n      // See note for canGoNext above.\n      if (changed.canGoPrevious && canGoPrevious !== null) {\n        arrowButtonPrevious.disabled = !canGoPrevious;\n      }\n\n      if (changed.showArrowButtons) {\n        const display = this[state].showArrowButtons ? null : \"none\";\n        arrowButtonPrevious.style.display = display;\n        arrowButtonNext.style.display = display;\n      }\n    }\n\n    get showArrowButtons() {\n      return this[state].showArrowButtons;\n    }\n    set showArrowButtons(showArrowButtons) {\n      this[setState]({ showArrowButtons });\n    }\n\n    /**\n     * Destructively wrap a node with elements to show arrow buttons.\n     *\n     * @param {Element} target - the node that should be wrapped by buttons\n     */\n    [wrap](target) {\n      const arrowControls = fragmentFrom.html`\n        <div\n          id=\"arrowDirection\"\n          role=\"none\"\n          style=\"display: flex; flex: 1; overflow: hidden; position: relative;\"\n        >\n          <div\n            id=\"arrowButtonPrevious\"\n            part=\"arrow-button arrow-button-previous\"\n            exportparts=\"inner:arrow-button-inner\"\n            class=\"arrowButton\"\n            aria-hidden=\"true\"\n            tabindex=\"-1\"\n          >\n            <slot name=\"arrowButtonPrevious\"></slot>\n          </div>\n          <div\n            id=\"arrowDirectionContainer\"\n            role=\"none\"\n            style=\"flex: 1; overflow: hidden; position: relative;\"\n          ></div>\n          <div\n            id=\"arrowButtonNext\"\n            part=\"arrow-button arrow-button-next\"\n            exportparts=\"inner:arrow-button-inner\"\n            class=\"arrowButton\"\n            aria-hidden=\"true\"\n            tabindex=\"-1\"\n          >\n            <slot name=\"arrowButtonNext\"></slot>\n          </div>\n        </div>\n      `;\n\n      renderParts(arrowControls, this[state]);\n\n      // Wrap the target with the arrow controls.\n      const container = arrowControls.getElementById(\"arrowDirectionContainer\");\n      if (container) {\n        target.replaceWith(arrowControls);\n        container.append(target);\n      }\n    }\n  }\n\n  return ArrowDirection;\n}\n\n/**\n * @private\n * @param {ReactiveElement} element\n * @param {function} callback\n * @returns {EventListener}\n */\nfunction createButtonHandler(element, callback) {\n  return async function mousedown(/** @type {Event} */ event) {\n    // Only process events for the main (usually left) button.\n    /** @type {any} */ const cast = event;\n    if (cast.button !== 0) {\n      return;\n    }\n    element[raiseChangeEvents] = true;\n    const handled = callback();\n    if (handled) {\n      event.stopPropagation();\n    }\n    await Promise.resolve();\n    element[raiseChangeEvents] = false;\n  };\n}\n\n/**\n * Render parts for the template or an instance.\n *\n * @private\n * @param {DocumentFragment} root\n * @param {PlainObject} state\n * @param {ChangedFlags} [changed]\n */\nfunction renderParts(root, state, changed) {\n  if (!changed || changed.arrowButtonPartType) {\n    const { arrowButtonPartType } = state;\n    const arrowButtonPrevious = root.getElementById(\"arrowButtonPrevious\");\n    if (arrowButtonPrevious) {\n      transmute(arrowButtonPrevious, arrowButtonPartType);\n    }\n    const arrowButtonNext = root.getElementById(\"arrowButtonNext\");\n    if (arrowButtonNext) {\n      transmute(arrowButtonNext, arrowButtonPartType);\n    }\n  }\n}\n\nArrowDirectionMixin.wrap = wrap;\n\nexport default ArrowDirectionMixin;\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  defaultState,\n  goDown,\n  goEnd,\n  goFirst,\n  goLast,\n  goLeft,\n  goNext,\n  goPrevious,\n  goRight,\n  goStart,\n  goUp,\n  state,\n  stateEffects,\n} from \"./internal.js\";\n\n/**\n * Maps direction semantics to cursor semantics.\n *\n * This turns a movement in a direction (go left, go right) into a cursor\n * operation (go previous, go next).\n *\n * This mixin can be used in conjunction with\n * [KeyboardDirectionMixin](KeyboardDirectionMixin) (which maps keyboard events\n * to directions) and a mixin that handles cursor operations like\n * [ItemsCursorMixin](ItemsCursorMixin).\n *\n * @module DirectionCursorMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function DirectionCursorMixin(Base) {\n  // The class prototype added by the mixin.\n  class DirectionCursor extends Base {\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        canGoDown: null,\n        canGoLeft: null,\n        canGoRight: null,\n        canGoUp: null,\n      });\n    }\n\n    /**\n     * Interprets `goDown` to mean \"move to the next item\".\n     */\n    [goDown]() {\n      if (super[goDown]) {\n        super[goDown]();\n      }\n      return this[goNext]();\n    }\n\n    /**\n     * Interprets `goEnd` to mean \"move to the last item\".\n     */\n    [goEnd]() {\n      if (super[goEnd]) {\n        super[goEnd]();\n      }\n      return this[goLast]();\n    }\n\n    /**\n     * Interprets `goLeft` to mean \"move to the previous item\".\n     *\n     * If the element has a `rightToLeft` property and it is true, then this\n     * moves to the _next_ item.\n     */\n    [goLeft]() {\n      if (super[goLeft]) {\n        super[goLeft]();\n      }\n      return this[state] && this[state].rightToLeft\n        ? this[goNext]()\n        : this[goPrevious]();\n    }\n\n    /**\n     * Interprets `goRight` to mean \"move to the next item\".\n     *\n     * If the element has a `rightToLeft` property and it is true, then this\n     * moves to the _previous_ item.\n     */\n    [goRight]() {\n      if (super[goRight]) {\n        super[goRight]();\n      }\n      return this[state] && this[state].rightToLeft\n        ? this[goPrevious]()\n        : this[goNext]();\n    }\n\n    /**\n     * Interprets `goStart` to mean \"move to the first item\".\n     */\n    [goStart]() {\n      if (super[goStart]) {\n        super[goStart]();\n      }\n      return this[goFirst]();\n    }\n\n    /**\n     * Interprets `goUp` to mean \"move to the previous item\".\n     */\n    [goUp]() {\n      if (super[goUp]) {\n        super[goUp]();\n      }\n      return this[goPrevious]();\n    }\n\n    [stateEffects](state, changed) {\n      const effects = super[stateEffects]\n        ? super[stateEffects](state, changed)\n        : {};\n\n      // Update computed state members to track whether we can go\n      // down/left/right/up.\n      if (\n        changed.canGoNext ||\n        changed.canGoPrevious ||\n        changed.languageDirection ||\n        changed.orientation ||\n        changed.rightToLeft\n      ) {\n        const { canGoNext, canGoPrevious, orientation, rightToLeft } = state;\n        const horizontal =\n          orientation === \"horizontal\" || orientation === \"both\";\n        const vertical = orientation === \"vertical\" || orientation === \"both\";\n        const canGoDown = vertical && canGoNext;\n        const canGoLeft = !horizontal\n          ? false\n          : rightToLeft\n          ? canGoNext\n          : canGoPrevious;\n        const canGoRight = !horizontal\n          ? false\n          : rightToLeft\n          ? canGoPrevious\n          : canGoNext;\n        const canGoUp = vertical && canGoPrevious;\n        Object.assign(effects, {\n          canGoDown,\n          canGoLeft,\n          canGoRight,\n          canGoUp,\n        });\n      }\n\n      return effects;\n    }\n  }\n\n  return DirectionCursor;\n}\n","import { booleanAttributeValue } from \"../core/dom.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  goFirst,\n  goLast,\n  goNext,\n  goPrevious,\n  raiseChangeEvents,\n  rendered,\n  setState,\n  state,\n} from \"./internal.js\";\n\n/**\n * Exposes a public API for navigating a cursor over a set of items\n *\n * This mixin expects a component to provide an `items` Array of all elements in\n * the list. This mixin also expects the component to apply\n * [ItemsCursorMixin](ItemsCursorMixin) or otherwise define a compatible\n * `currentIndex` state and other state members for navigating the current item.\n *\n * Given the above, this mixin exposes a consistent public API for reading and\n * manipulating the cursor.\n *\n * @module CursorAPIMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function CursorAPIMixin(Base) {\n  // The class prototype added by the mixin.\n  class CursorAPI extends Base {\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (name === \"current-index\") {\n        this.currentIndex = Number(newValue);\n      } else if (name === \"current-item-required\") {\n        const value = booleanAttributeValue(name, newValue);\n        if (this.currentItemRequired !== value) {\n          this.currentItemRequired = value;\n        }\n      } else if (name === \"cursor-operations-wrap\") {\n        const value = booleanAttributeValue(name, newValue);\n        if (this.cursorOperationsWrap !== value) {\n          this.cursorOperationsWrap = value;\n        }\n      } else {\n        super.attributeChangedCallback(name, oldValue, newValue);\n      }\n    }\n\n    /**\n     * The index of the current item, or -1 if no item is current.\n     *\n     * @type {number}\n     */\n    get currentIndex() {\n      const { items, currentIndex } = this[state];\n      return items && items.length > 0 ? currentIndex : -1;\n    }\n    set currentIndex(currentIndex) {\n      if (!isNaN(currentIndex)) {\n        this[setState]({ currentIndex });\n      }\n    }\n\n    /**\n     * The current item, or null if no item is current.\n     *\n     * @type {Element}\n     */\n    get currentItem() {\n      const { items, currentIndex } = this[state];\n      return items && items[currentIndex];\n    }\n    set currentItem(currentItem) {\n      const { items } = this[state];\n      if (!items) {\n        return;\n      }\n      const currentIndex = items.indexOf(currentItem);\n      if (currentIndex >= 0) {\n        this[setState]({ currentIndex });\n      }\n    }\n\n    /**\n     * True if the list should always have a current item (if it has items).\n     *\n     * @type {boolean}\n     * @default false\n     */\n    get currentItemRequired() {\n      return this[state].currentItemRequired;\n    }\n    set currentItemRequired(currentItemRequired) {\n      this[setState]({ currentItemRequired });\n    }\n\n    /**\n     * True if cursor operations wrap from last to first, and vice versa.\n     *\n     * @type {boolean}\n     * @default false\n     */\n    get cursorOperationsWrap() {\n      return this[state].cursorOperationsWrap;\n    }\n    set cursorOperationsWrap(cursorOperationsWrap) {\n      this[setState]({ cursorOperationsWrap });\n    }\n\n    /**\n     * Moves to the first item in the list.\n     *\n     * @returns {Boolean} True if the current item changed, false if not.\n     */\n    goFirst() {\n      if (super.goFirst) {\n        super.goFirst();\n      }\n      return this[goFirst]();\n    }\n\n    /**\n     * Move to the last item in the list.\n     *\n     * @returns {Boolean} True if the current item changed\n     */\n    goLast() {\n      if (super.goLast) {\n        super.goLast();\n      }\n      return this[goLast]();\n    }\n\n    /**\n     * Move to the next item in the list.\n     *\n     * If the list has no current item, the first item will become current.\n     *\n     * @returns {Boolean} True if the current item changed\n     */\n    goNext() {\n      if (super.goNext) {\n        super.goNext();\n      }\n      return this[goNext]();\n    }\n\n    /**\n     * Moves to the previous item in the list.\n     *\n     * If the list has no current item, the last item will become current.\n     *\n     * @returns {Boolean} True if the current item changed\n     */\n    goPrevious() {\n      if (super.goPrevious) {\n        super.goPrevious();\n      }\n      return this[goPrevious]();\n    }\n\n    [rendered](/** @type {ChangedFlags} */ changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n      if (changed.currentIndex && this[raiseChangeEvents]) {\n        const { currentIndex } = this[state];\n        const oldEvent = new CustomEvent(\"current-index-changed\", {\n          bubbles: true,\n          detail: { currentIndex },\n        });\n        this.dispatchEvent(oldEvent);\n        /**\n         * Raised when the `currentIndex` property changes.\n         *\n         * @event currentindexchanged\n         */\n        const event = new CustomEvent(\"currentindexchange\", {\n          bubbles: true,\n          detail: { currentIndex },\n        });\n        this.dispatchEvent(event);\n      }\n    }\n  }\n\n  return CursorAPI;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { defaultState, stateEffects } from \"./internal.js\";\n\n/**\n * Keeps the current item and selected item in sync.\n *\n * This can be used to connect [ItemsCursorMixin](ItemsCursorMixin) with\n * [SingleSelectAPIMixin](SingleSelectAPIMixin).\n *\n * @module CursorSelectMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function CursorSelectMixin(Base) {\n  // The class prototype added by the mixin.\n  return class CursorSelect extends Base {\n    get [defaultState]() {\n      return Object.assign(super[defaultState], {\n        selectedIndex: -1,\n        selectedItem: null,\n      });\n    }\n\n    [stateEffects](state, changed) {\n      const effects = super[stateEffects]\n        ? super[stateEffects](state, changed)\n        : {};\n\n      // Selection tracks current item.\n      if (changed.currentIndex) {\n        Object.assign(effects, {\n          selectedIndex: state.currentIndex,\n        });\n      }\n      if (changed.currentItem) {\n        Object.assign(effects, {\n          selectedItem: state.currentItem,\n        });\n      }\n\n      // Current item tracks selection.\n      // Since this step happens second, if both current item and selected item\n      // are changed, the current item wins.\n      if (changed.selectedIndex) {\n        Object.assign(effects, {\n          currentIndex: state.selectedIndex,\n        });\n      }\n      if (changed.selectedItem) {\n        Object.assign(effects, {\n          currentItem: state.selectedItem,\n        });\n      }\n\n      return effects;\n    }\n  };\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { firstRender, raiseChangeEvents, rendered, state } from \"./internal.js\";\n\n/**\n * Exposes a public API for the set of items in a list-like element\n *\n * @module ItemsAPIMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function ItemsAPIMixin(Base) {\n  // The class prototype added by the mixin.\n  class ItemsAPI extends Base {\n    /**\n     * The current set of items drawn from the element's current state.\n     *\n     * @type {ListItemElement[]} the element's current items\n     */\n    get items() {\n      return this[state] ? this[state].items : null;\n    }\n\n    [rendered](/** @type {ChangedFlags} */ changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n\n      // Raise items-changed if items changed after the initial render. We'll\n      // see changed.items on initial render, and raiseChangeEvents will be true\n      // if we're using SlotContentMixin, but we don't want to actually raise\n      // the event then because the items didn't change in response to user\n      // activity.\n      if (!this[firstRender] && changed.items && this[raiseChangeEvents]) {\n        const oldEvent = new CustomEvent(\"items-changed\", {\n          bubbles: true,\n        });\n        this.dispatchEvent(oldEvent);\n        /**\n         * Raised when the `items` property changes.\n         *\n         * @event itemschange\n         */\n        const event = new CustomEvent(\"itemschange\", {\n          bubbles: true,\n        });\n        this.dispatchEvent(event);\n      }\n    }\n  }\n\n  return ItemsAPI;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  closestAvailableItemIndex,\n  defaultState,\n  goFirst,\n  goLast,\n  goNext,\n  goPrevious,\n  setState,\n  state,\n  stateEffects,\n} from \"./internal.js\";\n\n/**\n * Tracks and navigates the current item in a set of items\n *\n * @module ItemsCursorMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function ItemsCursorMixin(Base) {\n  // The class prototype added by the mixin.\n  class ItemsCursor extends Base {\n    /**\n     * Look for an item which is available in the given state..\n     *\n     * The `options` parameter can accept options for:\n     *\n     * * `direction`: 1 to move forward, -1 to move backward\n     * * `index`: the index to start at, defaults to `state.currentIndex`\n     * * `wrap`: whether to wrap around the ends of the `items` array, defaults\n     *   to `state.cursorOperationsWrap`.\n     *\n     * If an available item was found, this returns its index. If no item was\n     * found, this returns -1.\n     *\n     * @param {PlainObject} state\n     * @param {PlainObject} options\n     * @returns {number}\n     */\n    [closestAvailableItemIndex](state, options = {}) {\n      const direction = options.direction !== undefined ? options.direction : 1;\n      const index =\n        options.index !== undefined ? options.index : state.currentIndex;\n      const wrap =\n        options.wrap !== undefined ? options.wrap : state.cursorOperationsWrap;\n\n      const { items } = state;\n      const count = items ? items.length : 0;\n\n      if (count === 0) {\n        // No items\n        return -1;\n      }\n\n      if (wrap) {\n        // Search with wrapping.\n\n        // Modulus taking into account negative numbers.\n        let i = ((index % count) + count) % count;\n        const end = (((i - direction) % count) + count) % count;\n        while (i !== end) {\n          const available = state.availableItemFlags\n            ? state.availableItemFlags[i]\n            : true;\n          if (available) {\n            return i;\n          }\n          // See modulus note above.\n          i = (((i + direction) % count) + count) % count;\n        }\n      } else {\n        // Search without wrapping.\n        for (let i = index; i >= 0 && i < count; i += direction) {\n          const available = state.availableItemFlags\n            ? state.availableItemFlags[i]\n            : true;\n          if (available) {\n            return i;\n          }\n        }\n      }\n\n      return -1; // No item found\n    }\n\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        currentIndex: -1,\n        desiredCurrentIndex: null,\n        currentItem: null,\n        currentItemRequired: false,\n        cursorOperationsWrap: false,\n      });\n    }\n\n    /**\n     * Move to the first item in the set.\n     *\n     * @protected\n     * @returns {Boolean} True if the current item changed, false if not.\n     */\n    [goFirst]() {\n      if (super[goFirst]) {\n        super[goFirst]();\n      }\n      return moveToIndex(this, 0, 1);\n    }\n\n    /**\n     * Move to the last item in the set.\n     *\n     * @protected\n     * @returns {Boolean} True if the current item changed, false if not.\n     */\n    [goLast]() {\n      if (super[goLast]) {\n        super[goLast]();\n      }\n      return moveToIndex(this, this[state].items.length - 1, -1);\n    }\n\n    /**\n     * Move to the next item in the set.\n     *\n     * If no item is current, move to the first item.\n     *\n     * @protected\n     * @returns {Boolean} True if the current item changed, false if not.\n     */\n    [goNext]() {\n      if (super[goNext]) {\n        super[goNext]();\n      }\n      const { currentIndex, items } = this[state];\n      const start = currentIndex < 0 && items ? 0 : currentIndex + 1;\n      return moveToIndex(this, start, 1);\n    }\n\n    /**\n     * Move to the previous item in the set.\n     *\n     * If no item is current, move to the last item.\n     *\n     * @protected\n     * @returns {Boolean} True if the current item changed, false if not.\n     */\n    [goPrevious]() {\n      if (super[goPrevious]) {\n        super[goPrevious]();\n      }\n      const { currentIndex, items } = this[state];\n      const start =\n        currentIndex < 0 && items ? items.length - 1 : currentIndex - 1;\n      return moveToIndex(this, start, -1);\n    }\n\n    [stateEffects](state, changed) {\n      const effects = super[stateEffects]\n        ? super[stateEffects](state, changed)\n        : {};\n\n      // Ensure currentIndex is valid.\n      if (\n        changed.availableItemFlags ||\n        changed.items ||\n        changed.currentIndex ||\n        changed.currentItemRequired\n      ) {\n        const {\n          currentIndex,\n          desiredCurrentIndex,\n          currentItem,\n          currentItemRequired,\n          items,\n        } = state;\n\n        const count = items ? items.length : 0;\n\n        // Determine the desired index: the one we want irrespective of whether\n        // we have items or their availability.\n        // Assume we'll stick with the same desired index we already have.\n        let newDesiredIndex = desiredCurrentIndex;\n        if (\n          changed.items &&\n          !changed.currentIndex &&\n          currentItem &&\n          count > 0 &&\n          items[currentIndex] !== currentItem\n        ) {\n          // The items changed, and the item at the cursor is no longer the\n          // same. See if we can find that item again in the list of items.\n          const newItemIndex = items.indexOf(currentItem);\n          if (newItemIndex >= 0) {\n            // Found the item again; try to use its index.\n            newDesiredIndex = newItemIndex;\n          }\n        } else if (\n          changed.currentIndex &&\n          ((currentIndex < 0 && currentItem !== null) ||\n            (currentIndex >= 0 &&\n              (count === 0 || items[currentIndex] !== currentItem)) ||\n            desiredCurrentIndex === null)\n        ) {\n          // Someone explicitly moved the cursor, which trumps any previously\n          // desired index.\n          newDesiredIndex = currentIndex;\n        }\n\n        // If an item is required and there's no selection, we'll implicitly try\n        // to get the first available item.\n        if (currentItemRequired && newDesiredIndex < 0) {\n          newDesiredIndex = 0;\n        }\n\n        // Now that we know what index we want, see how close we can get to it.\n        let newIndex;\n        if (newDesiredIndex < 0) {\n          // All negative indices are equivalent to -1.\n          newDesiredIndex = -1;\n          newIndex = -1;\n        } else if (count === 0) {\n          // No items yet.\n          newIndex = -1;\n        } else {\n          // See how close we can get to the desired index.\n          // First clamp index to existing array bounds.\n          newIndex = Math.max(Math.min(count - 1, newDesiredIndex), 0);\n          // Look for an available item going forward.\n          newIndex = this[closestAvailableItemIndex](state, {\n            direction: 1,\n            index: newIndex,\n            wrap: false,\n          });\n          if (newIndex < 0) {\n            // Next best: look for an available item going backward.\n            newIndex = this[closestAvailableItemIndex](state, {\n              direction: -1,\n              index: newIndex - 1,\n              wrap: false,\n            });\n          }\n        }\n\n        const newItem = (items && items[newIndex]) || null;\n        Object.assign(effects, {\n          currentIndex: newIndex,\n          desiredCurrentIndex: newDesiredIndex,\n          currentItem: newItem,\n        });\n      }\n\n      return effects;\n    }\n  }\n\n  return ItemsCursor;\n}\n\n/**\n * Update currentIndex and return true if it changed.\n *\n * @private\n * @param {Element} element\n * @param {number} index\n * @param {number} direction\n */\nfunction moveToIndex(element, index, direction) {\n  const newIndex = element[closestAvailableItemIndex](element[state], {\n    direction,\n    index,\n  });\n  if (newIndex < 0) {\n    // Couldn't find an item to move to.\n    return false;\n  }\n  // Normally we don't check to see if state is going to change before setting\n  // state, but the methods defined by this mixin want to be able to return true\n  // if the index is actually going to change.\n  const changed = element[state].currentIndex !== newIndex;\n  if (changed) {\n    element[setState]({\n      currentIndex: newIndex,\n    });\n  }\n  return changed;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { setState } from \"./internal.js\";\n\n/**\n * Lets an element determine whether it resides in right-to-left text.\n *\n * @module LanguageDirectionMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function LanguageDirectionMixin(Base) {\n  // The class prototype added by the mixin.\n  return class LanguageDirection extends Base {\n    // The only way to get text direction is to wait for the component to\n    // connect and then inspect the computed style on its root element. We set\n    // state before calling super so the new state will be included when\n    // ReactiveMixin calls render.\n    connectedCallback() {\n      /** @type {any} */ const element = this;\n      const languageDirection = getComputedStyle(element).direction;\n      const rightToLeft = languageDirection === \"rtl\";\n      this[setState]({ rightToLeft });\n      if (super.connectedCallback) {\n        super.connectedCallback();\n      }\n    }\n  };\n}\n","import { selfAndComposedAncestors } from \"../core/dom.js\";\nimport { shadowRoot } from \"./internal.js\";\n\n/**\n * Utilities for working with scrolling.\n *\n * @module defaultScrollTarget\n */\n\n/**\n * Returns true if the given target or any of its ancestors can be scrolled\n * in the indicated direction.\n *\n * This is used, e.g., by gesture event handlers to predict if the default\n * behavior for a given event is likely to result in scrolling.\n *\n * @param {EventTarget} target\n * @param {'horizontal'|'vertical'} orientation\n * @param {boolean} downOrRight\n */\nexport function canScrollInDirection(target, orientation, downOrRight) {\n  if (!(target instanceof Node)) {\n    return false;\n  }\n  for (const ancestor of selfAndComposedAncestors(target)) {\n    if (ancestor instanceof HTMLElement) {\n      const style = getComputedStyle(ancestor);\n      const vertical = orientation === \"vertical\";\n      const scrollAxisMatch =\n        (vertical &&\n          (style.overflowY === \"scroll\" || style.overflowY === \"auto\")) ||\n        (!vertical &&\n          (style.overflowX === \"scroll\" || style.overflowX === \"auto\"));\n      if (scrollAxisMatch) {\n        // Found an ancestor that can potentially scroll in this orientation.\n        const scrollEdge = vertical ? \"scrollTop\" : \"scrollLeft\";\n        if (!downOrRight && ancestor[scrollEdge] > 0) {\n          // Target has room to scroll up or left.\n          return true;\n        }\n        const scrollLength = vertical ? \"scrollHeight\" : \"scrollWidth\";\n        const clientLength = vertical ? \"clientHeight\" : \"clientWidth\";\n        const scrollMax = ancestor[scrollLength] - ancestor[clientLength];\n        if (downOrRight && ancestor[scrollEdge] < scrollMax) {\n          // Target has room to scroll down or right.\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * This helper returns a guess as to what portion of the given element can be\n * scrolled. This is used by [CursorInViewMixin](CursorInViewMixin) to\n * provide a default implementation of [scrollTarget].\n *\n * If the element has a shadow root containing a default (unnamed) slot, this\n * returns the first ancestor of that slot that has either `overflow-x` or\n * `overflow-y` styled as `auto` or `scroll`. If the element has no default\n * slot, or no scrolling ancestor is found, the element itself is returned.\n *\n * @param {Element} element – the component to examine for a scrolling\n * element\n * @returns {Element}\n */\nexport function defaultScrollTarget(element) {\n  const root = element[shadowRoot];\n  const slot = root && root.querySelector(\"slot:not([name])\");\n  const scrollingParent =\n    slot &&\n    slot.parentNode instanceof Element &&\n    getScrollableElement(slot.parentNode);\n  return scrollingParent || element;\n}\n\n/**\n * Return true if the given element can be scrolled.\n *\n * @private\n * @param {HTMLElement} element\n */\nfunction isElementScrollable(element) {\n  const style = getComputedStyle(element);\n  const overflowX = style.overflowX;\n  const overflowY = style.overflowY;\n  return (\n    overflowX === \"scroll\" ||\n    overflowX === \"auto\" ||\n    overflowY === \"scroll\" ||\n    overflowY === \"auto\"\n  );\n}\n\n/**\n * If the given element can be scrolled, return that. If not, return the closest\n * ancestor that can be scrolled. If no such ancestor is found, return null.\n *\n * @param {Element} node\n * @returns {Element|null}\n */\nexport function getScrollableElement(node) {\n  for (const ancestor of selfAndComposedAncestors(node)) {\n    if (ancestor instanceof HTMLElement && isElementScrollable(ancestor)) {\n      return ancestor;\n    }\n  }\n  return null;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { rendered, scrollTarget, state } from \"./internal.js\";\nimport { defaultScrollTarget } from \"./scrolling.js\";\n\n/**\n * Scrolls to ensure the current item is visible\n *\n * When the current item in a list-like component changes, the current item\n * should be brought into view so that the user can confirm their selection.\n *\n * This mixin expects an `items` collection, such as that provided by\n * [ContentItemsMixin](ContentItemsMixin). It also expects a\n * `state.currentItem` member indicating which item is current. You\n * can supply that yourself, or use\n * [ItemsCursorMixin](ItemsCursorMixin).\n *\n * @module CursorInViewMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function CursorInViewMixin(Base) {\n  // The class prototype added by the mixin.\n  class CursorInView extends Base {\n    [rendered](/** @type {ChangedFlags} */ changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n\n      if (changed.currentItem) {\n        this.scrollCurrentItemIntoView();\n      }\n    }\n\n    /**\n     * Scroll the current item completely into view, minimizing the degree of\n     * scrolling performed.\n     *\n     * Blink has a `scrollIntoViewIfNeeded()` function that does something\n     * similar, but unfortunately it's non-standard, and in any event often ends\n     * up scrolling more than is absolutely necessary.\n     *\n     * This scrolls the containing element defined by the `scrollTarget`\n     * property. By default, it will scroll the element itself.\n     */\n    scrollCurrentItemIntoView() {\n      if (super.scrollCurrentItemIntoView) {\n        super.scrollCurrentItemIntoView();\n      }\n\n      const { currentItem, items } = this[state];\n      if (!currentItem || !items) {\n        return;\n      }\n\n      // Determine the bounds of the scroll target and item. We use\n      // getBoundingClientRect instead of .offsetTop, etc., because the latter\n      // round values, and we want to handle fractional values.\n      const scrollTargetRect = this[scrollTarget].getBoundingClientRect();\n      const itemRect = currentItem.getBoundingClientRect();\n\n      // Determine how far the item is outside the viewport.\n      const bottomDelta = itemRect.bottom - scrollTargetRect.bottom;\n      const leftDelta = itemRect.left - scrollTargetRect.left;\n      const rightDelta = itemRect.right - scrollTargetRect.right;\n      const topDelta = itemRect.top - scrollTargetRect.top;\n\n      // Scroll the target as necessary to bring the item into view.\n      // If an `orientation` state member is defined, only scroll along that\n      // axis. Otherwise, assume the orientation is \"both\".\n      const orientation = this[state].orientation || \"both\";\n      if (orientation === \"horizontal\" || orientation === \"both\") {\n        if (rightDelta > 0) {\n          this[scrollTarget].scrollLeft += rightDelta; // Scroll right\n        } else if (leftDelta < 0) {\n          this[scrollTarget].scrollLeft += Math.ceil(leftDelta); // Scroll left\n        }\n      }\n      if (orientation === \"vertical\" || orientation === \"both\") {\n        if (bottomDelta > 0) {\n          this[scrollTarget].scrollTop += bottomDelta; // Scroll down\n        } else if (topDelta < 0) {\n          this[scrollTarget].scrollTop += Math.ceil(topDelta); // Scroll up\n        }\n      }\n    }\n\n    /**\n     * The element that should be scrolled to get the selected item into view.\n     *\n     * By default, this uses the [defaultScrollTarget](defaultScrollTarget)\n     * helper to find the most likely candidate for scrolling. You can override\n     * this property to directly identify which element should be scrolled.\n     *\n     * See also [scrollTarget](internal#internal.scrollTarget).\n     */\n    get [scrollTarget]() {\n      const base = super[scrollTarget];\n      /** @type {any} */\n      const element = this;\n      return base || defaultScrollTarget(element);\n    }\n  }\n\n  return CursorInView;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  defaultState,\n  nativeInternals,\n  render,\n  rendered,\n  setState,\n  state,\n} from \"./internal.js\";\n\n/**\n * Allows a component to participate in HTML form submission.\n *\n * The mixin expects the component to define a `value` property of type\n * `string`.\n *\n * @module FormElementMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function FormElementMixin(Base) {\n  // The class prototype added by the mixin.\n  class FormElement extends Base {\n    constructor() {\n      super();\n      /** @type {any} */ const cast = this;\n      if (!this[nativeInternals] && cast.attachInternals) {\n        this[nativeInternals] = cast.attachInternals();\n      }\n    }\n\n    checkValidity() {\n      return this[nativeInternals].checkValidity();\n    }\n\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        validationMessage: \"\",\n        valid: true,\n      });\n    }\n\n    // Uncomment for debugging only\n    get internals() {\n      return this[nativeInternals];\n    }\n\n    static get formAssociated() {\n      return true;\n    }\n\n    /**\n     * The ID of the `form` element with which this element is associated,\n     * or `null` if the element is not associated with any form. This is provided\n     * for consistency with the native HTML\n     * [form](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#form)\n     * property.\n     *\n     * @type {string}\n     */\n    get form() {\n      return this[nativeInternals].form;\n    }\n\n    /**\n     * The name of the form field that will be filled with this element's\n     * `value`. This is an analogue of the standard HTML\n     * [name](https://developer.mozilla.org/en-US/docs/Web/API/Element/name)\n     * property.\n     *\n     * @type {string}\n     */\n    get name() {\n      return this[state].name;\n    }\n    set name(name) {\n      if (\"name\" in Base.prototype) {\n        super.name = name;\n      }\n      this[setState]({ name });\n    }\n\n    [render](/** @type {ChangedFlags} */ changed) {\n      if (super[render]) {\n        super[render](changed);\n      }\n\n      // Reflect name property to attribute so form will pick it up.\n      if (changed.name) {\n        this.setAttribute(\"name\", this[state].name);\n      }\n\n      if (this[nativeInternals]) {\n        // Reflect validity state to internals.\n        if (changed.valid || changed.validationMessage) {\n          const { valid, validationMessage } = this[state];\n          if (valid) {\n            this[nativeInternals].setValidity({});\n          } else {\n            this[nativeInternals].setValidity(\n              {\n                customError: true,\n              },\n              validationMessage\n            );\n          }\n        }\n      }\n    }\n\n    [rendered](/** @type {ChangedFlags} */ changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n      if (changed.value) {\n        if (this[nativeInternals]) {\n          this[nativeInternals].setFormValue(this[state].value, this[state]);\n        }\n      }\n    }\n\n    reportValidity() {\n      return this[nativeInternals].reportValidity();\n    }\n\n    /**\n     * The \"type\" of the form field, provided for consistency with the\n     * native HTML\n     * [type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#type)\n     * property. The value of this property will be the same as the HTML tag\n     * name registered for the custom element.\n     *\n     * @type {string}\n     */\n    get type() {\n      return this.localName;\n    }\n\n    get validationMessage() {\n      return this[state].validationMessage;\n    }\n\n    get validity() {\n      return this[nativeInternals].validity;\n    }\n\n    get willValidate() {\n      return this[nativeInternals].willValidate;\n    }\n  }\n\n  return FormElement;\n}\n","/**\n * Helpers for working with element content.\n *\n * @module content\n */\n\n// These are tags for elements that can appear in the document body, but do not\n// seem to have any user-visible manifestation.\n// See https://developer.mozilla.org/en-US/docs/Web/HTML/Element\nconst auxiliarycustomTags = [\n  \"applet\", // deprecated\n  \"basefont\", // deprecated\n  \"embed\",\n  \"font\", // deprecated\n  \"frame\", // deprecated\n  \"frameset\", // deprecated\n  \"isindex\", // deprecated\n  \"keygen\", // deprecated\n  \"link\",\n  \"multicol\", // deprecated\n  \"nextid\", // deprecated\n  \"noscript\",\n  \"object\",\n  \"param\",\n  \"script\",\n  \"style\",\n  \"template\",\n  \"noembed\", // deprecated\n];\n\n/**\n * Use a heuristic to extract text from the given item.\n *\n * This looks, in order, at: the `aria-label` attribute, the `alt` attribute,\n * and the element's `textContent`.\n *\n * This function is used as the default implementation of the\n * [getItemText](internal#getItemText) function in several mixins.\n *\n * @param {Element} element\n * @returns {string}\n */\nexport function getDefaultText(element) {\n  return (\n    element.getAttribute(\"aria-label\") ||\n    element.getAttribute(\"alt\") ||\n    element.textContent ||\n    \"\"\n  );\n}\n\n/**\n * Return true if the given node is likely to be useful as component content.\n *\n * This will be `true` for nodes that are: a) instances of `Element`\n * (`HTMLElement` or `SVGElement`), and b) not on a blacklist of normally\n * invisible elements (such as `style` or `script`). Among other things, this\n * returns `false` for Text nodes.\n *\n * This is used by [ContentItemsMixin](ContentItemsMixin) to filter out nodes\n * which are unlikely to be interesting as list items. This is intended to\n * satisfy the Gold Standard checklist criteria [Auxiliary\n * Content](https://github.com/webcomponents/gold-standard/wiki/Auxiliary-Content),\n * so that a component does not inadvertently treat `<style>` and other invisible\n * items as element content.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nexport function isSubstantiveElement(node) {\n  return (\n    node instanceof Element &&\n    (!node.localName || auxiliarycustomTags.indexOf(node.localName) < 0)\n  );\n}\n\n/**\n * Return a set of Elements which are likely to be useful as component content.\n *\n * Given a `NodeList` or array of objects, this will return only those array\n * members that are: a) instances of `Element` (`HTMLElement` or `SVGElement`),\n * and b) not on a blacklist of normally invisible elements (such as `style` or\n * `script`). Among other things, this filters out Text nodes.\n *\n * @param {(NodeList|Node[])} nodes - the list of nodes to filter\n * @returns {Element[]} the filtered elements\n */\nexport function substantiveElements(nodes) {\n  return [].filter.call(nodes, (/** @type {Node} */ node) =>\n    isSubstantiveElement(node)\n  );\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { getDefaultText } from \"./content.js\";\nimport { defaultState, getItemText, stateEffects } from \"./internal.js\";\n\n/**\n * Exposes the text content of a list's items as an array of strings.\n *\n * @module ItemsTextMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function ItemsTextMixin(Base) {\n  // The class prototype added by the mixin.\n  class ItemsText extends Base {\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        texts: null,\n      });\n    }\n\n    /**\n     * Extract the text from the given item.\n     *\n     * The default implementation returns an item's `aria-label`, `alt` attribute,\n     * or its `textContent`, in that order. You can override this to return the\n     * text that should be used.\n     *\n     * @param {Element} item\n     * @returns {string}\n     */\n    [getItemText](item) {\n      return super[getItemText]\n        ? super[getItemText](item)\n        : getDefaultText(item);\n    }\n\n    [stateEffects](state, changed) {\n      const effects = super[stateEffects]\n        ? super[stateEffects](state, changed)\n        : {};\n\n      // Regenerate texts when items change.\n      if (changed.items) {\n        const { items } = state;\n        const texts = getTextsFromItems(items, this[getItemText]);\n        if (texts) {\n          Object.freeze(texts);\n          Object.assign(effects, { texts });\n        }\n      }\n\n      return effects;\n    }\n  }\n\n  return ItemsText;\n}\n\n/**\n * Extract the text from the given items.\n *\n * @private\n * @param {Element[]} items\n */\nexport function getTextsFromItems(items, getText) {\n  return items ? Array.from(items, (item) => getText(item)) : null;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  goDown,\n  goEnd,\n  goLeft,\n  goRight,\n  goStart,\n  goUp,\n  keydown,\n  state,\n} from \"./internal.js\";\n\n/**\n * Maps direction keys to direction semantics.\n *\n * This mixin is useful for components that want to map direction keys (Left,\n * Right, etc.) to movement in the indicated direction (go left, go right,\n * etc.).\n *\n * This mixin expects the component to invoke a `keydown` method when a key is\n * pressed. You can use [KeyboardMixin](KeyboardMixin) for that\n * purpose, or wire up your own keyboard handling and call `keydown` yourself.\n *\n * This mixin calls methods such as `goLeft` and `goRight`. You can define\n * what that means by implementing those methods yourself. If you want to use\n * direction keys to navigate a selection, use this mixin with\n * [DirectionCursorMixin](DirectionCursorMixin).\n *\n * If the component defines a property called `orientation`, the value of that\n * property will constrain navigation to the horizontal or vertical axis.\n *\n * @module KeyboardDirectionMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function KeyboardDirectionMixin(Base) {\n  // The class prototype added by the mixin.\n  class KeyboardDirection extends Base {\n    /**\n     * Invoked when the user wants to go/navigate down.\n     * The default implementation of this method does nothing.\n     */\n    [goDown]() {\n      if (super[goDown]) {\n        return super[goDown]();\n      }\n    }\n\n    /**\n     * Invoked when the user wants to go/navigate to the end (e.g., of a list).\n     * The default implementation of this method does nothing.\n     */\n    [goEnd]() {\n      if (super[goEnd]) {\n        return super[goEnd]();\n      }\n    }\n\n    /**\n     * Invoked when the user wants to go/navigate left.\n     * The default implementation of this method does nothing.\n     */\n    [goLeft]() {\n      if (super[goLeft]) {\n        return super[goLeft]();\n      }\n    }\n\n    /**\n     * Invoked when the user wants to go/navigate right.\n     * The default implementation of this method does nothing.\n     */\n    [goRight]() {\n      if (super[goRight]) {\n        return super[goRight]();\n      }\n    }\n\n    /**\n     * Invoked when the user wants to go/navigate to the start (e.g., of a\n     * list). The default implementation of this method does nothing.\n     */\n    [goStart]() {\n      if (super[goStart]) {\n        return super[goStart]();\n      }\n    }\n\n    /**\n     * Invoked when the user wants to go/navigate up.\n     * The default implementation of this method does nothing.\n     */\n    [goUp]() {\n      if (super[goUp]) {\n        return super[goUp]();\n      }\n    }\n\n    [keydown](/** @type {KeyboardEvent} */ event) {\n      let handled = false;\n\n      // Respect orientation state if defined, otherwise assume \"both\".\n      const orientation = this[state].orientation || \"both\";\n      const horizontal = orientation === \"horizontal\" || orientation === \"both\";\n      const vertical = orientation === \"vertical\" || orientation === \"both\";\n\n      // Ignore Left/Right keys when metaKey or altKey modifier is also pressed,\n      // as the user may be trying to navigate back or forward in the browser.\n      switch (event.key) {\n        case \"ArrowDown\":\n          if (vertical) {\n            handled = event.altKey ? this[goEnd]() : this[goDown]();\n          }\n          break;\n\n        case \"ArrowLeft\":\n          if (horizontal && !event.metaKey && !event.altKey) {\n            handled = this[goLeft]();\n          }\n          break;\n\n        case \"ArrowRight\":\n          if (horizontal && !event.metaKey && !event.altKey) {\n            handled = this[goRight]();\n          }\n          break;\n\n        case \"ArrowUp\":\n          if (vertical) {\n            handled = event.altKey ? this[goStart]() : this[goUp]();\n          }\n          break;\n\n        case \"End\":\n          handled = this[goEnd]();\n          break;\n\n        case \"Home\":\n          handled = this[goStart]();\n          break;\n      }\n\n      // Prefer mixin result if it's defined, otherwise use base result.\n      return handled || (super[keydown] && super[keydown](event)) || false;\n    }\n  }\n\n  return KeyboardDirection;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  closestAvailableItemIndex,\n  keydown,\n  raiseChangeEvents,\n  scrollTarget,\n  setState,\n  state,\n} from \"./internal.js\";\nimport { defaultScrollTarget } from \"./scrolling.js\";\n\n/**\n * Maps the Page Up and Page Down keys to item cursor operations.\n *\n * The keyboard interaction model generally follows that of Microsoft Windows'\n * list boxes instead of those in OS X:\n *\n * * The Page Up/Down and Home/End keys actually move the item cursor, rather\n *   than just scrolling. The former behavior seems more generally useful for\n *   keyboard users.\n *\n * * Pressing Page Up/Down will first move the cursor to the topmost/bottommost\n *   visible item if the cursor is not already there. Thereafter, the key\n *   will move the cursor up/down by a page, and (per the above point) make\n *   the current item visible.\n *\n * To ensure the current item is in view following use of Page Up/Down, use\n * the related [CursorInViewMixin](CursorInViewMixin).\n *\n * This mixin expects the component to provide:\n *\n * * A `[keydown]` method invoked when a key is pressed. You can use\n *   [KeyboardMixin](KeyboardMixin) for that purpose, or wire up your own\n *   keyboard handling and call `[keydown]` yourself.\n * * A `currentIndex` state member updatable via [setState]`.\n *\n * @module KeyboardPagedCursorMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function KeyboardPagedCursorMixin(Base) {\n  // The class prototype added by the mixin.\n  class KeyboardPagedCursor extends Base {\n    [keydown](/** @type {KeyboardEvent} */ event) {\n      let handled = false;\n      const orientation = this.orientation;\n      if (orientation !== \"horizontal\") {\n        switch (event.key) {\n          case \"PageDown\":\n            handled = this.pageDown();\n            break;\n\n          case \"PageUp\":\n            handled = this.pageUp();\n            break;\n        }\n      }\n\n      // Prefer mixin result if it's defined, otherwise use base result.\n      return handled || (super[keydown] && super[keydown](event));\n    }\n\n    // Default orientation implementation defers to super,\n    // but if not found, looks in state.\n    get orientation() {\n      return (\n        super.orientation || (this[state] && this[state].orientation) || \"both\"\n      );\n    }\n\n    /**\n     * Scroll down one page.\n     */\n    pageDown() {\n      if (super.pageDown) {\n        super.pageDown();\n      }\n      return scrollOnePage(this, true);\n    }\n\n    /**\n     * Scroll up one page.\n     */\n    pageUp() {\n      if (super.pageUp) {\n        super.pageUp();\n      }\n      return scrollOnePage(this, false);\n    }\n\n    /**\n     * The element that will be scrolled when the user presses Page Up or\n     * Page Down. The default value is calculated by\n     * [defaultScrollTarget](defaultScrollTarget#defaultScrollTarget).\n     *\n     * See [scrollTarget](internal#internal.scrollTarget).\n     *\n     * @type {HTMLElement}\n     */\n    get [scrollTarget]() {\n      /** @type {any} */\n      const element = this;\n      return super[scrollTarget] || defaultScrollTarget(element);\n    }\n  }\n\n  return KeyboardPagedCursor;\n}\n\n/**\n * Return the item whose content spans the given y position (relative to the\n * top of the list's scrolling client area), or null if not found.\n *\n * If downward is true, move down the list of items to find the first item\n * found at the given y position; if downward is false, move up the list of\n * items to find the last item at that position.\n *\n * @private\n * @param {ReactiveElement} element\n * @param {number} y\n * @param {boolean} downward\n */\nfunction getIndexOfItemAtY(element, y, downward) {\n  const items = element[state].items;\n  const start = downward ? 0 : items.length - 1;\n  const end = downward ? items.length : 0;\n  const step = downward ? 1 : -1;\n\n  // Find the item spanning the indicated y coordinate.\n  let index;\n  /** @type {HTMLElement|SVGElement|null} */ let item = null;\n  let itemRect;\n  const { availableItemFlags } = element[state];\n  for (index = start; index !== end; index += step) {\n    // Only consider items available in the element's current state.\n    const available = availableItemFlags ? availableItemFlags[index] : true;\n    if (available) {\n      itemRect = items[index].getBoundingClientRect();\n      if (itemRect.top <= y && y <= itemRect.bottom) {\n        // Item spans the indicated y coordinate.\n        item = items[index];\n        break;\n      }\n    }\n  }\n\n  if (!item || !itemRect) {\n    return null;\n  }\n\n  // We may have found an item whose padding spans the given y coordinate,\n  // but whose content is actually above/below that point.\n  // TODO: If the item has a border, then padding should be included in\n  // considering a hit.\n  const itemStyle = getComputedStyle(item);\n  const itemPaddingTop = itemStyle.paddingTop\n    ? parseFloat(itemStyle.paddingTop)\n    : 0;\n  const itemPaddingBottom = itemStyle.paddingBottom\n    ? parseFloat(itemStyle.paddingBottom)\n    : 0;\n  const contentTop = itemRect.top + itemPaddingTop;\n  const contentBottom =\n    contentTop + item.clientHeight - itemPaddingTop - itemPaddingBottom;\n  if ((downward && contentTop <= y) || (!downward && contentBottom >= y)) {\n    // The indicated coordinate hits the actual item content.\n    return index;\n  } else {\n    // The indicated coordinate falls within the item's padding. Back up to\n    // the item below/above the item we found and return that.\n    return index - step;\n  }\n}\n\n/**\n * Move by one page downward (if downward is true), or upward (if false).\n * Return true if we ended up moving the cursor, false if not.\n *\n * @private\n * @param {ReactiveElement} element\n * @param {boolean} downward\n */\nfunction scrollOnePage(element, downward) {\n  const items = element[state].items;\n  const currentIndex = element[state].currentIndex;\n\n  // Determine the item visible just at the edge of direction we're heading.\n  // We'll move to that item if it's not already current.\n  const targetRect = element[scrollTarget].getBoundingClientRect();\n  const edge = downward ? targetRect.bottom : targetRect.top;\n  const indexOfItemAtEdge = getIndexOfItemAtY(element, edge, downward);\n\n  let newIndex;\n  if (indexOfItemAtEdge && currentIndex === indexOfItemAtEdge) {\n    // The item at the edge was already current, so scroll in the indicated\n    // direction by one page, measuring from the bounds of the current item.\n    // Leave the new item at that edge current.\n    const currentItem = items[currentIndex];\n    const currentRect = currentItem.getBoundingClientRect();\n    const pageHeight = element[scrollTarget].clientHeight;\n    const y = downward\n      ? currentRect.bottom + pageHeight\n      : currentRect.top - pageHeight;\n    newIndex = getIndexOfItemAtY(element, y, downward);\n  } else {\n    // The item at the edge wasn't current yet. Instead of scrolling, we'll just\n    // move to that item. That is, the first attempt to page up/down usually\n    // just moves the cursor to the edge in that direction.\n    newIndex = indexOfItemAtEdge;\n  }\n\n  if (!newIndex) {\n    // We went past the first/last item without finding an item. Move to the\n    // last item (if moving downward) or first item (if moving upward).\n    const index = downward ? items.length - 1 : 0;\n    newIndex = element[closestAvailableItemIndex]\n      ? element[closestAvailableItemIndex](element[state], {\n          direction: downward ? -1 /* Work up */ : 1 /* Work down */,\n          index,\n        })\n      : index;\n  }\n\n  const changed = newIndex !== currentIndex;\n  if (changed) {\n    // If external code causes an operation that scrolls the page, it's\n    // impossible for it to predict where the currentIndex is going to end up.\n    // Accordingly, we raise change events.\n    const saveRaiseChangesEvents = element[raiseChangeEvents];\n    element[raiseChangeEvents] = true;\n    element[setState]({\n      currentIndex: newIndex,\n    });\n    element[raiseChangeEvents] = saveRaiseChangesEvents;\n  }\n  return changed;\n}\n","/**\n * Constants used by Elix mixins and components\n *\n * Sharing these constants allows for greater consistency in things such as user\n * interface timings.\n *\n * @module constants\n */\n\n/**\n * Time in milliseconds after which the user is considered to have stopped\n * typing.\n *\n * This is used by\n * [KeyboardPrefixCursorMixin](KeyboardPrefixCursorMixin).\n *\n * @const {number} TYPING_TIMEOUT_DURATION\n */\nexport const TYPING_TIMEOUT_DURATION = 1000;\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { TYPING_TIMEOUT_DURATION } from \"./constants.js\";\nimport { goToItemWithPrefix, keydown, setState, state } from \"./internal.js\";\n\n// Symbols for private data members on an element.\nconst typedPrefixKey = Symbol(\"typedPrefix\");\nconst prefixTimeoutKey = Symbol(\"prefixTimeout\");\n\n/**\n * Lets a user navigate an item cursor by typing the beginning of items\n *\n * Example: suppose a component using this mixin has the following items:\n *\n *     <sample-list-component>\n *       <div>Apple</div>\n *       <div>Apricot</div>\n *       <div>Banana</div>\n *       <div>Blackberry</div>\n *       <div>Blueberry</div>\n *       <div>Cantaloupe</div>\n *       <div>Cherry</div>\n *       <div>Lemon</div>\n *       <div>Lime</div>\n *     </sample-list-component>\n *\n * If this component receives the focus, and the user presses the \"b\" or \"B\"\n * key, the item cursor will move to \"Banana\", because it's the first item that\n * matches the prefix \"b\". (Matching is case-insensitive.) If the user now\n * presses the \"l\" or \"L\" key quickly, the prefix to match becomes \"bl\", so the\n * cursor will move to \"Blackberry\".\n *\n * The prefix typing feature has a one second timeout — the prefix to match will\n * be reset after a second has passed since the user last typed a key. If, in\n * the above example, the user waits a second between typing \"b\" and \"l\", the\n * prefix will become \"l\", so the cursor would move to \"Lemon\".\n *\n * This mixin expects the component to invoke a `keydown` method when a key is\n * pressed. You can use [KeyboardMixin](KeyboardMixin) for that purpose, or wire\n * up your own keyboard handling and call `keydown` yourself.\n *\n * This mixin also expects the component to provide an `items` property. The\n * `textContent` of those items will be used for purposes of prefix matching.\n *\n * @module KeyboardPrefixCursorMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function KeyboardPrefixCursorMixin(Base) {\n  // The class prototype added by the mixin.\n  class KeyboardPrefixCursor extends Base {\n    constructor() {\n      // @ts-ignore\n      super();\n      resetTypedPrefix(this);\n    }\n\n    /**\n     * Go to the first item whose text content begins with the given prefix.\n     *\n     * @param {string} prefix - The prefix string to search for\n     * @returns {boolean}\n     */\n    [goToItemWithPrefix](prefix) {\n      if (super[goToItemWithPrefix]) {\n        super[goToItemWithPrefix](prefix);\n      }\n      if (prefix == null || prefix.length === 0) {\n        return false;\n      }\n      // Find item that begins with the prefix. Ignore case.\n      const searchText = prefix.toLowerCase();\n      /** @type {string[]} */ const texts = this[state].texts;\n      const index = texts.findIndex(\n        (text) => text.substr(0, prefix.length).toLowerCase() === searchText\n      );\n      if (index >= 0) {\n        const previousIndex = this[state].currentIndex;\n        this[setState]({ currentIndex: index });\n        return this[state].currentIndex !== previousIndex;\n      } else {\n        return false;\n      }\n    }\n\n    [keydown](/** @type {KeyboardEvent} */ event) {\n      let handled;\n\n      switch (event.key) {\n        case \"Backspace\":\n          handleBackspace(this);\n          handled = true;\n          break;\n\n        case \"Escape\":\n          // Pressing Escape lets user quickly start typing a new prefix.\n          resetTypedPrefix(this);\n          break;\n\n        default:\n          if (\n            !event.ctrlKey &&\n            !event.metaKey &&\n            !event.altKey &&\n            event.key.length === 1\n          ) {\n            handlePlainCharacter(this, event.key);\n          }\n      }\n\n      // Prefer mixin result if it's defined, otherwise use base result.\n      return handled || (super[keydown] && super[keydown](event));\n    }\n  }\n\n  return KeyboardPrefixCursor;\n}\n\n/**\n * Handle the Backspace key: remove the last character from the prefix.\n *\n * @private\n * @param {ReactiveElement} element\n */\nfunction handleBackspace(element) {\n  /** @type {any} */ const cast = element;\n  const length = cast[typedPrefixKey] ? cast[typedPrefixKey].length : 0;\n  if (length > 0) {\n    cast[typedPrefixKey] = cast[typedPrefixKey].substr(0, length - 1);\n  }\n  element[goToItemWithPrefix](cast[typedPrefixKey]);\n  setPrefixTimeout(element);\n}\n\n/**\n * Add a plain character to the prefix.\n *\n * @private\n * @param {ReactiveElement} element\n * @param {string} char\n */\nfunction handlePlainCharacter(element, char) {\n  /** @type {any} */ const cast = element;\n  const prefix = cast[typedPrefixKey] || \"\";\n  cast[typedPrefixKey] = prefix + char;\n  element[goToItemWithPrefix](cast[typedPrefixKey]);\n  setPrefixTimeout(element);\n}\n\n/**\n * Stop listening for typing.\n *\n * @private\n * @param {ReactiveElement} element\n */\nfunction resetPrefixTimeout(element) {\n  /** @type {any} */ const cast = element;\n  if (cast[prefixTimeoutKey]) {\n    clearTimeout(cast[prefixTimeoutKey]);\n    cast[prefixTimeoutKey] = false;\n  }\n}\n\n/**\n * Clear the prefix under construction.\n *\n * @private\n * @param {ReactiveElement} element\n */\nfunction resetTypedPrefix(element) {\n  /** @type {any} */ (element)[typedPrefixKey] = \"\";\n  resetPrefixTimeout(element);\n}\n\n/**\n * Wait for the user to stop typing.\n *\n * @private\n * @param {ReactiveElement} element\n */\nfunction setPrefixTimeout(element) {\n  resetPrefixTimeout(element);\n  /** @type {any} */ (element)[prefixTimeoutKey] = setTimeout(() => {\n    resetTypedPrefix(element);\n  }, TYPING_TIMEOUT_DURATION);\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { getDefaultText } from \"./content.js\";\nimport {\n  defaultState,\n  getItemText,\n  rendered,\n  setState,\n  state,\n} from \"./internal.js\";\n\n/**\n * Exposes a public API for the selected text of a list-like element.\n *\n * This mixin exists for list-like components that want to provide a more\n * convenient way to get/set the selected item using text. It adds a `selectedText`\n * property that gets the `textContent` of a component's `selectedItem`. The\n * `selectedText` property can also be set to set the selection to the first item in\n * the `items` collection that has the requested `textContent`. If the indicated\n * text is not found in `items`, the selection is cleared.\n *\n * This mixin expects a component to provide an `items` array of all elements in\n * the list. A standard way to do that with is\n * [ContentItemsMixin](ContentItemsMixin). This also expects the definition of a\n * `selectedIndex` state, which can be obtained from\n * [CursorSelectMixin](CursorSelectMixin).\n *\n * @module SelectedTextAPIMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function SelectedTextAPIMixin(Base) {\n  // The class prototype added by the mixin.\n  class SelectedTextAPI extends Base {\n    get [defaultState]() {\n      return Object.assign(super[defaultState], {\n        desiredSelectedText: null,\n      });\n    }\n\n    /**\n     * Extract the text from the given item.\n     *\n     * The default implementation returns an item's `aria-label`, `alt` attribute,\n     * or its `textContent`, in that order. You can override this to return the\n     * text that should be used.\n     *\n     * @param {Element} item\n     * @returns {string}\n     */\n    [getItemText](item) {\n      return super[getItemText]\n        ? super[getItemText](item)\n        : getDefaultText(item);\n    }\n\n    [rendered](/** @type {ChangedFlags} */ changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n\n      // If we have desired text to apply and now have items, apply the text.\n      const { items, desiredSelectedText } = this[state];\n      if (desiredSelectedText && items) {\n        const index = indexOfItemWithText(\n          items,\n          this[getItemText],\n          desiredSelectedText\n        );\n        this[setState]({\n          selectedIndex: index,\n          desiredSelectedText: null,\n        });\n      }\n    }\n\n    /**\n     * The text content of the selected item.\n     *\n     * Setting this value to a string will attempt to select the first list item\n     * whose text content match that string. Setting this to a string not matching\n     * any list item will result in no selection.\n     *\n     * @type {string}\n     */\n    get selectedText() {\n      const { items, selectedIndex } = this[state];\n      const selectedItem = items ? items[selectedIndex] : null;\n      return selectedItem == null || selectedItem.textContent == null\n        ? \"\"\n        : selectedItem.textContent;\n    }\n    set selectedText(selectedText) {\n      const { items } = this[state];\n      if (items === null) {\n        // No items yet, save and try again later.\n        this[setState]({\n          desiredSelectedText: selectedText,\n        });\n      } else {\n        // Select the index of the indicated text, if found.\n        const selectedIndex = indexOfItemWithText(\n          items,\n          this[getItemText],\n          selectedText\n        );\n        this[setState]({ selectedIndex });\n      }\n    }\n  }\n\n  return SelectedTextAPI;\n}\n\n/**\n * @private\n * @param {Element[]} items\n * @param {string} text\n */\nfunction indexOfItemWithText(items, getText, text) {\n  return items.findIndex((item) => getText(item) === text);\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { defaultState, rendered, setState, state } from \"./internal.js\";\n\n/**\n * Exposes a public API for the value of a list-like element.\n *\n * @module SelectedValueAPIMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function SelectedValueAPIMixin(Base) {\n  // The class prototype added by the mixin.\n  class SelectedValueAPI extends Base {\n    get [defaultState]() {\n      return Object.assign(super[defaultState], {\n        desiredValue: null,\n      });\n    }\n\n    [rendered](/** @type {ChangedFlags} */ changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n\n      // If we have a desired value to apply and now have items, apply the\n      // value.\n      const { items, desiredValue } = this[state];\n      if (desiredValue && items) {\n        const index = indexOfItemWithValue(items, desiredValue);\n        this[setState]({\n          selectedIndex: index,\n          desiredValue: null,\n        });\n      }\n    }\n\n    /**\n     * The text content of the selected item.\n     *\n     * Setting this value to a string will attempt to select the first list item\n     * whose text content match that string. Setting this to a string not matching\n     * any list item will result in no selection.\n     *\n     * @type {string}\n     */\n    get value() {\n      const { items, selectedIndex } = this[state];\n      const selectedItem = items ? items[selectedIndex] : null;\n      return selectedItem ? selectedItem.getAttribute(\"value\") : \"\";\n    }\n    set value(value) {\n      const { items } = this[state];\n      if (items === null) {\n        // No items yet, save and try again later.\n        this[setState]({\n          desiredValue: value,\n        });\n      } else {\n        // Select the index of the indicated value, if found.\n        const selectedIndex = indexOfItemWithValue(items, value);\n        this[setState]({ selectedIndex });\n      }\n    }\n  }\n\n  return SelectedValueAPI;\n}\n\n/**\n * @private\n * @param {Element[]} items\n * @param {string} value\n */\nfunction indexOfItemWithValue(items, value) {\n  return items.findIndex((item) => item.getAttribute(\"value\") === value);\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { raiseChangeEvents, rendered, setState, state } from \"./internal.js\";\n\n/**\n * Exposes a public API for single selection on a list-like element\n *\n * This mixin expects a component to provide an `items` Array of all elements in\n * the list. This mixin also expects the component to apply\n * [ItemsCursorMixin](ItemsCursorMixin) and\n * [CursorSelectMixin](CursorSelectMixin) or otherwise define a compatible\n * `selectedIndex` state and other state members for navigating the current\n * item.\n *\n * Given the above, this mixin exposes a consistent public API for reading and\n * manipulating the current item as a selection. This includes public members\n * `selectedIndex` and `selectedItem`, selection navigation methods, and a\n * `selected-index-changed` event.\n *\n * This mixin does not produce any user-visible effects to represent selection;\n * that is up to the component to provide.\n *\n * @module SingleSelectAPIMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function SingleSelectAPIMixin(Base) {\n  // The class prototype added by the mixin.\n  class SingleSelectAPI extends Base {\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (name === \"selected-index\") {\n        this.selectedIndex = Number(newValue);\n      } else {\n        super.attributeChangedCallback(name, oldValue, newValue);\n      }\n    }\n\n    [rendered](/** @type {ChangedFlags} */ changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n\n      if (changed.selectedIndex && this[raiseChangeEvents]) {\n        const selectedIndex = this[state].selectedIndex;\n        const oldEvent = new CustomEvent(\"selected-index-changed\", {\n          bubbles: true,\n          detail: { selectedIndex },\n        });\n        this.dispatchEvent(oldEvent);\n        /**\n         * Raised when the `selectedIndex` property changes.\n         *\n         * @event selectedindexchange\n         */\n        const event = new CustomEvent(\"selectedindexchange\", {\n          bubbles: true,\n          detail: { selectedIndex },\n        });\n        this.dispatchEvent(event);\n      }\n    }\n\n    /**\n     * The index of the selected item, or -1 if no item is selected.\n     *\n     * @type {number}\n     */\n    get selectedIndex() {\n      const { items, selectedIndex } = this[state];\n      return items && items.length > 0 ? selectedIndex : -1;\n    }\n    set selectedIndex(selectedIndex) {\n      if (!isNaN(selectedIndex)) {\n        this[setState]({ selectedIndex });\n      }\n    }\n\n    /**\n     * The selected item, or null if no item is selected.\n     *\n     * @type {Element}\n     */\n    get selectedItem() {\n      const { items, selectedIndex } = this[state];\n      return items && items[selectedIndex];\n    }\n    set selectedItem(selectedItem) {\n      const { items } = this[state];\n      if (!items) {\n        return;\n      }\n      const index = items.indexOf(selectedItem);\n      if (index >= 0) {\n        this[setState]({ selectedIndex: index });\n      }\n    }\n  }\n\n  return SingleSelectAPI;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { isSubstantiveElement } from \"./content.js\";\nimport { defaultState, stateEffects } from \"./internal.js\";\n\n/**\n * Treats an element's content nodes as list items.\n *\n * Items differ from nodes contents in several ways:\n *\n * * They are often referenced via index.\n * * They may have a selection state.\n * * It's common to do work to initialize the appearance or state of a new\n *   item.\n * * Text nodes are filtered out.\n * * Auxiliary invisible child elements are filtered out and not counted as\n *   items. Auxiliary elements include link, script, style, and template\n *   elements. This filtering ensures that those auxiliary elements can be\n *   used in markup inside of a list without being treated as list items.\n *\n * This mixin expects a component to provide a `content` state member returning\n * a raw set of elements. You can provide that yourself, or use\n * [SlotContentMixin](SlotContentMixin).\n *\n * Most Elix [elements](elements) use `ContentItemsMixin`, including\n * [ListBox](ListBox), [Modes](Modes), and [Tabs](Tabs).\n *\n * @module ContentItemsMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function ContentItemsMixin(Base) {\n  return class ContentItems extends Base {\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        items: null,\n      });\n    }\n\n    [stateEffects](state, changed) {\n      const effects = super[stateEffects]\n        ? super[stateEffects](state, changed)\n        : {};\n\n      // Regenerate items when content changes.\n      if (changed.content) {\n        /** @type {Node[]} */ const content = state.content;\n        const items = content\n          ? Array.prototype.filter.call(content, (/** @type {Node} */ item) =>\n              isSubstantiveElement(item)\n            )\n          : null;\n        if (items) {\n          Object.freeze(items);\n        }\n        Object.assign(effects, { items });\n      }\n\n      return effects;\n    }\n  };\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  contentSlot,\n  defaultState,\n  firstRender,\n  raiseChangeEvents,\n  rendered,\n  setState,\n  shadowRoot,\n} from \"./internal.js\";\n\n/**\n * Defines a component's content as the flattened set of nodes assigned to a\n * slot.\n *\n * This mixin defines a component's `content` state member as the flattened\n * set of nodes assigned to a slot, typically the default slot.\n *\n * If the set of assigned nodes changes, the `content` state will be updated.\n * This helps a component satisfy the Gold Standard checklist item for\n * monitoring\n * [Content Changes](https://github.com/webcomponents/gold-standard/wiki/Content-Changes).\n *\n * By default, the mixin looks in the component's shadow subtree for a default\n * (unnamed) `slot` element. You can specify that a different slot should be\n * used by overriding the `internal.contentSlot` property.\n *\n * Most Elix [elements](elements) use `SlotContentMixin`, including\n * [ListBox](ListBox), [Modes](Modes), and [Tabs](Tabs).\n *\n * @module SlotContentMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function SlotContentMixin(Base) {\n  // The class prototype added by the mixin.\n  class SlotContent extends Base {\n    /**\n     * See [contentSlot](internal#internal.contentSlot).\n     */\n    get [contentSlot]() {\n      /** @type {HTMLSlotElement|null} */ const slot =\n        this[shadowRoot] && this[shadowRoot].querySelector(\"slot:not([name])\");\n      if (!this[shadowRoot] || !slot) {\n        /* eslint-disable no-console */\n        console.warn(\n          `SlotContentMixin expects ${this.constructor.name} to define a shadow tree that includes a default (unnamed) slot.\\nSee https://elix.org/documentation/SlotContentMixin.`\n        );\n      }\n      return slot;\n    }\n\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        content: null,\n      });\n    }\n\n    [rendered](/** @type {ChangedFlags} */ changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n\n      if (this[firstRender]) {\n        // Listen to changes on the default slot.\n        const slot = this[contentSlot];\n        if (slot) {\n          slot.addEventListener(\"slotchange\", async () => {\n            // Although slotchange isn't generally a user-driven event, it's\n            // impossible for us to know whether a change in slot content is going\n            // to result in effects that the host of this element can predict.\n            // To be on the safe side, we raise any change events that come up\n            // during the processing of this event.\n            this[raiseChangeEvents] = true;\n\n            // The nodes assigned to the given component have changed.\n            // Update the component's state to reflect the new content.\n            const content = slot.assignedNodes({ flatten: true });\n            Object.freeze(content);\n            this[setState]({ content });\n\n            await Promise.resolve();\n            this[raiseChangeEvents] = false;\n          });\n        }\n      }\n    }\n  }\n\n  return SlotContent;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport ContentItemsMixin from \"./ContentItemsMixin.js\";\nimport SlotContentMixin from \"./SlotContentMixin.js\";\n\n/**\n * Treats the elements assigned to the default slot as list items\n *\n * This is simply a combination of\n * [ContentItemsMixin](ContentItemsMixin) and\n * [SlotContentMixin](SlotContentMixin).\n *\n * @module SlotItemsMixin\n * @mixes ContentItemsMixin\n * @mixes SlotContentMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function SlotItemsMixin(Base) {\n  return ContentItemsMixin(SlotContentMixin(Base));\n}\n","import { indexOfItemContainingTarget } from \"../core/dom.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  firstRender,\n  raiseChangeEvents,\n  render,\n  setState,\n  state,\n  tap,\n} from \"./internal.js\";\n\n/**\n * A tap/mousedown on a list item makes that item current.\n *\n * This simple mixin is useful in list-like elements like [ListBox](ListBox),\n * where a tap/mousedown on a list item implicitly selects it.\n *\n * The standard use for this mixin is in list-like elements. Native list\n * boxes don't appear to be consistent with regard to whether they select\n * on mousedown or click/mouseup. This mixin assumes the use of mousedown.\n * On touch devices, that event appears to trigger when the touch is *released*.\n *\n * This mixin only listens to mousedown events for the primary mouse button\n * (typically the left button). Right clicks are ignored so that the browser may\n * display a context menu.\n *\n * This mixin expects the component to provide an `state.items` member. It also\n * expects the component to define a `state.currentIndex` member; you can\n * provide that yourself, or use [ItemsCursorMixin](ItemsCursorMixin).\n *\n * If the component receives an event that doesn't correspond to an item (e.g.,\n * the user taps on the element background visible between items), the cursor\n * will be removed. However, if the component sets `state.currentItemRequired` to\n * true, a background tap will *not* remove the cursor.\n *\n * @module TapCursorMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function TapCursorMixin(Base) {\n  // The class prototype added by the mixin.\n  return class TapCursor extends Base {\n    constructor() {\n      // @ts-ignore\n      super();\n      this.addEventListener(\"mousedown\", (event) => {\n        // Only process events for the main (usually left) button.\n        if (event.button !== 0) {\n          return;\n        }\n        this[raiseChangeEvents] = true;\n        this[tap](event);\n        this[raiseChangeEvents] = false;\n      });\n    }\n\n    [render](/** @type {ChangedFlags} */ changed) {\n      if (super[render]) {\n        super[render](changed);\n      }\n      if (this[firstRender]) {\n        Object.assign(this.style, {\n          touchAction: \"manipulation\", // for iOS Safari\n          mozUserSelect: \"none\",\n          msUserSelect: \"none\",\n          webkitUserSelect: \"none\",\n          userSelect: \"none\",\n        });\n      }\n    }\n\n    [tap](/** @type {MouseEvent} */ event) {\n      // In some situations, the event target will not be the child which was\n      // originally clicked on. E.g., if the item clicked on is a button, the\n      // event seems to be raised in phase 2 (AT_TARGET) — but the event target\n      // will be the component, not the item that was clicked on. Instead of\n      // using the event target, we get the first node in the event's composed\n      // path.\n      // @ts-ignore\n      const target = event.composedPath\n        ? event.composedPath()[0]\n        : event.target;\n\n      // Find which item was clicked on and, if found, make it current. Ignore\n      // clicks on disabled items.\n      //\n      // For elements which don't require a cursor, a background click will\n      // determine the item was null, in which we case we'll remove the cursor.\n      const { items, currentItemRequired } = this[state];\n      if (items && target instanceof Node) {\n        const targetIndex = indexOfItemContainingTarget(items, target);\n        const item = targetIndex >= 0 ? items[targetIndex] : null;\n        if ((item && !item.disabled) || (!item && !currentItemRequired)) {\n          this[setState]({\n            currentIndex: targetIndex,\n          });\n          event.stopPropagation();\n        }\n      }\n    }\n  };\n}\n","import { fragmentFrom } from \"../core/htmlLiterals.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\";\nimport AriaListMixin from \"./AriaListMixin.js\";\nimport ComposedFocusMixin from \"./ComposedFocusMixin.js\";\nimport CursorAPIMixin from \"./CursorAPIMixin.js\";\nimport CursorInViewMixin from \"./CursorInViewMixin.js\";\nimport CursorSelectMixin from \"./CursorSelectMixin.js\";\nimport DirectionCursorMixin from \"./DirectionCursorMixin.js\";\nimport FocusVisibleMixin from \"./FocusVisibleMixin.js\";\nimport FormElementMixin from \"./FormElementMixin.js\";\nimport {\n  defaultState,\n  ids,\n  render,\n  scrollTarget,\n  setState,\n  state,\n  template,\n} from \"./internal.js\";\nimport ItemsAPIMixin from \"./ItemsAPIMixin.js\";\nimport ItemsCursorMixin from \"./ItemsCursorMixin.js\";\nimport ItemsTextMixin from \"./ItemsTextMixin.js\";\nimport KeyboardDirectionMixin from \"./KeyboardDirectionMixin.js\";\nimport KeyboardMixin from \"./KeyboardMixin.js\";\nimport KeyboardPagedCursorMixin from \"./KeyboardPagedCursorMixin.js\";\nimport KeyboardPrefixCursorMixin from \"./KeyboardPrefixCursorMixin.js\";\nimport LanguageDirectionMixin from \"./LanguageDirectionMixin.js\";\nimport SelectedTextAPIMixin from \"./SelectedTextAPIMixin.js\";\nimport SelectedValueAPIMixin from \"./SelectedValueAPIMixin.js\";\nimport SingleSelectAPIMixin from \"./SingleSelectAPIMixin.js\";\nimport SlotItemsMixin from \"./SlotItemsMixin.js\";\nimport TapCursorMixin from \"./TapCursorMixin.js\";\n\nconst Base = AriaListMixin(\n  ComposedFocusMixin(\n    CursorAPIMixin(\n      CursorInViewMixin(\n        CursorSelectMixin(\n          DirectionCursorMixin(\n            FocusVisibleMixin(\n              FormElementMixin(\n                ItemsAPIMixin(\n                  ItemsCursorMixin(\n                    ItemsTextMixin(\n                      KeyboardDirectionMixin(\n                        KeyboardMixin(\n                          KeyboardPagedCursorMixin(\n                            KeyboardPrefixCursorMixin(\n                              LanguageDirectionMixin(\n                                SingleSelectAPIMixin(\n                                  SelectedTextAPIMixin(\n                                    SelectedValueAPIMixin(\n                                      SlotItemsMixin(\n                                        TapCursorMixin(ReactiveElement)\n                                      )\n                                    )\n                                  )\n                                )\n                              )\n                            )\n                          )\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  )\n);\n\n/**\n * Single-selection list box\n *\n * This component supports ARIA support and full keyboard navigation. See\n * [KeyboardDirectionMixin](KeyboardDirectionMixin),\n * [KeyboardPagedCursorMixin](KeyboardPagedCursorMixin), and\n * [KeyboardPrefixCursorMixin](KeyboardPrefixCursorMixin) for keyboard\n * details.\n *\n * @inherits ReactiveElement\n * @mixes AriaListMixin\n * @mixes ComposedFocusMixin\n * @mixes CursorInViewMixin\n * @mixes CursorAPIMixin\n * @mixes DirectionCursorMixin\n * @mixes FocusVisibleMixin\n * @mixes FormElementMixin\n * @mixes ItemsAPIMixin\n * @mixes ItemsCursorMixin\n * @mixes ItemsTextMixin\n * @mixes KeyboardDirectionMixin\n * @mixes KeyboardMixin\n * @mixes KeyboardPagedCursorMixin\n * @mixes KeyboardPrefixCursorMixin\n * @mixes LanguageDirectionMixin\n * @mixes SelectedTextAPIMixin\n * @mixes SelectedValueAPIMixin\n * @mixes SingleSelectAPIMixin\n * @mixes SlotItemsMixin\n * @mixes TapCursorMixin\n */\nclass ListBox extends Base {\n  get [defaultState]() {\n    return Object.assign(super[defaultState], {\n      orientation: \"vertical\",\n    });\n  }\n\n  get orientation() {\n    return this[state].orientation;\n  }\n  set orientation(orientation) {\n    this[setState]({ orientation });\n  }\n\n  [render](/** @type {ChangedFlags} */ changed) {\n    super[render](changed);\n    if (changed.items || changed.currentIndex) {\n      // Apply `selected` style to the selected item only.\n      const { currentIndex, items } = this[state];\n      if (items) {\n        items.forEach((item, index) => {\n          item.toggleAttribute(\"selected\", index === currentIndex);\n        });\n      }\n    }\n    if (changed.orientation) {\n      // Update list orientation styling.\n      const style =\n        this[state].orientation === \"vertical\"\n          ? {\n              display: \"block\",\n              flexDirection: \"\",\n              overflowX: \"hidden\",\n              overflowY: \"auto\",\n            }\n          : {\n              display: \"flex\",\n              flexDirection: \"row\",\n              overflowX: \"auto\",\n              overflowY: \"hidden\",\n            };\n      Object.assign(this[ids].container.style, style);\n    }\n  }\n\n  get [scrollTarget]() {\n    return this[ids].container;\n  }\n\n  get [template]() {\n    const result = super[template];\n    result.content.append(fragmentFrom.html`\n      <style>\n        :host {\n          box-sizing: border-box;\n          cursor: default;\n          display: flex;\n          overflow: hidden; /* Container element is responsible for scrolling */\n          -webkit-tap-highlight-color: transparent;\n        }\n\n        #container {\n          display: flex;\n          flex: 1;\n          -webkit-overflow-scrolling: touch; /* for momentum scrolling */\n        }\n      </style>\n      <div id=\"container\" role=\"none\">\n        <slot id=\"slot\"></slot>\n      </div>\n    `);\n    return result;\n  }\n}\n\nexport default ListBox;\n","import { templateFrom } from \"../core/htmlLiterals.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\";\nimport CursorAPIMixin from \"./CursorAPIMixin.js\";\nimport CursorSelectMixin from \"./CursorSelectMixin.js\";\nimport { defaultState, render, state, template } from \"./internal.js\";\nimport ItemsAPIMixin from \"./ItemsAPIMixin.js\";\nimport ItemsCursorMixin from \"./ItemsCursorMixin.js\";\nimport SingleSelectAPIMixin from \"./SingleSelectAPIMixin.js\";\nimport SlotItemsMixin from \"./SlotItemsMixin.js\";\n\nconst Base = CursorAPIMixin(\n  CursorSelectMixin(\n    ItemsAPIMixin(\n      ItemsCursorMixin(SingleSelectAPIMixin(SlotItemsMixin(ReactiveElement)))\n    )\n  )\n);\n\n/**\n * Shows a single panel at a time\n *\n * This can be useful when a given UI element has multiple modes that present\n * substantially different elements, or for displaying a single item from a set\n * at a time.\n *\n * This component doesn't provide any UI for changing which mode is shown. A\n * common pattern in which buttons select the mode are tabs, a pattern\n * implemented by the [Tabs](Tabs) component.\n *\n * @inherits ReactiveElement\n * @mixes CursorAPIMixin\n * @mixes CursorSelectMixin\n * @mixes ItemsAPIMixin\n * @mixes ItemsCursorMixin\n * @mixes SingleSelectAPIMixin\n * @mixes SlotItemsMixin\n */\nclass Modes extends Base {\n  get [defaultState]() {\n    return Object.assign(super[defaultState], {\n      currentItemRequired: true,\n    });\n  }\n\n  [render](/** @type {ChangedFlags} */ changed) {\n    super[render](changed);\n    if (changed.items || changed.currentIndex) {\n      const { currentIndex, items } = this[state];\n      if (items) {\n        items.forEach((item, index) => {\n          const selected = index === currentIndex;\n          item.style.display = selected ? \"\" : \"none\";\n        });\n      }\n    }\n  }\n\n  get [template]() {\n    return templateFrom.html`\n      <style>\n        :host {\n          display: inline-flex;\n        }\n        \n        #modesContainer {\n          display: flex;\n          flex: 1;\n          position: relative;\n        }\n      </style>\n      <div id=\"modesContainer\">\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\nexport default Modes;\n","import { updateChildNodes } from \"../core/dom.js\";\nimport { templateFrom } from \"../core/htmlLiterals.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\";\nimport { createElement, transmute } from \"../core/template.js\";\nimport CursorAPIMixin from \"./CursorAPIMixin.js\";\nimport CursorSelectMixin from \"./CursorSelectMixin.js\";\nimport {\n  checkSize,\n  closestAvailableItemIndex,\n  defaultState,\n  firstRender,\n  ids,\n  raiseChangeEvents,\n  render,\n  setState,\n  shadowRoot,\n  state,\n  stateEffects,\n  template,\n} from \"./internal.js\";\nimport ItemsAPIMixin from \"./ItemsAPIMixin.js\";\nimport ItemsCursorMixin from \"./ItemsCursorMixin.js\";\nimport LanguageDirectionMixin from \"./LanguageDirectionMixin.js\";\nimport ListBox from \"./ListBox.js\";\nimport Modes from \"./Modes.js\";\nimport SingleSelectAPIMixin from \"./SingleSelectAPIMixin.js\";\nimport SlotItemsMixin from \"./SlotItemsMixin.js\";\n\n// Does a list position imply a lateral arrangement of list and stage?\n/** @type {IndexedObject<boolean>} */\nconst lateralPositions = {\n  end: true,\n  left: true,\n  right: true,\n  start: true,\n};\n\nconst Base = CursorAPIMixin(\n  CursorSelectMixin(\n    ItemsAPIMixin(\n      ItemsCursorMixin(\n        LanguageDirectionMixin(\n          SingleSelectAPIMixin(SlotItemsMixin(ReactiveElement))\n        )\n      )\n    )\n  )\n);\n\n/**\n * Combines a list with an area focusing on a single selected item.\n *\n * @inherits ReactiveElement\n * @mixes CursorAPIMixin\n * @mixes CursorSelectMixin\n * @mixes ItemsCursorMixin\n * @mixes LanguageDirectionMixin\n * @mixes SingleSelectAPIMixin\n * @mixes SlotItemsMixin\n * @part {div} proxy - an element representing an item in the list\n * @part {ListBox} proxy-list - the container for the list of proxies\n * @part {Modes} stage - the main element showing a single item from the list\n */\nclass Explorer extends Base {\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"proxy-list-overlap\") {\n      this.proxyListOverlap = String(newValue) === \"true\";\n    } else {\n      super.attributeChangedCallback(name, oldValue, newValue);\n    }\n  }\n\n  /**\n   * True if the item cursor can be moved to the next item, false if not (the\n   * current item is the last item in the list).\n   *\n   * @type {boolean}\n   */\n  get canGoNext() {\n    return this[state].canGoNext;\n  }\n\n  /**\n   * True if the item cursor can be moved to the previous item, false if not\n   * (the current item is the first one in the list).\n   *\n   * @type {boolean}\n   */\n  get canGoPrevious() {\n    return this[state].canGoPrevious;\n  }\n\n  [checkSize]() {\n    if (super[checkSize]) {\n      super[checkSize]();\n    }\n    if (this[ids].stage[checkSize]) {\n      this[ids].stage[checkSize]();\n    }\n    if (this[ids].proxyList[checkSize]) {\n      this[ids].proxyList[checkSize]();\n    }\n  }\n\n  get [defaultState]() {\n    return Object.assign(super[defaultState], {\n      currentItemRequired: true,\n      proxies: [],\n      proxiesAssigned: false,\n      proxyListOverlap: false,\n      proxyListPartType: ListBox,\n      proxyListPosition: \"top\",\n      proxyPartType: \"div\",\n      stagePartType: Modes,\n    });\n  }\n\n  [render](/** @type {ChangedFlags} */ changed) {\n    super[render](changed);\n\n    if (this[firstRender]) {\n      // When proxy slot's assigned nodes change, determine whether we need to\n      // generate default proxies or (if assigned nodes are present) treat the\n      // assigned nodes as the proxies.\n      this[ids].proxySlot.addEventListener(\"slotchange\", () => {\n        const proxySlot = /** @type {any} */ (this[ids].proxySlot);\n        const proxies = proxySlot.assignedNodes({ flatten: true });\n        const proxiesAssigned = proxies.length > 0;\n        if (proxiesAssigned) {\n          // Nodes assigned to slot become proxies.\n          this[setState]({\n            proxiesAssigned,\n            proxies,\n          });\n        } else {\n          // No nodes assigned -- we'll need to generate proxies.\n          this[setState]({ proxiesAssigned });\n        }\n      });\n    }\n\n    /** @type {any} */\n    const handleSelectedIndexChanged = (/** @type {CustomEvent} */ event) => {\n      // The proxy list and stage may raise events before they've actually\n      // had a chance to sync up their items to reflect the current state\n      // of the explorer component, so we only handle their events if\n      // their count of items matches ours.\n      /** @type {any} */ const cast = event.target;\n      if (cast && this.items.length === cast.items.length) {\n        const selectedIndex = event.detail.selectedIndex;\n        if (this.selectedIndex !== selectedIndex) {\n          this[raiseChangeEvents] = true;\n          this.selectedIndex = selectedIndex;\n          this[raiseChangeEvents] = false;\n        }\n      }\n    };\n\n    renderParts(this[shadowRoot], this[state], changed);\n\n    if (changed.proxyListPartType) {\n      this[ids].proxyList.addEventListener(\n        \"selectedindexchange\",\n        handleSelectedIndexChanged\n      );\n    }\n\n    if (changed.stagePartType) {\n      this[ids].stage.addEventListener(\n        \"selectedindexchange\",\n        handleSelectedIndexChanged\n      );\n      this[ids].stage.addEventListener(\"selectioneffectend\", (event) => {\n        const { selectedIndex } = /** @type {any} */ (event).detail;\n        const oldEvent = new CustomEvent(\"selection-effect-finished\", {\n          bubbles: true,\n          detail: { selectedIndex },\n        });\n        this.dispatchEvent(oldEvent);\n        /**\n         * This event is raised if the current `stage` applies a transition\n         * effect when changing the selection, and the selection effect has\n         * completed. [CrossfadeStage](CrossfadeStage) applies such an effect,\n         * for example.\n         *\n         * The order of events when the `selectedIndex` property changes is\n         * therefore: `selectedindexchange` (occurs immediately when the index\n         * changes), followed by `selectioneffectend` (occurs some time later).\n         *\n         * @event selectioneffectend\n         */\n        const selectedEffectEndEvent = new CustomEvent(\"selectioneffectend\", {\n          bubbles: true,\n          detail: { selectedIndex },\n        });\n        this.dispatchEvent(selectedEffectEndEvent);\n      });\n    }\n\n    const proxyList = this[ids].proxyList;\n    const stage = this[ids].stage;\n    if (changed.proxies || changed.proxiesAssigned) {\n      // Render the default proxies.\n      const { proxies, proxiesAssigned } = this[state];\n      const childNodes = proxiesAssigned\n        ? [this[ids].proxySlot]\n        : [this[ids].proxySlot, ...proxies];\n      updateChildNodes(this[ids].proxyList, childNodes);\n    }\n\n    if (\n      changed.proxyListOverlap ||\n      changed.proxyListPosition ||\n      changed.proxyListPartType\n    ) {\n      const { proxyListOverlap, proxyListPosition } = this[state];\n      const lateralPosition = lateralPositions[proxyListPosition];\n      Object.assign(proxyList.style, {\n        height: lateralPosition ? \"100%\" : null,\n        position: proxyListOverlap ? \"absolute\" : null,\n        width: lateralPosition ? null : \"100%\",\n        zIndex: proxyListOverlap ? \"1\" : null,\n      });\n    }\n\n    if (changed.proxyListPosition || changed.rightToLeft) {\n      // Map the relative position of the list vis-a-vis the stage to a position\n      // from the perspective of the list.\n      const cast = /** @type {any} */ (proxyList);\n      if (\"position\" in cast) {\n        const { proxyListPosition, rightToLeft } = this[state];\n        let position;\n        switch (proxyListPosition) {\n          case \"end\":\n            position = rightToLeft ? \"left\" : \"right\";\n            break;\n          case \"start\":\n            position = rightToLeft ? \"right\" : \"left\";\n            break;\n          default:\n            position = proxyListPosition;\n            break;\n        }\n        cast.position = position;\n      }\n    }\n\n    if (changed.proxyListPosition || changed.proxyListPartType) {\n      setListAndStageOrder(this, this[state]);\n      const { proxyListPosition } = this[state];\n      const lateralPosition = lateralPositions[proxyListPosition];\n      this[ids].explorerContainer.style.flexDirection = lateralPosition\n        ? \"row\"\n        : \"column\";\n      Object.assign(proxyList.style, {\n        bottom: proxyListPosition === \"bottom\" ? \"0\" : null,\n        left: proxyListPosition === \"left\" ? \"0\" : null,\n        right: proxyListPosition === \"right\" ? \"0\" : null,\n        top: proxyListPosition === \"top\" ? \"0\" : null,\n      });\n    }\n\n    if (changed.currentIndex || changed.proxyListPartType) {\n      if (\"selectedIndex\" in proxyList) {\n        const { currentIndex } = this[state];\n        /** @type {any} */ (proxyList).selectedIndex = currentIndex;\n      }\n    }\n\n    if (changed.currentIndex || changed.stagePartType) {\n      if (\"selectedIndex\" in stage) {\n        const { currentIndex } = this[state];\n        /** @type {any} */ (stage).selectedIndex = currentIndex;\n      }\n    }\n\n    if (changed.currentItemRequired || changed.proxyListPartType) {\n      if (\"selectionRequired\" in proxyList) {\n        const { selectionRequired } = this[state];\n        /** @type {any} */ (proxyList).selectionRequired = selectionRequired;\n      }\n    }\n\n    if (changed.swipeFraction || changed.proxyListPartType) {\n      if (\"swipeFraction\" in proxyList) {\n        const { swipeFraction } = this[state];\n        /** @type {any} */ (proxyList).swipeFraction = swipeFraction;\n      }\n    }\n\n    if (changed.swipeFraction || changed.stagePartType) {\n      if (\"swipeFraction\" in stage) {\n        const { swipeFraction } = this[state];\n        /** @type {any} */ (stage).swipeFraction = swipeFraction;\n      }\n    }\n  }\n\n  /**\n   * The current set of proxy elements that correspond to the component's\n   * main `items`. If you have assigned elements to the `proxy` slot, this\n   * returns the collection of those elements. Otherwise, this will return\n   * a collection of default proxies generated by the component, one for\n   * each item.\n   *\n   * @type {Element[]}\n   */\n  get proxies() {\n    return this[state].proxies;\n  }\n\n  /**\n   * True if the list of proxies should overlap the stage, false if not.\n   *\n   * @type {boolean}\n   * @default false\n   */\n  get proxyListOverlap() {\n    return this[state].proxyListOverlap;\n  }\n  set proxyListOverlap(proxyListOverlap) {\n    this[setState]({ proxyListOverlap });\n  }\n\n  /**\n   * The position of the proxy list relative to the stage.\n   *\n   * The `start` and `end` values refer to text direction: in left-to-right\n   * languages such as English, these are equivalent to `left` and `right`,\n   * respectively.\n   *\n   * @type {('bottom'|'end'|'left'|'right'|'start'|'top')}\n   * @default 'start'\n   */\n  get proxyListPosition() {\n    return this[state].proxyListPosition;\n  }\n  set proxyListPosition(proxyListPosition) {\n    this[setState]({ proxyListPosition });\n  }\n\n  /**\n   * The class or tag used to create the `proxy-list` part - the list\n   * of selectable proxies representing the items in the list.\n   *\n   * @type {PartDescriptor}\n   * @default ListBox\n   */\n  get proxyListPartType() {\n    return this[state].proxyListPartType;\n  }\n  set proxyListPartType(proxyListPartType) {\n    this[setState]({ proxyListPartType });\n  }\n\n  /**\n   * The class or tag used to create the `proxy` parts - the default\n   * representations for the list's items.\n   *\n   * @type {PartDescriptor}\n   * @default 'div'\n   */\n  get proxyPartType() {\n    return this[state].proxyPartType;\n  }\n  set proxyPartType(proxyPartType) {\n    this[setState]({ proxyPartType });\n  }\n\n  /**\n   * The class or tag used for the main \"stage\" element that shows a\n   * single item at a time.\n   *\n   * @type {PartDescriptor}\n   * @default Modes\n   */\n  get stagePartType() {\n    return this[state].stagePartType;\n  }\n  set stagePartType(stagePartType) {\n    this[setState]({ stagePartType });\n  }\n\n  [stateEffects](state, changed) {\n    const effects = super[stateEffects](state, changed);\n\n    // If items for default proxies have changed, recreate the proxies.\n    // If nodes have been assigned to the proxy slot, use those instead.\n    if (changed.items || changed.proxiesAssigned || changed.proxyPartType) {\n      const { items, proxiesAssigned, proxyPartType } = state;\n      if ((changed.items || changed.proxyPartType) && !proxiesAssigned) {\n        // Generate sufficient default proxies.\n        Object.assign(effects, {\n          proxies: createDefaultProxies(items, proxyPartType),\n        });\n      }\n    }\n\n    // Update computed state members canGoNext/canGoPrevious.\n    if (\n      changed.currentIndex ||\n      changed.cursorOperationsWrap ||\n      changed.filter ||\n      changed.items\n    ) {\n      const { currentIndex, items } = state;\n      // Can go next/previous if there are items but no cursor.\n      const specialCase = items && items.length > 0 && currentIndex < 0;\n      const canGoNext =\n        specialCase ||\n        this[closestAvailableItemIndex](state, {\n          direction: 1,\n          index: currentIndex + 1,\n        }) >= 0;\n      const canGoPrevious =\n        specialCase ||\n        this[closestAvailableItemIndex](state, {\n          direction: -1,\n          index: currentIndex - 1,\n        }) >= 0;\n      Object.assign(effects, {\n        canGoNext,\n        canGoPrevious,\n      });\n    }\n\n    return effects;\n  }\n\n  get [template]() {\n    const result = templateFrom.html`\n      <style>\n        :host {\n          display: inline-flex;\n        }\n        \n        #explorerContainer {\n          display: flex;\n          flex: 1;\n          max-width: 100%; /* For Firefox */\n          position: relative;\n        }\n\n        [part~=\"proxy-list\"] {\n          box-sizing: border-box;\n        }\n\n        [part~=\"stage\"] {\n          flex: 1;\n        }\n      </style>\n      <div id=\"explorerContainer\" role=\"none\">\n        <div id=\"proxyList\" part=\"proxy-list\"><slot id=\"proxySlot\" name=\"proxy\"></slot></div>\n        <div id=\"stage\" part=\"stage\" role=\"none\"><slot></slot></div>\n      </div>\n    `;\n\n    renderParts(result.content, this[state]);\n\n    return result;\n  }\n}\n\n/**\n * Return the default list generated for the given items.\n *\n * @private\n * @param {ListItemElement[]} items\n * @param {PartDescriptor} proxyPartType\n */\nfunction createDefaultProxies(items, proxyPartType) {\n  const proxies = items ? items.map(() => createElement(proxyPartType)) : [];\n  proxies.forEach((proxy) => {\n    // As of February 2020, the `part` property is not available in all\n    // browsers, so we set it as an attribute instead.\n    /** @type {any} */ (proxy).setAttribute(\"part\", \"proxy\");\n  });\n  // Make the array immutable to avoid accidental mutation.\n  Object.freeze(proxies);\n  return proxies;\n}\n\n/**\n * Find the child of root that is or contains the given node.\n *\n * @private\n * @param {Node} root\n * @param {Node} node\n * @returns {Node|null}\n */\nfunction findChildContainingNode(root, node) {\n  const parentNode = node.parentNode;\n  return parentNode === root\n    ? node\n    : parentNode\n    ? findChildContainingNode(root, parentNode)\n    : null;\n}\n\n/**\n * Render parts for the template or an instance.\n *\n * @private\n * @param {DocumentFragment} root\n * @param {PlainObject} state\n * @param {ChangedFlags} [changed]\n */\nfunction renderParts(root, state, changed) {\n  if (!changed || changed.proxyListPartType) {\n    const proxyList = root.getElementById(\"proxyList\");\n    if (proxyList) {\n      const { proxyListPartType } = state;\n      transmute(proxyList, proxyListPartType);\n    }\n  }\n  if (!changed || changed.stagePartType) {\n    const stage = root.getElementById(\"stage\");\n    if (stage) {\n      const { stagePartType } = state;\n      transmute(stage, stagePartType);\n    }\n  }\n}\n\n/**\n * Physically reorder the list and stage to reflect the desired arrangement. We\n * could change the visual appearance by reversing the order of the flex box,\n * but then the visual order wouldn't reflect the document order, which\n * determines focus order. That would surprise a user trying to tab through the\n * controls.\n *\n * @private\n * @param {Explorer} element\n * @param {PlainObject} state\n */\nfunction setListAndStageOrder(element, state) {\n  const { proxyListPosition, rightToLeft } = state;\n  const listInInitialPosition =\n    proxyListPosition === \"top\" ||\n    proxyListPosition === \"start\" ||\n    (proxyListPosition === \"left\" && !rightToLeft) ||\n    (proxyListPosition === \"right\" && rightToLeft);\n  const container = element[ids].explorerContainer;\n  const stage = findChildContainingNode(container, element[ids].stage);\n  const list = findChildContainingNode(container, element[ids].proxyList);\n  const firstElement = listInInitialPosition ? list : stage;\n  const lastElement = listInInitialPosition ? stage : list;\n  if (firstElement && lastElement) {\n    const nextElementSibling = /** @type {any} */ (firstElement)\n      .nextElementSibling;\n    if (nextElementSibling !== lastElement) {\n      element[ids].explorerContainer.insertBefore(firstElement, lastElement);\n    }\n  }\n}\n\nexport default Explorer;\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport { defaultState, firstRender, rendered, setState } from \"./internal.js\";\n\n/**\n * Simple foundation for component with visual effects\n *\n * At present, this mixin's only responsibility to ensure that a component\n * does not show visual effects when it is initially rendered.\n *\n * @module EffectMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function EffectMixin(Base) {\n  // The class prototype added by the mixin.\n  class Transition extends Base {\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        enableEffects: false,\n      });\n    }\n\n    [rendered](/** @type {ChangedFlags} */ changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n\n      if (this[firstRender]) {\n        // Once everything's finished rendering, enable transition effects.\n        setTimeout(() => {\n          this[setState]({ enableEffects: true });\n        });\n      }\n    }\n  }\n\n  return Transition;\n}\n","/**\n * Helpers for rendering transitions between selection states\n *\n * These functions help a component work with \"fractional selection\". This\n * notion can be very helpful in modeling components such as carousels (e.g.,\n * [Carousel](Carousel), in which the selection state during user\n * interaction may be partway between one item and the next. With fractional\n * selection, we add a real number between 0 and 1 to a selected index to obtain\n * a fractional selection value.\n *\n * Consider a carousel displaying a set of images. Suppose the image at index 3\n * is selected. The carousel's `selectedIndex` state at this point is 3. The\n * user begins dragging the carousel with their finger. Image 3 moves out of\n * view, and the image 4 moves into view. When the user is halfway through this\n * operation, we might say that the fractional selection value is 3.5.\n * Eventually, the user releases their finger, and the carousel shows the image\n * 4 selected; the `selectedIndex` is 4.\n *\n * These functions help components work consistently with fractional selection.\n *\n * @module fractionalSelection\n */\n\n/**\n * Dampen a selection that goes past the beginning or end of a list. This is\n * generally used to produce a visual effect of tension as the user tries to\n * go further in a direction that has no more items.\n *\n * Example: suppose `itemCount` is 5, indicating a list of 5 items. The index of\n * the last item is 4. If the `selection` parameter is 4.5, the user is trying\n * to go past this last item. When a damping function is applied, the resulting\n * value will be less than 4.5 (the actual value will be 4.25). When this\n * selection state is rendered, the user will see that, each unit distance the\n * drag travels has less and less visible effect. This is perceived as tension.\n *\n * @param {number} selection - A real number indicating a selection position\n * @param {number} itemCount - An integer for the number of items in the list\n * @returns {number} A real number representing the damped selection value.\n */\nexport function dampenListSelection(selection, itemCount) {\n  const bound = itemCount - 1;\n  let damped;\n  if (selection < 0) {\n    // Trying to go past beginning of list. Apply tension from the left edge.\n    damped = -dampen(-selection);\n  } else if (selection >= bound) {\n    // Trying to go past end of list. Apply tension from the right edge.\n    damped = bound + dampen(selection - bound);\n  } else {\n    // No damping required.\n    damped = selection;\n  }\n  return damped;\n}\n\n/**\n * Calculate damping as a function of the distance past the minimum/maximum\n * values.\n *\n * We want to asymptotically approach an absolute minimum of 1 unit\n * below/above the actual minimum/maximum. This requires calculating a\n * hyperbolic function.\n *\n * We use the formula `y = (-1/(x+1))+1`.\n * (See a [graph of this\n * function](http://www.wolframalpha.com/input/?i=y%3D(-1%2F(x%2B1))%2B1).)\n * The only portion of that function we care about is when x is zero or greater.\n * An important consideration is that the curve be tangent to the diagonal line\n * x=y at (0, 0). This ensures smooth continuity with the normal drag behavior,\n * in which the visible sliding is linear with the distance the touchpoint has\n * been dragged.\n *\n * @param {number} x - The number of dampen\n * @returns {number}\n */\nexport function dampen(x) {\n  const y = -1 / (x + 1) + 1;\n  return y;\n}\n","import { templateFrom } from \"../core/htmlLiterals.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\";\nimport CursorAPIMixin from \"./CursorAPIMixin.js\";\nimport CursorSelectMixin from \"./CursorSelectMixin.js\";\nimport EffectMixin from \"./EffectMixin.js\";\nimport * as fractionalSelection from \"./fractionalSelection.js\";\nimport {\n  defaultState,\n  ids,\n  render,\n  setState,\n  state,\n  template,\n} from \"./internal.js\";\nimport ItemsAPIMixin from \"./ItemsAPIMixin.js\";\nimport ItemsCursorMixin from \"./ItemsCursorMixin.js\";\nimport LanguageDirectionMixin from \"./LanguageDirectionMixin.js\";\nimport SingleSelectAPIMixin from \"./SingleSelectAPIMixin.js\";\nimport SlotItemsMixin from \"./SlotItemsMixin.js\";\n\nconst Base = CursorAPIMixin(\n  CursorSelectMixin(\n    EffectMixin(\n      ItemsAPIMixin(\n        ItemsCursorMixin(\n          LanguageDirectionMixin(\n            SingleSelectAPIMixin(SlotItemsMixin(ReactiveElement))\n          )\n        )\n      )\n    )\n  )\n);\n\n/**\n * Slides between selected items on a horizontal axis\n *\n * This displays a single item completely visible at a time. When changing which\n * item is selected, it displays a simple sliding transition.\n *\n * This component is used as the main stage for a [Carousel](Carousel).\n *\n * @inherits ReactiveElement\n * @mixes CursorAPIMixin\n * @mixes CursorSelectMixin\n * @mixes EffectMixin\n * @mixes ItemsAPIMixin\n * @mixes ItemsCursorMixin\n * @mixes LanguageDirectionMixin\n * @mixes SingleSelectAPIMixin\n * @mixes SlotItemsMixin\n */\nclass SlidingStage extends Base {\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"swipe-fraction\") {\n      this.swipeFraction = parseFloat(newValue);\n    } else {\n      super.attributeChangedCallback(name, oldValue, newValue);\n    }\n  }\n\n  get [defaultState]() {\n    return Object.assign(super[defaultState], {\n      currentItemRequired: true,\n      orientation: \"horizontal\",\n    });\n  }\n\n  get orientation() {\n    return this[state].orientation;\n  }\n  set orientation(orientation) {\n    this[setState]({ orientation });\n  }\n\n  [render](/** @type {ChangedFlags} */ changed) {\n    super[render](changed);\n    if (\n      changed.currentIndex ||\n      changed.enableEffects ||\n      changed.orientation ||\n      changed.swipeFraction\n    ) {\n      const { orientation, rightToLeft, currentIndex, items } = this[state];\n      const vertical = orientation === \"vertical\";\n      const sign = vertical ? -1 : rightToLeft ? 1 : -1;\n      const swiping = this[state].swipeFraction != null;\n      const swipeFraction = this[state].swipeFraction || 0;\n      let translation;\n      if (currentIndex >= 0) {\n        const selectionFraction = currentIndex + sign * swipeFraction;\n        const count = items ? items.length : 0;\n        const dampedSelection = fractionalSelection.dampenListSelection(\n          selectionFraction,\n          count\n        );\n        translation = sign * dampedSelection * 100;\n      } else {\n        translation = 0;\n      }\n\n      const slidingStageContent = this[ids].slidingStageContent;\n      const axis = vertical ? \"Y\" : \"X\";\n      slidingStageContent.style.transform = `translate${axis}(${translation}%)`;\n\n      const showTransition = this[state].enableEffects && !swiping;\n      slidingStageContent.style.transition = showTransition\n        ? \"transform 0.25s\"\n        : \"none\";\n    }\n    if (changed.orientation) {\n      const { orientation } = this[state];\n      const vertical = orientation === \"vertical\";\n      this[ids].slidingStageContent.style.flexDirection = vertical\n        ? \"column\"\n        : \"\";\n    }\n  }\n\n  get swipeFraction() {\n    return this[state].swipeFraction;\n  }\n  set swipeFraction(swipeFraction) {\n    this[setState]({ swipeFraction });\n  }\n\n  get [template]() {\n    // The trick here is to give the slotted elements a flex-basis of 100%. This\n    // makes them each as big as the component, spreading them out equally. The\n    // slidingStageContent container will only big as big as the host too, but\n    // all the elements slotted inside it will still be visible even if they\n    // fall outside its bounds. By translating the container left or right, we\n    // can cause any individual slotted item to become the sole visible item.\n    return templateFrom.html`\n      <style>\n        :host {\n          display: inline-flex;\n          overflow: hidden;\n          position: relative;\n        }\n\n        #slidingStageContent {\n          display: flex;\n          height: 100%;\n          min-width: 100%;\n          will-change: transform;\n        }\n\n        ::slotted(*) {\n          flex: 0 0 100%;\n          max-width: 100%; /* For Firefox */\n        }\n      </style>\n      <div id=\"slidingStageContent\" role=\"none\">\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\nexport default SlidingStage;\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  goDown,\n  goLeft,\n  goRight,\n  goUp,\n  swipeDown,\n  swipeLeft,\n  swipeRight,\n  swipeUp,\n} from \"./internal.js\";\n\n/**\n * Map swipe gestures to direction semantics.\n *\n * @module SwipeDirectionMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function SwipeDirectionMixin(Base) {\n  // The class prototype added by the mixin.\n  return class SwipeDirection extends Base {\n    /**\n     * Invokes the [goUp](internal#internal.goUp) method.\n     */\n    [swipeDown]() {\n      this[goUp]();\n    }\n\n    /**\n     * Invokes the [goRight](internal#internal.goRight) method.\n     */\n    [swipeLeft]() {\n      this[goRight]();\n    }\n\n    /**\n     * Invokes the [goLeft](internal#internal.goLeft) method.\n     */\n    [swipeRight]() {\n      this[goLeft]();\n    }\n\n    /**\n     * Invokes the [goDown](internal#internal.goDown) method.\n     */\n    [swipeUp]() {\n      this[goDown]();\n    }\n  };\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  defaultState,\n  firstRender,\n  raiseChangeEvents,\n  render,\n  setState,\n  state,\n  stateEffects,\n  swipeDown,\n  swipeLeft,\n  swipeRight,\n  swipeStart,\n  swipeTarget,\n  swipeUp,\n} from \"./internal.js\";\nimport { canScrollInDirection } from \"./scrolling.js\";\n\n/** @type {any} */\nconst deferToScrollingKey = Symbol(\"deferToScrolling\");\n/** @type {any} */\nconst multiTouchKey = Symbol(\"multiTouch\");\nconst previousTimeKey = Symbol(\"previousTime\");\nconst previousVelocityKey = Symbol(\"previousVelocity\");\nconst previousXKey = Symbol(\"previousX\");\nconst previousYKey = Symbol(\"previousY\");\nconst startXKey = Symbol(\"startX\");\nconst startYKey = Symbol(\"startY\");\nconst touchSequenceAxisKey = Symbol(\"touchSequenceAxis\");\n\n/**\n * Map touch events to swipe gestures.\n *\n * @module TouchSwipeMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function TouchSwipeMixin(Base) {\n  // The class prototype added by the mixin.\n  return class TouchSwipe extends Base {\n    [render](/** @type {ChangedFlags} */ changed) {\n      if (super[render]) {\n        super[render](changed);\n      }\n\n      if (this[firstRender]) {\n        // In all touch events, only handle single touches. We don't want to\n        // inadvertently do work when the user's trying to pinch-zoom for\n        // example. TODO: Touch events should probably be factored out into its\n        // own mixin.\n\n        // Prefer using the older touch events if supported.\n        // See the rationale for this in the comments for rendered.\n        if (\"TouchEvent\" in window) {\n          this.addEventListener(\"touchstart\", async (event) => {\n            this[raiseChangeEvents] = true;\n            if (this[multiTouchKey]) {\n              return;\n            } else if (event.touches.length === 1) {\n              const { clientX, clientY } = event.changedTouches[0];\n              gestureStart(this, clientX, clientY);\n            } else {\n              this[multiTouchKey] = true;\n            }\n            await Promise.resolve();\n            this[raiseChangeEvents] = false;\n          });\n\n          this.addEventListener(\"touchmove\", async (event) => {\n            this[raiseChangeEvents] = true;\n            if (\n              !this[multiTouchKey] &&\n              event.touches.length === 1 &&\n              event.target\n            ) {\n              const { clientX, clientY } = event.changedTouches[0];\n              const handled = gestureContinue(\n                this,\n                clientX,\n                clientY,\n                event.target\n              );\n              if (handled) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n            await Promise.resolve();\n            this[raiseChangeEvents] = false;\n          });\n\n          this.addEventListener(\"touchend\", async (event) => {\n            this[raiseChangeEvents] = true;\n            if (event.touches.length === 0 && event.target) {\n              // All touches removed; gesture is complete.\n              if (!this[multiTouchKey]) {\n                // Single-touch swipe has finished.\n                const { clientX, clientY } = event.changedTouches[0];\n                gestureEnd(this, clientX, clientY, event.target);\n              }\n              this[multiTouchKey] = false;\n            }\n            await Promise.resolve();\n            this[raiseChangeEvents] = false;\n          });\n        } else if (\"PointerEvent\" in window) {\n          // Use pointer events.\n          this.addEventListener(\"pointerdown\", async (event) => {\n            this[raiseChangeEvents] = true;\n            if (isEventForPenOrPrimaryTouch(event)) {\n              const { clientX, clientY } = event;\n              gestureStart(this, clientX, clientY);\n            }\n            await Promise.resolve();\n            this[raiseChangeEvents] = false;\n          });\n\n          this.addEventListener(\"pointermove\", async (event) => {\n            this[raiseChangeEvents] = true;\n            if (isEventForPenOrPrimaryTouch(event) && event.target) {\n              const { clientX, clientY } = event;\n              const handled = gestureContinue(\n                this,\n                clientX,\n                clientY,\n                event.target\n              );\n              if (handled) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n            await Promise.resolve();\n            this[raiseChangeEvents] = false;\n          });\n\n          this.addEventListener(\"pointerup\", async (event) => {\n            this[raiseChangeEvents] = true;\n            if (isEventForPenOrPrimaryTouch(event) && event.target) {\n              const { clientX, clientY } = event;\n              gestureEnd(this, clientX, clientY, event.target);\n            }\n            await Promise.resolve();\n            this[raiseChangeEvents] = false;\n          });\n        }\n\n        //\n        // Choosing a touch-action value is unfortunately fraught with issues.\n        //\n        // As best as we can tell, touch-action has different behavior with the\n        // older TouchEvents and the newer PointerEvents.\n        //\n        // With TouchEvents, we can set touch-action: manipulation, and get what\n        // we want in all cases. In particular, a touch-sensitive component on a\n        // scrolling surface will still be able to scroll if TouchSwipeMixin\n        // declines to handle a touch event. (It appears that more specific\n        // touch-action values like \"pan-x\" would prevent touch scrolling in the\n        // cross-axis, where as \"manipulation\" allows cross-axis scrolling.)\n        //\n        // With PointerEvents, it looks like we can get what we want in many\n        // cases with touch-action: none, but that has the unfortunate\n        // side-effect of disabling useful default interactions like scrolling\n        // with touch.\n        //\n        // For this reason, we currently prefer using TouchEvents. Those are\n        // supported In Chrome, Safari, and Firefox. (As of Oct 2018, MDN says\n        // TouchEvents are not supported in Safari, but as far as we can tell,\n        // they actually are.) On those browsers, we set touch-action:\n        // manipulation.\n        //\n        // That leaves Edge, where we're forced to use PointerEvents, and the best\n        // touch-action we can find is \"none\". That allows many use cases to\n        // function properly. However, components using TouchSwipeMixin on a\n        // scrolling surface in Edge won't be able to retain support for built-in\n        // touch features like scrolling.\n        //\n        this.style.touchAction =\n          \"TouchEvent\" in window ? \"manipulation\" : \"none\";\n      }\n    }\n\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        swipeAxis: \"horizontal\",\n        swipeDownWillCommit: false,\n        swipeFraction: null,\n        swipeFractionMax: 1,\n        swipeFractionMin: -1,\n        swipeLeftWillCommit: false,\n        swipeRightWillCommit: false,\n        swipeStartX: null,\n        swipeStartY: null,\n        swipeUpWillCommit: false,\n      });\n    }\n\n    /**\n     * See [swipeTarget](internal#internal.swipeTarget).\n     *\n     * @property internal.swipeTarget\n     * @memberof TouchSwipeMixin\n     * @type {HTMLElement}\n     */\n    get [swipeTarget]() {\n      const base = super[swipeTarget];\n      return base || this;\n    }\n\n    [stateEffects](state, changed) {\n      const effects = super[stateEffects]\n        ? super[stateEffects](state, changed)\n        : {};\n\n      // If the swipeFraction crosses the -0.5 or 0.5 mark, update our notion of\n      // whether we'll commit an operation if the swipe were to finish at that\n      // point. This definition is compatible with one defined by\n      // TrackpadSwipeMixin.\n      if (changed.swipeFraction) {\n        const { swipeAxis, swipeFraction } = state;\n        if (swipeFraction !== null) {\n          if (swipeAxis === \"horizontal\") {\n            Object.assign(effects, {\n              swipeLeftWillCommit: swipeFraction <= -0.5,\n              swipeRightWillCommit: swipeFraction >= 0.5,\n            });\n          } else {\n            Object.assign(effects, {\n              swipeUpWillCommit: swipeFraction <= -0.5,\n              swipeDownWillCommit: swipeFraction >= 0.5,\n            });\n          }\n        }\n      }\n\n      return effects;\n    }\n  };\n}\n\n/**\n * Return true if the pointer event is for the pen, or the primary touch point.\n *\n * @private\n * @param {PointerEvent} event\n */\nfunction isEventForPenOrPrimaryTouch(event) {\n  return (\n    event.pointerType === \"pen\" ||\n    (event.pointerType === \"touch\" && event.isPrimary)\n  );\n}\n\n/**\n * Invoked when the user has moved during a touch operation.\n *\n * @private\n * @param {ReactiveElement} element\n * @param {number} clientX\n * @param {number} clientY\n * @param {EventTarget} eventTarget\n */\nfunction gestureContinue(element, clientX, clientY, eventTarget) {\n  /** @type {any} */ const cast = element;\n\n  // Calculate and save the velocity since the last event. If this is the last\n  // movement of the gesture, this velocity will be used to determine whether\n  // the user is trying to flick.\n  const { swipeAxis, swipeFractionMax, swipeFractionMin } = element[state];\n  const deltaX = clientX - cast[previousXKey];\n  const deltaY = clientY - cast[previousYKey];\n  const now = Date.now();\n  const deltaTime = now - cast[previousTimeKey];\n  const deltaAlongAxis = swipeAxis === \"vertical\" ? deltaY : deltaX;\n  const velocity = (deltaAlongAxis / deltaTime) * 1000;\n\n  cast[previousXKey] = clientX;\n  cast[previousYKey] = clientY;\n  cast[previousTimeKey] = now;\n  cast[previousVelocityKey] = velocity;\n\n  // Was this specific event more vertical or more horizontal?\n  const eventAxis =\n    Math.abs(deltaY) > Math.abs(deltaX) ? \"vertical\" : \"horizontal\";\n\n  // Is this the first touch move event in a swipe sequence?\n  const eventBeginsSequence = cast[touchSequenceAxisKey] === null;\n  if (eventBeginsSequence) {\n    // This first event's axis will determine which axis we'll respect for the\n    // rest of the sequence.\n    cast[touchSequenceAxisKey] = eventAxis;\n  } else if (eventAxis !== cast[touchSequenceAxisKey]) {\n    // This event continues a sequence. If the event's axis is perpendicular to\n    // the sequence's axis, we'll absorb this event. E.g., if the user started a\n    // vertical swipe (to scroll, say), then we absorb all subsequent horizontal\n    // touch events in the sequence.\n    return true;\n  }\n\n  if (eventAxis !== swipeAxis) {\n    // Move wasn't along the axis we care about, ignore it.\n    return false;\n  }\n\n  // Scrolling initially takes precedence over swiping.\n  if (cast[deferToScrollingKey]) {\n    // Predict whether the browser's default behavior for this event would cause\n    // the swipe target or any of its ancestors to scroll.\n    const downOrRight = deltaAlongAxis < 0;\n    const willScroll = canScrollInDirection(\n      eventTarget,\n      swipeAxis,\n      downOrRight\n    );\n    if (willScroll) {\n      // Don't interfere with scrolling.\n      return false;\n    }\n  }\n\n  // Since we know we're not defering to scrolling, we can start tracking\n  // the start of the swipe.\n  if (!cast[startXKey]) {\n    cast[startXKey] = clientX;\n  }\n  if (!cast[startYKey]) {\n    cast[startYKey] = clientY;\n  }\n\n  const fraction = getSwipeFraction(element, clientX, clientY);\n  const swipeFraction = Math.max(\n    Math.min(fraction, swipeFractionMax),\n    swipeFractionMin\n  );\n  if (element[state].swipeFraction === swipeFraction) {\n    // Already at min or max; no need for us to do anything.\n    return false;\n  }\n\n  // If we get this far, we have a touch event we want to handle.\n\n  // From this point on, swiping will take precedence over scrolling.\n  cast[deferToScrollingKey] = false;\n\n  element[setState]({ swipeFraction });\n\n  // Indicate that the event was handled. It'd be nicer if we didn't have\n  // to do this so that, e.g., a user could be swiping left and right\n  // while simultaneously scrolling up and down. (Native touch apps can do\n  // that.) However, Mobile Safari wants to handle swipe events near the\n  // page and interpret them as navigations. To avoid having a horiziontal\n  // swipe misintepreted as a navigation, we indicate that we've handled\n  // the event, and prevent default behavior.\n  return true;\n}\n\n/**\n * Invoked when the user has finished a touch operation.\n *\n * @private\n * @param {ReactiveElement} element\n * @param {number} clientX\n * @param {number} clientY\n * @param {EventTarget} eventTarget\n */\n/* eslint-disable no-unused-vars */\nfunction gestureEnd(element, clientX, clientY, eventTarget) {\n  // Examine velocity of last movement to see if user is flicking.\n  const velocity = /** @type {any} */ (element)[previousVelocityKey];\n  const flickThresholdVelocity = 800; // speed in pixels/second\n\n  const { swipeAxis, swipeFraction } = element[state];\n  const vertical = swipeAxis === \"vertical\";\n\n  // Scrolling takes precedence over flick gestures.\n  let willScroll = false;\n  if (element[deferToScrollingKey]) {\n    // Predict whether the browser's default behavior for this event would cause\n    // the swipe target or any of its ancestors to scroll.\n    const downOrRight = velocity < 0;\n    willScroll = canScrollInDirection(eventTarget, swipeAxis, downOrRight);\n  }\n\n  // We only count a flick if the swipe wasn't already going in the opposite\n  // direction. E.g., if the user begins a swipe to the left, then flicks right,\n  // that doesn't count, because the user may have simply been trying to\n  // undo/cancel the swipe to the left.\n  if (!willScroll) {\n    let flickPositive;\n    if (velocity >= flickThresholdVelocity && swipeFraction >= 0) {\n      // Flicked right/down at high speed.\n      flickPositive = true;\n      if (vertical) {\n        element[setState]({\n          swipeDownWillCommit: true,\n        });\n      } else {\n        element[setState]({\n          swipeRightWillCommit: true,\n        });\n      }\n    } else if (velocity <= -flickThresholdVelocity && swipeFraction <= 0) {\n      // Flicked left/up at high speed.\n      flickPositive = false;\n      if (vertical) {\n        element[setState]({\n          swipeUpWillCommit: true,\n        });\n      } else {\n        element[setState]({\n          swipeLeftWillCommit: true,\n        });\n      }\n    } else {\n      // Finished at low speed.\n      // If the user swiped far enough to commit a gesture, handle it now.\n      if (\n        element[state].swipeLeftWillCommit ||\n        element[state].swipeUpWillCommit\n      ) {\n        flickPositive = false;\n      } else if (\n        element[state].swipeRightWillCommit ||\n        element[state].swipeDownWillCommit\n      ) {\n        flickPositive = true;\n      }\n    }\n\n    if (typeof flickPositive !== \"undefined\") {\n      const gesture = vertical\n        ? flickPositive\n          ? swipeDown\n          : swipeUp\n        : flickPositive\n        ? swipeRight\n        : swipeLeft;\n      // If component has method for indicated gesture, invoke it.\n      if (gesture && element[gesture]) {\n        element[gesture]();\n      }\n    }\n  }\n\n  /** @type {any} */ (element)[touchSequenceAxisKey] = null;\n\n  element[setState]({\n    swipeFraction: null,\n  });\n}\n\n/**\n * Invoked when the user has begun a touch operation.\n *\n * @private\n * @param {ReactiveElement} element\n * @param {number} clientX\n * @param {number} clientY\n */\nfunction gestureStart(element, clientX, clientY) {\n  /** @type {any} */ const cast = element;\n  cast[deferToScrollingKey] = true;\n  cast[previousTimeKey] = Date.now();\n  cast[previousVelocityKey] = 0;\n  cast[previousXKey] = clientX;\n  cast[previousYKey] = clientY;\n  cast[startXKey] = null;\n  cast[startYKey] = null;\n  cast[touchSequenceAxisKey] = null;\n\n  element[setState]({\n    swipeFraction: 0,\n  });\n\n  // Let component know a swipe is starting.\n  if (element[swipeStart]) {\n    element[swipeStart](clientX, clientY);\n  }\n}\n\n/**\n * Return the fraction represented by the swipe to the given x/y.\n *\n * @private\n * @param {ReactiveElement} element\n * @param {number} x\n * @param {number} y\n */\nfunction getSwipeFraction(element, x, y) {\n  const { swipeAxis } = element[state];\n  /** @type {any} */ const cast = element;\n  const vertical = swipeAxis === \"vertical\";\n  const dragDistance = vertical ? y - cast[startYKey] : x - cast[startXKey];\n  const swipeTargetSize = vertical\n    ? element[swipeTarget].offsetHeight\n    : element[swipeTarget].offsetWidth;\n  const fraction = swipeTargetSize > 0 ? dragDistance / swipeTargetSize : 0;\n  return fraction;\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  defaultState,\n  raiseChangeEvents,\n  scrollTarget,\n  setState,\n  state,\n  stateEffects,\n  swipeDown,\n  swipeLeft,\n  swipeRight,\n  swipeStart,\n  swipeTarget,\n  swipeUp,\n} from \"./internal.js\";\nimport { canScrollInDirection } from \"./scrolling.js\";\n\nconst absorbDecelerationKey = Symbol(\"absorbDeceleration\");\nconst deferToScrollingKey = Symbol(\"deferToScrolling\");\nconst lastDeltaXKey = Symbol(\"lastDeltaX\");\nconst lastDeltaYKey = Symbol(\"lastDeltaY\");\nconst lastWheelTimeoutKey = Symbol(\"lastWheelTimeout\");\nconst postGestureDelayCompleteKey = Symbol(\"postGestureDelayComplete\");\nconst wheelDistanceKey = Symbol(\"wheelDistance\");\nconst wheelSequenceAxisKey = Symbol(\"wheelSequenceAxis\");\n\n// Time we wait following a gesture before paying attention to wheel events\n// again.\nconst POST_GESTURE_TIME = 250;\n\n// Time we wait after the last wheel event before we reset things.\nconst WHEEL_TIME = 100;\n\n/**\n * Map trackpad events to swipe gestures.\n *\n * @module TrackpadSwipeMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function TrackpadSwipeMixin(Base) {\n  // The class prototype added by the mixin.\n  return class TrackpadSwipe extends Base {\n    constructor() {\n      // @ts-ignore\n      super();\n      this.addEventListener(\"wheel\", async (event) => {\n        this[raiseChangeEvents] = true;\n        const handled = handleWheel(this, event);\n        if (handled) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        await Promise.resolve();\n        this[raiseChangeEvents] = false;\n      });\n      resetWheelTracking(this);\n    }\n\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        swipeAxis: \"horizontal\",\n        swipeDownWillCommit: false,\n        swipeFraction: null,\n        swipeFractionMax: 1,\n        swipeFractionMin: -1,\n        swipeLeftWillCommit: false,\n        swipeRightWillCommit: false,\n        swipeUpWillCommit: false,\n      });\n    }\n\n    /**\n     * See [swipeTarget](internal#internal.swipeTarget).\n     *\n     * @property internal.swipeTarget\n     * @memberof TrackpadSwipeMixin\n     * @type {HTMLElement}\n     */\n    get [swipeTarget]() {\n      const base = super[swipeTarget];\n      return base || this;\n    }\n\n    [stateEffects](state, changed) {\n      const effects = super[stateEffects]\n        ? super[stateEffects](state, changed)\n        : {};\n\n      // If the swipeFraction crosses the -0.5 or 0.5 mark, update our notion of\n      // whether we'll commit an operation if the swipe were to finish at that\n      // point. This definition is compatible with one defined by\n      // TouchSwipeMixin.\n      if (changed.swipeFraction) {\n        const { swipeAxis, swipeFraction } = state;\n        if (swipeFraction !== null) {\n          if (swipeAxis === \"horizontal\") {\n            Object.assign(effects, {\n              swipeLeftWillCommit: swipeFraction <= -0.5,\n              swipeRightWillCommit: swipeFraction >= 0.5,\n            });\n          } else {\n            Object.assign(effects, {\n              swipeUpWillCommit: swipeFraction <= -0.5,\n              swipeDownWillCommit: swipeFraction >= 0.5,\n            });\n          }\n        }\n      }\n\n      return effects;\n    }\n  };\n}\n\n/**\n * A wheel event has been generated. This could be a real wheel event, or it\n * could be fake (see notes in the header).\n *\n * This handler uses several strategies to try to approximate native trackpad\n * swipe gesture.\n *\n * If the user has dragged enough to cause a gesture, then for a short delay\n * following that gesture, subsequent wheel events will be ignored.\n *\n * Furthermore, following a gesture, we ignore all wheel events until we receive\n * at least one event where the event's deltaX (distance traveled) is *greater*\n * than the previous event's deltaX. This helps us filter out the fake wheel\n * events generated by the browser to simulate deceleration.\n *\n * @private\n * @param {ReactiveElement} element\n * @param {WheelEvent} event\n */\nfunction handleWheel(element, event) {\n  /** @type {any} */ const cast = element;\n\n  // Since we have a new wheel event, reset our timer waiting for the last\n  // wheel event to pass.\n  if (cast[lastWheelTimeoutKey]) {\n    clearTimeout(cast[lastWheelTimeoutKey]);\n  }\n  cast[lastWheelTimeoutKey] = setTimeout(async () => {\n    element[raiseChangeEvents] = true;\n    wheelTimedOut(element);\n    await Promise.resolve();\n    cast[raiseChangeEvents] = false;\n  }, WHEEL_TIME);\n\n  const deltaX = event.deltaX;\n  const deltaY = event.deltaY;\n\n  // See if component event represents acceleration or deceleration.\n  const { swipeAxis, swipeFractionMax, swipeFractionMin } = element[state];\n  const vertical = swipeAxis === \"vertical\";\n  const acceleration = vertical\n    ? Math.sign(deltaY) * (deltaY - cast[lastDeltaYKey])\n    : Math.sign(deltaX) * (deltaX - cast[lastDeltaXKey]);\n  cast[lastDeltaXKey] = deltaX;\n  cast[lastDeltaYKey] = deltaY;\n\n  // Is this the first wheel event in a swipe sequence?\n  const eventBeginsSwipe = cast[wheelSequenceAxisKey] === null;\n\n  // Was this specific event more vertical or more horizontal?\n  const eventAxis =\n    Math.abs(deltaY) > Math.abs(deltaX) ? \"vertical\" : \"horizontal\";\n\n  if (!eventBeginsSwipe && eventAxis !== cast[wheelSequenceAxisKey]) {\n    // This event continues a sequence. If the event's axis is perpendicular to\n    // the sequence's axis, we'll absorb this event. E.g., if the user started a\n    // vertical swipe (to scroll, say), then we absorb all subsequent horizontal\n    // wheel events in the sequence.\n    return true;\n  }\n\n  if (eventAxis !== swipeAxis) {\n    // Move wasn't along the axis we care about, ignore it.\n    return false;\n  }\n\n  if (!cast[postGestureDelayCompleteKey]) {\n    // It's too soon after a gesture; absorb the event.\n    return true;\n  }\n\n  if (acceleration > 0) {\n    // The events are not (or are no longer) decelerating, so we can start\n    // paying attention to them again.\n    cast[absorbDecelerationKey] = false;\n  } else if (cast[absorbDecelerationKey]) {\n    // The wheel event was likely faked to simulate deceleration; absorb it.\n    return true;\n  }\n\n  // Scrolling initially takes precedence over swiping.\n  if (cast[deferToScrollingKey]) {\n    // Predict whether the browser's default behavior for this event would cause\n    // the swipe target or any of its ancestors to scroll.\n    const target = element[scrollTarget] || element;\n    const deltaAlongAxis = vertical ? deltaY : deltaX;\n    const downOrRight = deltaAlongAxis > 0;\n    const willScroll = canScrollInDirection(target, swipeAxis, downOrRight);\n    if (willScroll) {\n      // Don't interfere with scrolling.\n      return false;\n    }\n  }\n\n  // If we get this far, we have a wheel event we want to handle.\n\n  // From this point on, swiping will take precedence over scrolling.\n  cast[deferToScrollingKey] = false;\n\n  if (eventBeginsSwipe) {\n    // This first event's axis will determine which axis we'll respect for the\n    // rest of the sequence.\n    cast[wheelSequenceAxisKey] = eventAxis;\n    if (element[swipeStart]) {\n      // Let component know a swipe is starting.\n      element[swipeStart](event.clientX, event.clientY);\n    }\n  }\n\n  cast[wheelDistanceKey] -= vertical ? deltaY : deltaX;\n\n  // Update the travel fraction of the component being navigated.\n  const targetDimension = vertical\n    ? cast[swipeTarget].offsetHeight\n    : cast[swipeTarget].offsetWidth;\n  let fraction =\n    targetDimension > 0 ? cast[wheelDistanceKey] / targetDimension : 0;\n  fraction = Math.sign(fraction) * Math.min(Math.abs(fraction), 1);\n  const swipeFraction = Math.max(\n    Math.min(fraction, swipeFractionMax),\n    swipeFractionMin\n  );\n\n  // If the user has dragged enough to reach the previous/next item, then\n  // perform the gesture immediately. (We don't need to wait for the wheel to\n  // time out.)\n  let gesture;\n  if (swipeFraction === -1) {\n    gesture = vertical ? swipeUp : swipeLeft;\n  } else if (swipeFraction === 1) {\n    gesture = vertical ? swipeDown : swipeRight;\n  }\n  if (gesture) {\n    performImmediateGesture(element, gesture);\n  } else {\n    element[setState]({ swipeFraction });\n  }\n\n  return true;\n}\n\n/**\n * Immediately perform the indicated gesture.\n *\n * @private\n * @param {ReactiveElement} element\n * @param {string} gesture\n */\nfunction performImmediateGesture(element, gesture) {\n  if (element[gesture]) {\n    element[gesture]();\n  }\n  // Reset our tracking following the gesture. Because the user may still be\n  // swiping on the trackpad, we reset things slightly differently than when the\n  // wheel times out.\n  /** @type {any} */ const cast = element;\n  cast[absorbDecelerationKey] = true;\n  cast[deferToScrollingKey] = true;\n  cast[postGestureDelayCompleteKey] = false;\n  cast[wheelDistanceKey] = 0;\n  cast[wheelSequenceAxisKey] = null;\n  setTimeout(() => {\n    cast[postGestureDelayCompleteKey] = true;\n  }, POST_GESTURE_TIME);\n  // We've handled a gesture, so reset notion of what gestures are in progress.\n  element[setState]({\n    swipeDownWillCommit: false,\n    swipeFraction: null,\n    swipeLeftWillCommit: false,\n    swipeRightWillCommit: false,\n    swipeUpWillCommit: false,\n  });\n}\n\n/**\n * Reset all state related to the tracking of the wheel.\n *\n * @private\n * @param {ReactiveElement} element\n */\nfunction resetWheelTracking(element) {\n  /** @type {any} */ const cast = element;\n  cast[absorbDecelerationKey] = false;\n  cast[deferToScrollingKey] = true;\n  cast[lastDeltaXKey] = 0;\n  cast[lastDeltaYKey] = 0;\n  cast[postGestureDelayCompleteKey] = true;\n  cast[wheelDistanceKey] = 0;\n  cast[wheelSequenceAxisKey] = null;\n  if (cast[lastWheelTimeoutKey]) {\n    clearTimeout(cast[lastWheelTimeoutKey]);\n    cast[lastWheelTimeoutKey] = null;\n  }\n}\n\n/**\n * A sufficiently long period of time has passed since the last wheel event.\n * We snap the selection to the closest item, then reset our state.\n *\n * @private\n * @param {ReactiveElement} element\n */\nasync function wheelTimedOut(element) {\n  // If the user swiped far enough to commit a gesture, handle it now.\n  let gesture;\n  if (element[state].swipeDownWillCommit) {\n    gesture = swipeDown;\n  } else if (element[state].swipeLeftWillCommit) {\n    gesture = swipeLeft;\n  } else if (element[state].swipeRightWillCommit) {\n    gesture = swipeRight;\n  } else if (element[state].swipeUpWillCommit) {\n    gesture = swipeUp;\n  }\n\n  resetWheelTracking(element);\n  element[setState]({\n    swipeDownWillCommit: false,\n    swipeFraction: null,\n    swipeLeftWillCommit: false,\n    swipeRightWillCommit: false,\n    swipeUpWillCommit: false,\n  });\n\n  if (gesture && element[gesture]) {\n    await element[gesture]();\n  }\n}\n","import { forwardFocus } from \"../core/dom.js\";\nimport { fragmentFrom } from \"../core/htmlLiterals.js\";\nimport AriaListMixin from \"./AriaListMixin.js\";\nimport ArrowDirectionMixin from \"./ArrowDirectionMixin.js\";\nimport DirectionCursorMixin from \"./DirectionCursorMixin.js\";\nimport Explorer from \"./Explorer.js\";\nimport FocusVisibleMixin from \"./FocusVisibleMixin.js\";\nimport {\n  defaultState,\n  ids,\n  render,\n  setState,\n  state,\n  stateEffects,\n  swipeTarget,\n  template,\n} from \"./internal.js\";\nimport KeyboardDirectionMixin from \"./KeyboardDirectionMixin.js\";\nimport KeyboardMixin from \"./KeyboardMixin.js\";\nimport SlidingStage from \"./SlidingStage.js\";\nimport SwipeDirectionMixin from \"./SwipeDirectionMixin.js\";\nimport TouchSwipeMixin from \"./TouchSwipeMixin.js\";\nimport TrackpadSwipeMixin from \"./TrackpadSwipeMixin.js\";\n\nconst Base = AriaListMixin(\n  ArrowDirectionMixin(\n    DirectionCursorMixin(\n      FocusVisibleMixin(\n        KeyboardDirectionMixin(\n          KeyboardMixin(\n            SwipeDirectionMixin(TouchSwipeMixin(TrackpadSwipeMixin(Explorer)))\n          )\n        )\n      )\n    )\n  )\n);\n\n/**\n * Carousel with a sliding effect and navigation controls\n *\n * Allows a user to navigate a horizontal set of items with touch, mouse,\n * keyboard, or trackpad. This component shows a small dot for each of its\n * items, and displays a sliding effect when moving between items.\n *\n * @inherits Explorer\n * @mixes AriaListMixin\n * @mixes ArrowDirectionMixin\n * @mixes DirectionCursorMixin\n * @mixes FocusVisibleMixin\n * @mixes KeyboardDirectionMixin\n * @mixes KeyboardMixin\n * @mixes SwipeDirectionMixin\n * @mixes TouchSwipeMixin\n * @mixes TrackpadSwipeMixin\n * @part {SlidingStage} stage\n */\nclass Carousel extends Base {\n  get [defaultState]() {\n    // Show arrow buttons if device has a fine-grained pointer (e.g., mouse).\n    // As of Mar 14 2018, Firefox does not yet support pointer queries, in which\n    // case we assume use of a mouse.\n    const pointerQuery = \"(pointer: fine)\";\n    const mediaQueryList = window.matchMedia(pointerQuery);\n    const showArrowButtons =\n      mediaQueryList.media === pointerQuery ? mediaQueryList.matches : true;\n    return Object.assign(super[defaultState], {\n      orientation: \"horizontal\",\n      proxyListOverlap: true,\n      proxyListPosition: \"bottom\",\n      showArrowButtons,\n      stagePartType: SlidingStage,\n    });\n  }\n\n  get orientation() {\n    return this[state].orientation;\n  }\n  set orientation(orientation) {\n    this[setState]({ orientation });\n  }\n\n  [render](/** @type {ChangedFlags} */ changed) {\n    if (changed.proxyListPartType && this[ids].proxyList) {\n      // Turn off focus handling for old proxy list.\n      const proxyList = this[ids].proxyList;\n      if (proxyList instanceof HTMLElement) {\n        forwardFocus(proxyList, null);\n      }\n    }\n\n    super[render](changed);\n\n    if (changed.stagePartType || changed.orientation) {\n      /** @type {any} */ const cast = this[ids].stage;\n      if (\"orientation\" in cast) {\n        cast.orientation = this[state].orientation;\n      }\n    }\n\n    if (changed.proxyListPartType) {\n      // Keep focus off of the proxies and onto the carousel itself.\n      const proxyList = this[ids].proxyList;\n      if (proxyList instanceof HTMLElement) {\n        forwardFocus(proxyList, this);\n      }\n      proxyList.removeAttribute(\"tabindex\");\n    }\n\n    if (changed.orientation || changed.proxyListPartType) {\n      /** @type {any} */ const cast = this[ids].proxyList;\n      if (\"orientation\" in cast) {\n        cast.orientation = this[state].orientation;\n      }\n    }\n\n    if (changed.stagePartType) {\n      this[ids].stage.removeAttribute(\"tabindex\");\n    }\n\n    const proxies = this.proxies;\n    if (changed.proxies && proxies) {\n      // Make proxies not focusable.\n      proxies.forEach((proxy) => {\n        if (proxy instanceof HTMLElement) {\n          proxy.tabIndex = -1;\n        }\n      });\n    }\n  }\n\n  get [swipeTarget]() {\n    const base = super[swipeTarget];\n    const stage = this[ids].stage;\n    return stage instanceof HTMLElement ? stage : base;\n  }\n\n  [stateEffects](state, changed) {\n    const effects = super[stateEffects](state, changed);\n\n    // When orientation changes, have swipe axis follow suit, and also\n    // set the default proxy list position.\n    if (changed.orientation) {\n      const proxyListPosition =\n        state.orientation === \"horizontal\" ? \"bottom\" : \"right\";\n      Object.assign(effects, {\n        proxyListPosition,\n        swipeAxis: state.orientation,\n      });\n    }\n\n    return effects;\n  }\n\n  get [template]() {\n    const result = super[template];\n\n    const stage = result.content.querySelector(\"#stage\");\n    /** @type {any} */ const cast = this;\n    cast[ArrowDirectionMixin.wrap](stage);\n\n    const proxyList = result.content.getElementById(\"proxyList\");\n    if (proxyList) {\n      proxyList.removeAttribute(\"tabindex\");\n    }\n\n    result.content.append(\n      fragmentFrom.html`\n        <style>\n          [part~=\"stage\"] {\n            height: 100%;\n            width: 100%;\n          }\n        </style>\n      `\n    );\n\n    return result;\n  }\n}\n\nexport default Carousel;\n","import {\n  defaultState,\n  ids,\n  render,\n  state,\n  template,\n} from \"../base/internal.js\";\nimport { fragmentFrom } from \"../core/htmlLiterals.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport PlainArrowDirectionButton from \"./PlainArrowDirectionButton.js\";\n\n/**\n * ArrowDirectionMixin styles in the Plain reference design system\n *\n * @module PlainArrowDirectionMixin\n * @param {Constructor<ReactiveElement>} Base\n * @part {PlainArrowDirectionButton} arrow-button\n * @part arrow-icon - both of the default arrow icons used in the arrow buttons\n * @part arrow-icon-next - the arrow icon that points to the next item\n * @part arrow-icon-previous - the arrow icon that points to the previous item\n */\nexport default function PlainArrowDirectionMixin(Base) {\n  return class PlainArrowDirection extends Base {\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        arrowButtonPartType: PlainArrowDirectionButton,\n      });\n    }\n\n    [render](/** @type {ChangedFlags} */ changed) {\n      super[render](changed);\n\n      // Rotate the default icons for vertical orientation, flip the default\n      // icons for right-to-left.\n      if (changed.orientation || changed.rightToLeft) {\n        const { orientation, rightToLeft } = this[state];\n        const vertical = orientation === \"vertical\";\n        const transform = vertical\n          ? \"rotate(90deg)\"\n          : rightToLeft\n          ? \"rotateZ(180deg)\"\n          : \"\";\n        if (this[ids].arrowIconPrevious) {\n          this[ids].arrowIconPrevious.style.transform = transform;\n        }\n        if (this[ids].arrowIconNext) {\n          this[ids].arrowIconNext.style.transform = transform;\n        }\n      }\n\n      // Apply dark mode to buttons.\n      if (changed.dark) {\n        const { dark } = this[state];\n        /** @type {any} */ const arrowButtonPrevious = this[ids]\n          .arrowButtonPrevious;\n        /** @type {any} */ const arrowButtonNext = this[ids].arrowButtonNext;\n        if (\"dark\" in arrowButtonPrevious) {\n          /** @type {any} */ (arrowButtonPrevious).dark = dark;\n        }\n        if (\"dark\" in arrowButtonNext) {\n          /** @type {any} */ (arrowButtonNext).dark = dark;\n        }\n      }\n    }\n\n    get [template]() {\n      const result = super[template];\n\n      // Insert our icons into the button slots.\n      const arrowButtonPrevious = result.content.querySelector(\n        'slot[name=\"arrowButtonPrevious\"]'\n      );\n      if (arrowButtonPrevious) {\n        arrowButtonPrevious.append(\n          fragmentFrom.html`\n            <svg\n              id=\"arrowIconPrevious\"\n              part=\"arrow-icon arrow-icon-previous\"\n              viewBox=\"0 0 24 24\"\n              preserveAspectRatio=\"xMidYMid meet\"\n              style=\"fill: currentColor; height: 1em; width: 1em;\"\n            >\n              <g>\n                <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path>\n              </g>\n            </svg>\n          `\n        );\n      }\n      const arrowButtonNext = result.content.querySelector(\n        'slot[name=\"arrowButtonNext\"]'\n      );\n      if (arrowButtonNext) {\n        arrowButtonNext.append(\n          fragmentFrom.html`\n            <svg\n              id=\"arrowIconNext\"\n              part=\"arrow-icon arrow-icon-next\"\n              viewBox=\"0 0 24 24\"\n              preserveAspectRatio=\"xMidYMid meet\"\n              style=\"fill: currentColor; height: 1em; width: 1em;\"\n            >\n              <g>\n                <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path>\n              </g>\n            </svg>\n          `\n        );\n      }\n\n      return result;\n    }\n  };\n}\n","import ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  checkSize,\n  defaultState,\n  rendered,\n  setState,\n  state,\n} from \"./internal.js\";\n\n/** @type {any} */ let resizeObserver;\n\n/**\n * Lets a component know when it has been resized.\n *\n * If/when the component changes size, this mixin updates the `clientHeight` and\n * `clientWidth` state members.\n *\n * This mixin requires `ResizeObserver`, which (as of May 2020) is supported in\n * all modern browsers.\n *\n * @module ResizeMixin\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function ResizeMixin(Base) {\n  return class Resize extends Base {\n    // Check this element's current height and width and, if either has changed,\n    // update the corresponding state members.\n    [checkSize]() {\n      if (super[checkSize]) {\n        super[checkSize]();\n      }\n      const { clientHeight, clientWidth } = this;\n      const sizeChanged =\n        clientHeight !== this[state].clientHeight ||\n        clientWidth !== this[state].clientWidth;\n      if (sizeChanged) {\n        this[setState]({\n          clientHeight,\n          clientWidth,\n        });\n      }\n    }\n\n    connectedCallback() {\n      if (super.connectedCallback) {\n        super.connectedCallback();\n      }\n      if (resizeObserver) {\n        resizeObserver.observe(this);\n      }\n    }\n\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        clientHeight: this.clientHeight,\n        clientWidth: this.clientWidth,\n      });\n    }\n\n    disconnectedCallback() {\n      if (super.disconnectedCallback) {\n        super.disconnectedCallback();\n      }\n      if (resizeObserver) {\n        resizeObserver.unobserve(this);\n      }\n    }\n\n    [rendered](/** @type {ChangedFlags} */ changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n\n      this[checkSize]();\n    }\n  };\n}\n\n// Is ResizeObserve supported?\nconst Observer = window[\"ResizeObserver\"];\nif (typeof Observer !== \"undefined\") {\n  // Use ResizeObserver.\n  resizeObserver = new Observer((/** @type {any[]} */ entries) => {\n    entries.forEach((entry) => {\n      // In theory, the \"content size\" reported by ResizeObserver appears to be\n      // the same as the clientHeight/clientWidth. Neither should include\n      // padding. But since this theory is not explicitly confirmed by the\n      // ResizeObserver docs, it seems safest to reference the element's current\n      // client size.\n      const { target } = entry;\n      const { clientHeight, clientWidth } = target;\n      target[setState]({\n        clientHeight,\n        clientWidth,\n      });\n    });\n  });\n}\n","import { templateFrom } from \"../core/htmlLiterals.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\";\nimport CursorAPIMixin from \"./CursorAPIMixin.js\";\nimport CursorSelectMixin from \"./CursorSelectMixin.js\";\nimport EffectMixin from \"./EffectMixin.js\";\nimport {\n  defaultState,\n  ids,\n  render,\n  setState,\n  state,\n  template,\n} from \"./internal.js\";\nimport ItemsAPIMixin from \"./ItemsAPIMixin.js\";\nimport ItemsCursorMixin from \"./ItemsCursorMixin.js\";\nimport LanguageDirectionMixin from \"./LanguageDirectionMixin.js\";\nimport ResizeMixin from \"./ResizeMixin.js\";\nimport SingleSelectAPIMixin from \"./SingleSelectAPIMixin.js\";\nimport SlotItemsMixin from \"./SlotItemsMixin.js\";\nimport TapCursorMixin from \"./TapCursorMixin.js\";\n\nconst Base = CursorAPIMixin(\n  CursorSelectMixin(\n    EffectMixin(\n      ItemsAPIMixin(\n        ItemsCursorMixin(\n          LanguageDirectionMixin(\n            ResizeMixin(\n              SingleSelectAPIMixin(\n                SlotItemsMixin(TapCursorMixin(ReactiveElement))\n              )\n            )\n          )\n        )\n      )\n    )\n  )\n);\n\n/**\n * Horizontal strip of items with the selected item centered\n *\n * This keeps the selected item centered unless that item is at either end of\n * the list.\n *\n * @inherits ReactiveElement\n * @mixes CursorAPIMixin\n * @mixes CursorSelectMixin\n * @mixes EffectMixin\n * @mixes ItemsAPIMixin\n * @mixes ItemsCursorMixin\n * @mixes LanguageDirectionMixin\n * @mixes ResizeMixin\n * @mixes SingleSelectAPIMixin\n * @mixes SlotItemsMixin\n * @mixes TapCursorMixin\n */\nclass CenteredStrip extends Base {\n  get [defaultState]() {\n    return Object.assign(super[defaultState], {\n      currentItemRequired: true,\n      orientation: \"horizontal\",\n    });\n  }\n\n  get orientation() {\n    return this[state].orientation;\n  }\n  set orientation(orientation) {\n    this[setState]({ orientation });\n  }\n\n  [render](/** @type {ChangedFlags} */ changed) {\n    super[render](changed);\n    if (\n      changed.clientWidth ||\n      changed.enableEffects ||\n      changed.rightToLeft ||\n      changed.currentIndex ||\n      changed.swipeFraction\n    ) {\n      const { orientation, rightToLeft, currentIndex } = this[state];\n      const sign = rightToLeft ? 1 : -1;\n      const swiping = this[state].swipeFraction != null;\n      const swipeFraction = this[state].swipeFraction || 0;\n      const selectionFraction = currentIndex + sign * swipeFraction;\n\n      const vertical = orientation === \"vertical\";\n      const leadingEdge = vertical ? \"offsetTop\" : \"offsetLeft\";\n      const dimension = vertical ? \"offsetHeight\" : \"offsetWidth\";\n\n      // @ts-ignore\n      const stripContainerDimension = this[ids].stripContainer[dimension];\n      // @ts-ignore\n      const stripDimension = this[ids].strip[dimension];\n\n      // It seems this method can be invoked before the strip any height/width.\n      // We only render if the height/width is positive.\n      if (stripDimension > 0) {\n        let translation = 0; // The amount by which we'll shift content horizontally\n        let justifyContent = \"\";\n        if (stripDimension <= stripContainerDimension) {\n          // Container can show all items. Center all items.\n          justifyContent = \"center\";\n        } else {\n          // Items are wider than container can show.\n          // Center the selected item.\n          // During swipes, center a pro-rated point between the midpoints\n          // of the items on either side of the fractional selection.\n\n          const itemBeforeIndex = Math.floor(selectionFraction);\n          const itemBefore = this.items && this.items[itemBeforeIndex];\n          const itemBeforeCenter =\n            itemBefore instanceof HTMLElement\n              ? itemBefore[leadingEdge] + itemBefore[dimension] / 2\n              : 0;\n          const itemAfterIndex = itemBeforeIndex + 1;\n          const itemAfter = this.items && this.items[itemAfterIndex];\n          const itemAfterCenter =\n            itemAfter instanceof HTMLElement\n              ? itemAfter[leadingEdge] + itemAfter[dimension] / 2\n              : 0;\n\n          let center = 0;\n          if (itemBefore && !itemAfter) {\n            center = itemBeforeCenter;\n          } else if (!itemBefore && itemAfter) {\n            center = itemAfterCenter;\n          } else if (itemBefore && itemAfter) {\n            const offsetFraction = selectionFraction - itemBeforeIndex;\n            // TODO: sign\n            center =\n              itemBeforeCenter +\n              offsetFraction * (itemAfterCenter - itemBeforeCenter);\n          }\n          if (!vertical && rightToLeft) {\n            center = stripDimension - center;\n          }\n\n          // Try to center the selected item.\n          translation = center - stripContainerDimension / 2;\n\n          // Constrain x to avoid showing space on either end.\n          translation = Math.max(translation, 0);\n          translation = Math.min(\n            translation,\n            stripDimension - stripContainerDimension\n          );\n\n          translation *= sign;\n        }\n\n        const axis = vertical ? \"Y\" : \"X\";\n        const transform = `translate${axis}(${translation}px)`;\n        const showTransition = this[state].enableEffects && !swiping;\n        Object.assign(this[ids].strip.style, {\n          transform,\n          transition: showTransition ? \"transform 0.25s\" : \"none\",\n        });\n\n        this[ids].stripContainer.style.justifyContent = justifyContent;\n      }\n    }\n    if (changed.items || changed.currentIndex) {\n      // Apply `selected` style to the selected item only.\n      const { currentIndex, items } = this[state];\n      if (items) {\n        items.forEach((item, index) => {\n          item.toggleAttribute(\"selected\", index === currentIndex);\n        });\n      }\n    }\n    if (changed.orientation) {\n      const flexDirection =\n        this[state].orientation === \"horizontal\" ? \"\" : \"column\";\n      this[ids].stripContainer.style.flexDirection = flexDirection;\n      this[ids].strip.style.flexDirection = flexDirection;\n    }\n  }\n\n  get swipeFraction() {\n    return this[state].swipeFraction;\n  }\n  set swipeFraction(swipeFraction) {\n    this[setState]({ swipeFraction });\n  }\n\n  get [template]() {\n    return templateFrom.html`\n      <style>\n        :host {\n          cursor: default;\n          display: inline-flex;\n          -webkit-tap-highlight-color: transparent;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          -webkit-user-select: none;\n          user-select: none;\n        }\n\n        #stripContainer {\n          display: flex;\n          flex: 1;\n          overflow: hidden;\n          position: relative;\n        }\n\n        #strip {\n          display: inline-flex;\n          position: relative;\n          transition: transform 0.25s;\n        }\n      </style>\n      <div id=\"stripContainer\" role=\"none\">\n        <div id=\"strip\" role=\"none\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\nexport default CenteredStrip;\n","import CenteredStrip from \"../base/CenteredStrip.js\";\nimport {\n  defaultState,\n  render,\n  setState,\n  state,\n  template,\n} from \"../base/internal.js\";\nimport { fragmentFrom } from \"../core/htmlLiterals.js\";\n\nconst opacityMinimum = 0.4;\nconst opacityMaximum = 1.0;\n\n/**\n * Centered strip showing unselected items with partial opacity\n *\n * [`CenteredStripOpacity` is used by Carousel for dots or\n * thumbnails](/demos/centeredStripOpacity.html)\n *\n * For a variation that uses a highlight color instead of opacity, see\n * [CenteredStripHighlight](CenteredStripHighlight).\n *\n * @inherits CenteredStrip\n */\nclass PlainCenteredStripOpacity extends CenteredStrip {\n  get [defaultState]() {\n    return Object.assign(super[defaultState], {\n      transitionDuration: 250,\n    });\n  }\n\n  [render](/** @type {ChangedFlags} */ changed) {\n    super[render](changed);\n    if (\n      changed.currentIndex ||\n      changed.enableEffects ||\n      changed.items ||\n      changed.rightToLeft ||\n      changed.swipeFraction ||\n      changed.transitionDuration\n    ) {\n      // Apply opacity based on which item is current.\n      const {\n        currentIndex,\n        enableEffects,\n        items,\n        rightToLeft,\n        swipeFraction,\n        transitionDuration,\n      } = this[state];\n      if (items) {\n        const sign = rightToLeft ? 1 : -1;\n        const swiping = swipeFraction != null;\n        const selectionFraction = sign * (swipeFraction || 0);\n        const showTransition = enableEffects && !swiping;\n        const opacityTransitionValue = showTransition\n          ? `${transitionDuration / 1000}s linear`\n          : null;\n        items.forEach((item, index) => {\n          const existingTransition = getComputedStyle(item).transition;\n          const transition = mergeSinglePropertyTransition(\n            existingTransition,\n            \"opacity\",\n            opacityTransitionValue\n          );\n          const opacity = opacityForItemWithIndex(\n            index,\n            currentIndex,\n            selectionFraction\n          );\n          Object.assign(item.style, {\n            opacity,\n            transition,\n          });\n        });\n      }\n    }\n  }\n\n  get [template]() {\n    const result = super[template];\n    result.content.append(\n      fragmentFrom.html`\n        <style>\n          ::slotted(*) {\n            opacity: ${opacityMinimum.toString()};\n          }\n        </style>\n      `\n    );\n    return result;\n  }\n\n  get transitionDuration() {\n    return this[state].transitionDuration;\n  }\n  set transitionDuration(transitionDuration) {\n    this[setState]({ transitionDuration });\n  }\n}\n\n/**\n * @private\n * @param {number} index\n * @param {number} currentIndex\n * @param {number} selectionFraction\n */\nfunction opacityForItemWithIndex(index, currentIndex, selectionFraction) {\n  const opacityRange = opacityMaximum - opacityMinimum;\n  const fractionalIndex = currentIndex + selectionFraction;\n  const leftIndex = Math.floor(fractionalIndex);\n  const rightIndex = Math.ceil(fractionalIndex);\n  let awayIndex = selectionFraction >= 0 ? leftIndex : rightIndex;\n  let towardIndex = selectionFraction >= 0 ? rightIndex : leftIndex;\n  const truncatedSwipeFraction =\n    selectionFraction < 0\n      ? Math.ceil(selectionFraction)\n      : Math.floor(selectionFraction);\n  const progress = selectionFraction - truncatedSwipeFraction;\n  const opacityProgressThroughRange = Math.abs(progress) * opacityRange;\n\n  let opacity;\n  if (index === awayIndex) {\n    opacity = opacityMaximum - opacityProgressThroughRange;\n  } else if (index === towardIndex) {\n    opacity = opacityMinimum + opacityProgressThroughRange;\n  } else {\n    opacity = null; // Element will pick up minimum opacity from CSS.\n  }\n\n  return opacity;\n}\n\n/**\n * Given an existing CSS `transition` value, merge a transition for the property\n * with the indicated name and value on top of it. If the value is null, remove\n * the transition for the indicated property. Return a new string that can be\n * set as the value of an element's `transition` style property.\n *\n * This helper exists because the DOM represents the entire set of property\n * transitions on an object as a single string, with no easy way to selectively\n * update just a single property value.\n *\n * @private\n * @param {string} transition\n * @param {string} name\n * @param {string|null} value\n */\nfunction mergeSinglePropertyTransition(transition, name, value) {\n  // Properties are a name, whitespace, value.\n  const propertyRegex = /([\\w-]+)\\s+([^,]+)/g;\n  let match = propertyRegex.exec(transition);\n  while (match && match.groups) {\n    if (match.groups.name === name) {\n      break;\n    }\n    match = propertyRegex.exec(transition);\n  }\n  const definition = value ? `${name} ${value}` : \"\";\n  if (match) {\n    // Transition contains the indicated property.\n    // Splice in a new value at that point.\n    const start = match.index;\n    const length = match[0].length;\n    return (\n      transition.substr(0, start) +\n      definition +\n      transition.substr(start + length)\n    );\n  } else {\n    // Transition doesn't yet contain the indicated property; append it.\n    return [transition, definition].join(\", \");\n  }\n}\n\nexport default PlainCenteredStripOpacity;\n","import { defaultState, render, state, template } from \"../base/internal.js\";\nimport { fragmentFrom } from \"../core/htmlLiterals.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport PlainCenteredStripOpacity from \"./PlainCenteredStripOpacity.js\";\n\n/**\n * Carousel styles in the Plain reference design system\n *\n * @module PlainCarouselMixin\n * @param {Constructor<ReactiveElement>} Base\n * @part {PlainCenteredStripOpacity} proxy-list\n */\nexport default function PlainCarouselMixin(Base) {\n  return class PlainCarousel extends Base {\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        proxyListPartType: PlainCenteredStripOpacity,\n      });\n    }\n\n    [render](changed) {\n      super[render](changed);\n\n      const proxies = this.proxies;\n      if (\n        (changed.dark || changed.detectDarkMode || changed.proxies) &&\n        proxies\n      ) {\n        // Apply dark mode to proxies.\n        const { dark, detectDarkMode } = this[state];\n        proxies.forEach((proxy) => {\n          /** @type {any} */ const cast = proxy;\n          if (\"dark\" in cast) {\n            cast.dark = dark;\n          }\n          if (\"detectDarkMode\" in cast) {\n            cast.detectDarkMode = detectDarkMode;\n          }\n        });\n      }\n    }\n\n    get [template]() {\n      const result = super[template];\n      result.content.append(\n        fragmentFrom.html`\n          <style>\n            [part~=\"arrow-icon\"] {\n              font-size: 48px;\n            }\n          </style>\n        `\n      );\n      return result;\n    }\n  };\n}\n","import { setInternalState } from \"../core/dom.js\";\nimport ReactiveElement from \"../core/ReactiveElement.js\"; // eslint-disable-line no-unused-vars\nimport {\n  defaultState,\n  nativeInternals,\n  render,\n  rendered,\n  setState,\n  state,\n} from \"./internal.js\";\n\n/**\n * Tracks whether the element is currently selected.\n *\n * @module SelectableMixin\n * @state selected\n * @param {Constructor<ReactiveElement>} Base\n */\nexport default function SelectableMixin(Base) {\n  // The class prototype added by the mixin.\n  return class Selectable extends Base {\n    constructor() {\n      super();\n      /** @type {any} */ const cast = this;\n      if (!this[nativeInternals] && cast.attachInternals) {\n        this[nativeInternals] = cast.attachInternals();\n      }\n    }\n\n    get [defaultState]() {\n      return Object.assign(super[defaultState] || {}, {\n        selected: false,\n      });\n    }\n\n    [render](/** @type {ChangedFlags} */ changed) {\n      super[render](changed);\n      if (changed.selected) {\n        const { selected } = this[state];\n        setInternalState(this, \"selected\", selected);\n      }\n    }\n\n    [rendered](/** @type {ChangedFlags} */ changed) {\n      if (super[rendered]) {\n        super[rendered](changed);\n      }\n\n      // TODO: How do we know whether to raise this if selection is set by Menu? */\n      if (changed.selected /* && this[raiseChangeEvents] */) {\n        const { selected } = this[state];\n        const oldEvent = new CustomEvent(\"selected-changed\", {\n          bubbles: true,\n          detail: { selected },\n        });\n        this.dispatchEvent(oldEvent);\n        /**\n         * Raised when the `selected` property changes.\n         *\n         * @event selectedchange\n         */\n        const event = new CustomEvent(\"selectedchange\", {\n          bubbles: true,\n          detail: { selected },\n        });\n        this.dispatchEvent(event);\n      }\n    }\n\n    /**\n     * True if the element is currently selected.\n     *\n     * @type {boolean}\n     * @default false\n     */\n    get selected() {\n      return this[state].selected;\n    }\n    set selected(selected) {\n      // Note: AttributeMarshallingMixin will recognize `selected` as the name of\n      // attribute that should be parsed as a boolean attribute, and so will\n      // handling parsing it for us.\n      this[setState]({ selected });\n    }\n  };\n}\n","import Button from \"./Button.js\";\nimport SelectableMixin from \"./SelectableMixin.js\";\n\nconst Base = SelectableMixin(Button);\n\n/**\n * A button that tracks a selection state\n *\n * @inherits Button\n * @mixes SelectableMixin\n */\nclass SelectableButton extends Base {}\n\nexport default SelectableButton;\n","import DarkModeMixin from \"../base/DarkModeMixin.js\";\nimport { firstRender, render, template } from \"../base/internal.js\";\nimport SelectableButton from \"../base/SelectableButton.js\";\nimport { fragmentFrom } from \"../core/htmlLiterals.js\";\n\nconst Base = DarkModeMixin(SelectableButton);\n\n/**\n * A small dot component in the Plain reference design system\n *\n * This used as the default proxy element to represent items in carousels like\n * [PlainCarousel](PlainCarousel).\n *\n * @inherits SelectableButton\n * @mixes DarkModeMixin\n */\nclass PlainPageDot extends Base {\n  [render](/** @type {ChangedFlags} */ changed) {\n    super[render](changed);\n\n    if (this[firstRender]) {\n      this.setAttribute(\"role\", \"none\");\n    }\n  }\n\n  get [template]() {\n    const result = super[template];\n    result.content.append(\n      fragmentFrom.html`\n        <style>\n          :host {\n            background-color: black;\n            border-radius: 7px;\n            box-shadow: 0 0 1px 1px rgba(0, 0, 0, 0.5);\n            box-sizing: border-box;\n            cursor: pointer;\n            height: 8px;\n            margin: 7px 5px;\n            padding: 0;\n            transition: opacity 0.2s;\n            width: 8px;\n          }\n\n          :host([dark]) {\n            background-color: white;\n          }\n\n          @media (min-width: 768px) {\n            :host {\n              height: 12px;\n              width: 12px;\n            }\n          }\n        </style>\n      `\n    );\n    return result;\n  }\n}\n\nexport default PlainPageDot;\n","import Carousel from \"../base/Carousel.js\";\nimport DarkModeMixin from \"../base/DarkModeMixin.js\";\nimport { defaultState } from \"../base/internal.js\";\nimport PlainArrowDirectionMixin from \"./PlainArrowDirectionMixin.js\";\nimport PlainCarouselMixin from \"./PlainCarouselMixin.js\";\nimport PlainPageDot from \"./PlainPageDot.js\";\n\n/**\n * Carousel component in the Plain reference design system\n *\n * @inherits Carousel\n * @mixes DarkModeMixin\n * @mixes PlainArrowDirectionMixin\n * @mixes PlainCarouselMixin\n * @part {PlainPageDot} proxy\n */\nclass PlainCarousel extends DarkModeMixin(\n  PlainArrowDirectionMixin(PlainCarouselMixin(Carousel))\n) {\n  get [defaultState]() {\n    return Object.assign(super[defaultState], {\n      proxyPartType: PlainPageDot,\n    });\n  }\n}\n\nexport default PlainCarousel;\n","import SlidingStage from \"../base/SlidingStage.js\";\n\n/**\n * SlidingStage component in the Plain reference design system\n *\n * @inherits SlidingStage\n */\nclass PlainSlidingStage extends SlidingStage {}\n\nexport default PlainSlidingStage;\n","import {\n  defaultState,\n  shadowRootMode,\n} from \"../node_modules/elix/src/base/internal.js\";\nimport PlainArrowDirectionButton from \"../node_modules/elix/src/plain/PlainArrowDirectionButton.js\";\nimport PlainCarousel from \"../node_modules/elix/src/plain/PlainCarousel.js\";\nimport PlainCenteredStripOpacity from \"../node_modules/elix/src/plain/PlainCenteredStripOpacity.js\";\nimport PlainPageDot from \"../node_modules/elix/src/plain/PlainPageDot.js\";\nimport PlainSlidingStage from \"../node_modules/elix/src/plain/PlainSlidingStage.js\";\n\nclass TestArrowDirectionButton extends PlainArrowDirectionButton {\n  get [shadowRootMode]() {\n    return \"closed\";\n  }\n}\n\nclass TestPageDot extends PlainPageDot {\n  get [shadowRootMode]() {\n    return \"closed\";\n  }\n}\n\nclass TestCenteredStripOpacity extends PlainCenteredStripOpacity {\n  get [shadowRootMode]() {\n    return \"closed\";\n  }\n}\n\nclass TestSlidingStage extends PlainSlidingStage {\n  get [shadowRootMode]() {\n    return \"closed\";\n  }\n}\n\nclass TestCarousel extends PlainCarousel {\n  get [defaultState]() {\n    return Object.assign(super[defaultState], {\n      arrowButtonPartType: TestArrowDirectionButton,\n      proxyListPartType: TestCenteredStripOpacity,\n      proxyPartType: TestPageDot,\n      stagePartType: TestSlidingStage,\n    });\n  }\n\n  get [shadowRootMode]() {\n    return \"closed\";\n  }\n}\ncustomElements.define(\"test-carousel\", TestCarousel);\n"],"names":["defaultState","coreInternal.defaultState","delegatesFocus","coreInternal.delegatesFocus","firstRender","coreInternal.firstRender","focusTarget","coreInternal.focusTarget","hasDynamicTemplate","coreInternal.hasDynamicTemplate","ids","coreInternal.ids","nativeInternals","coreInternal.nativeInternals","raiseChangeEvents","coreInternal.raiseChangeEvents","render","coreInternal.render","renderChanges","coreInternal.renderChanges","rendered","coreInternal.rendered","rendering","coreInternal.rendering","setState","coreInternal.setState","shadowRoot","coreInternal.shadowRoot","shadowRootMode","coreInternal.shadowRootMode","state","coreInternal.state","stateEffects","coreInternal.stateEffects","template","coreInternal.template","Base","renderParts","fractionalSelection.dampenListSelection","deferToScrollingKey"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAc,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,kBAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACjC;AACA;AACA;AACA;AACO,MAAM,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,iBAAiB,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAc,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC;;ACrO1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,yBAAyB,GAAG,MAAM,CAAC,2BAA2B,CAAC,CAAC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AACjD;AACA;AACA;AACA;AACO,MAAMA,cAAY,GAAGC,YAAyB,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,gBAAc,GAAGC,cAA2B,CAAC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,aAAW,GAAGC,WAAwB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,aAAW,GAAGC,WAAwB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,kBAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,oBAAkB,GAAGC,kBAA+B,CAAC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,KAAG,GAAGC,GAAgB,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AAC/C;AACA;AACA;AACA;AACO,MAAMC,iBAAe,GAAGC,eAA4B,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,mBAAiB,GAAGC,iBAA8B,CAAC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,QAAM,GAAGC,MAAmB,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,eAAa,GAAGC,aAA0B,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,mBAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,UAAQ,GAAGC,QAAqB,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,WAAS,GAAGC,SAAsB,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,UAAQ,GAAGC,QAAqB,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,YAAU,GAAGC,UAAuB,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,gBAAc,GAAGC,cAA2B,CAAC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,OAAK,GAAGC,KAAkB,CAAC;AACxC;AACO,MAAMC,cAAY,GAAGC,YAAyB,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,iBAAiB,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAC7C;AACA;AACA;A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"}